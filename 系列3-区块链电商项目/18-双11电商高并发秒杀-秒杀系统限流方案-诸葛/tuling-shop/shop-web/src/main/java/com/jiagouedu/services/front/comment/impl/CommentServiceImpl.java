package com.jiagouedu.services.front.comment.impl;import com.jiagouedu.core.ServersManager;import com.jiagouedu.services.front.account.AccountService;import com.jiagouedu.services.front.account.bean.Account;import com.jiagouedu.services.front.comment.CommentService;import com.jiagouedu.services.front.comment.bean.Comment;import com.jiagouedu.services.front.comment.dao.CommentDao;import com.jiagouedu.services.front.order.OrderService;import com.jiagouedu.services.front.order.bean.Order;import com.jiagouedu.services.front.orderdetail.OrderdetailService;import com.jiagouedu.services.front.orderdetail.bean.Orderdetail;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import javax.annotation.Resource;import java.util.List;@Service("commentServiceFront")public class CommentServiceImpl extends ServersManager<Comment, CommentDao> implements		CommentService {    @Resource(name = "commentDaoFront")    @Override    public void setDao(CommentDao commentDao) {        this.dao = commentDao;    }    @Autowired	private OrderdetailService orderdetailService;	@Autowired	private OrderService orderService;	@Autowired	private AccountService accountService;	public void setAccountService(AccountService accountService) {		this.accountService = accountService;	}	public void setOrderdetailService(OrderdetailService orderdetailService) {		this.orderdetailService = orderdetailService;	}	public void setOrderService(OrderService orderService) {		this.orderService = orderService;	}	/**	 * 插入评论，并同时更新指定的订单项为已评论。	 */	public int insertList(List<Comment> comments){		if(comments==null || comments.size()==0){			throw new NullPointerException();		}				for(int i=0;i<comments.size();i++){			Comment item = comments.get(i);			dao.insert(item);			//设置指定的订单项为			Orderdetail orderdetail = new Orderdetail();			orderdetail.setId(String.valueOf(item.getOrderdetailID()));			orderdetail.setIsComment("y");//设置为已评价			//TODO:XXXX			//orderdetailDao.update(orderdetail);		}				//检查用户的所有订单项是否都已进行了评论，如果都评论过了，则更新订单的closedComment字段为y，表示订单评论功能关闭。		String orderid = comments.get(0).getOrderID();		int commentsCount = dao.selectCount(orderid);		//TODO:XXXX		//int orderdetailCount = orderdetailDao.selectCount(orderid);		//TODO:XXXX	/*	if(commentsCount > 0 && orderdetailCount==commentsCount){			Order order = new Order();			order.setId(String.valueOf(orderid));			order.setClosedComment(Order.order_closedComment_y);//关闭点评			//orderDao.update(order);		}*/				//点评送积分。点评一个订单项则送该用户5个积分，此数字可以再后台进行配置		int addScore = comments.size() * 5;				Account acc = new Account();		acc.setAccount(comments.get(0).getAccount());		acc.setAddScore(addScore);		accountService.updateScore(acc);		return 1;	}}