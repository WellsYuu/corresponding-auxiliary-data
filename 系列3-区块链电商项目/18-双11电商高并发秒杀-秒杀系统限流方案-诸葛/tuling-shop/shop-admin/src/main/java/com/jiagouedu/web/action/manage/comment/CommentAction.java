package com.jiagouedu.web.action.manage.comment;import com.jiagouedu.core.ManageContainer;import com.jiagouedu.core.dao.page.PagerModel;import com.jiagouedu.services.manage.comment.CommentService;import com.jiagouedu.services.manage.comment.bean.Comment;import com.jiagouedu.web.action.BaseController;import com.jiagouedu.web.util.RequestHolder;import org.apache.commons.lang.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;/** * 评论管理 * * @author wukong 图灵学院 QQ:245553999 */@Controller@RequestMapping("/manage/comment/")public class CommentAction extends BaseController<Comment> {    private static final long serialVersionUID = 1L;    @Autowired    private CommentService commentService;    private static final String page_toList = "/manage/comment/commentList";    private static final String page_redirect_selectAllList = "redirect:selectList";    private static final String page_toAdd = "/manage/comment/commentEdit";    private static final String page_toEdit = "/manage/comment/commentEdit";    private CommentAction() {        super.page_toList = page_toList;        super.page_toAdd = page_toAdd;        super.page_toEdit = page_toEdit;    }    @Override    public CommentService getService() {        return commentService;    }    @Override    protected void selectListAfter(PagerModel pager) {        pager.setPagerUrl("selectList");    }    public void setCommentService(CommentService commentService) {        this.commentService = commentService;    }    @Override    public void insertAfter(Comment e) {        e.clear();    }    /**     * 设置选中的评论显示     *     * @return     * @throws Exception     */    @RequestMapping(value = "updateStatusY", method = RequestMethod.POST)    public String updateStatusY(String[] ids) throws Exception {        if (ids != null && ids.length > 0) {            commentService.updateStatus(ids, Comment.comment_status_y);        }        return page_redirect_selectAllList;    }    /**     * 设置选中的评论不显示     *     * @return     * @throws Exception     */    @RequestMapping(value = "updateStatusN", method = RequestMethod.POST)    public String updateStatusN(String[] ids) throws Exception {        if (ids != null && ids.length > 0) {            commentService.updateStatus(ids, Comment.comment_status_n);        }        return page_redirect_selectAllList;    }    /**     * 回复用户评论     *     * @return     * @throws Exception     */    @RequestMapping(value = "updateReply", method = RequestMethod.POST)    public String updateReply(Comment e) throws Exception {        if (StringUtils.isBlank(e.getReply()) || StringUtils.isBlank(e.getId())) {            throw new NullPointerException(ManageContainer.OrderAction_param_null);        }//		String update = getRequest().getParameter("update");//y:修改回复//		if(update.equals("y")){//			Comment ee = commentService.selectById(e.getId());//			if(ee==null){//				throw new NullPointerException("查询不到评论信息!");//			}//			//			ee.setReply(e.getReply());//		}        Comment c = new Comment();        c.setId(e.getId());        c.setReply(e.getReply());        commentService.update(c);//		return selectList();        return page_redirect_selectAllList;    }    @Override    protected void setParamWhenInitQuery(Comment e) {        super.setParamWhenInitQuery(e);        String selectCommentFromIndex = RequestHolder.getRequest().getParameter("selectCommentFromIndex");        if (StringUtils.isNotBlank(selectCommentFromIndex)) {            e.setSelectCommentFromIndex(Boolean.valueOf(selectCommentFromIndex));        }    }}