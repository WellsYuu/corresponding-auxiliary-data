dist nginx
  modules accept_failed beginners_guide chunked_encoding_from_backend configure configuring_https_servers contributing_changes control converting_rewrite_rules daemon_master_process_off debugging_log development_guide events example faq freebsd_tuning hash howto_build_on_win32 install license_copyright load_balancing nginx nginx_dtrace_pid_provider ngx_core_module ngx_google_perftools_module ngx_http_access_module ngx_http_addition_module ngx_http_api_module_head ngx_http_auth_basic_module ngx_http_auth_jwt_module ngx_http_auth_request_module ngx_http_autoindex_module ngx_http_browser_module ngx_http_charset_module ngx_http_core_module ngx_http_dav_module ngx_http_empty_gif_module ngx_http_f4f_module ngx_http_fastcgi_module ngx_http_flv_module ngx_http_geo_module ngx_http_geoip_module ngx_http_gunzip_module ngx_http_gzip_module ngx_http_gzip_static_module ngx_http_headers_module ngx_http_hls_module ngx_http_image_filter_module ngx_http_index_module ngx_http_js_module ngx_http_keyval_module ngx_http_limit_conn_module ngx_http_limit_req_module ngx_http_log_module ngx_http_map_module ngx_http_memcached_module ngx_http_mirror_module ngx_http_mp4_module ngx_http_perl_module ngx_http_proxy_module ngx_http_random_index_module ngx_http_realip_module ngx_http_referer_module ngx_http_rewrite_module ngx_http_scgi_module ngx_http_secure_link_module ngx_http_session_log_module ngx_http_slice_module ngx_http_spdy_module ngx_http_split_clients_module ngx_http_ssi_module ngx_http_ssl_module ngx_http_status_module ngx_http_stub_status_module ngx_http_sub_module ngx_http_upstream_conf_module ngx_http_upstream_hc_module ngx_http_upstream_module ngx_http_userid_module ngx_http_uwsgi_module ngx_http_v2_module ngx_http_xslt_module ngx_mail_auth_http_module ngx_mail_core_module ngx_mail_imap_module ngx_mail_pop3_module ngx_mail_proxy_module ngx_mail_smtp_module ngx_mail_ssl_module ngx_stream_access_module ngx_stream_core_module ngx_stream_geo_module ngx_stream_geoip_module ngx_stream_js_module ngx_stream_limit_conn_module ngx_stream_log_module ngx_stream_map_module ngx_stream_proxy_module ngx_stream_realip_module ngx_stream_return_module ngx_stream_split_clients_module ngx_stream_ssl_module ngx_stream_ssl_preread_module ngx_stream_upstream_hc_module ngx_stream_upstream_module njs_about request_processing server_names stream_processing switches syntax sys_errlist syslog variables_in_config websocket welcome_nginx_facebook windows

module accept_failed
  section 18 652 name

module beginners_guide
  section 18 1416 name
  section 1416 3769 starting, stopping, and reloading configuration
  section 3769 4787 configuration fileâ€™s structure
  section 4787 8623 serving static content
  section 8623 12072 setting up a simple proxy server
  section 12072 13450 setting up fastcgi proxying

module chunked_encoding_from_backend
  section 18 873 name

module configure
  section 18 6456 name

module configuring_https_servers
  section 18 1734 name
  section 1734 3242 https server optimization
  section 3242 6922 ssl certificate chains
  section 6922 7754 a single http/https server
  section 7754 11984 name-based https servers
  section 9049 10382 an ssl certificate with several names
  section 10382 11984 server name indication
  section 11984 13298 compatibility

module contributing_changes
  section 18 78 name
  section 78 314 getting sources
  section 314 2526 formatting changes
  section 2526 3123 before submitting
  section 3123 3393 submitting changes
  section 3393 3529 license

module control
  section 18 899 name
  section 899 3111 changing configuration
  section 3111 3735 rotating log-files
  section 3735 7797 upgrading executable on the fly

module converting_rewrite_rules
  section 18 86 name
  section 86 1951 a redirect to a main site
  section 1951 2913 converting mongrel rules

module daemon_master_process_off
  section 18 929 name

module debugging_log
  section 18 1494 name
  section 1494 1787 debugging log for selected clients
  section 1787 2386 logging to a cyclic memory buffer

module development_guide
  section 18 72 name
  section 72 3386 introduction
  section 94 801 code layout
  section 801 1206 include files
  section 1206 1384 integers
  section 1384 2060 common return codes
  section 2060 3386 error handling
  section 3386 11498 strings
  section 3403 5774 overview
  section 5774 6865 formatting
  section 6865 7927 numeric conversion
  section 7927 11498 regular expressions
  section 11498 14003 time
  section 14003 27732 containers
  section 14023 15566 array
  section 15566 17895 list
  section 17895 19664 queue
  section 19664 22687 red-black tree
  section 22687 27732 hash
  section 25490 27732 wildcard matching
  section 27732 36598 memory management
  section 27759 28574 heap
  section 28574 31890 pool
  section 31890 36598 shared memory
  section 36598 39740 logging
  section 39740 43927 cycle
  section 43927 47662 buffer
  section 47662 50914 networking
  section 47682 50914 connection
  section 50914 58198 events
  section 50930 52879 event
  section 52879 53963 i/o events
  section 53963 54671 timer events
  section 54671 56411 posted events
  section 56411 58198 event loop
  section 58198 63004 processes
  section 63004 67278 threads
  section 67278 85195 modules
  section 67295 70726 adding new modules
  section 70726 77153 core modules
  section 77153 85195 configuration directives
  section 85195 163287 http
  section 85209 88128 connection
  section 88128 97943 request
  section 97943 103527 configuration
  section 103527 110725 phases
  section 110725 118385 variables
  section 110744 113686 accessing existing variables
  section 113686 118385 creating variables
  section 118385 120781 complex values
  section 120781 124216 request redirection
  section 124216 131245 subrequests
  section 131245 133222 request finalization
  section 133222 137936 request body
  section 137936 143280 response
  section 138311 139635 response header
  section 139635 143280 header filters
  section 143280 144768 response body
  section 144768 150081 body filters
  section 150081 151214 building filter modules
  section 151214 154766 buffer reuse
  section 154766 163287 load balancing

module events
  section 18 1854 name

module example
  section 18 4367 name

module faq
  section 18 325 name

module freebsd_tuning
  section 18 83 name
  section 83 302 syncache and syncookies
  section 302 1826 listen queues
  section 1826 1877 sockets and files
  section 1877 3863 socket buffers
  section 3863 7821 mbufs, mbuf clusters, etc.
  section 7821 7961 proxying
  section 7961 8042 finalizing connection
  section 8042 8099 i386 specific tuning
  section 8099 8189 minor optimizations

module hash
  section 18 1414 name

module howto_build_on_win32
  section 18 108 name
  section 108 755 prerequisites
  section 755 2370 build steps
  section 2370 2435 see also

module install
  section 18 146 name
  section 146 254 installation on linux
  section 254 661 installation on freebsd
  section 661 931 building from sources

module license_copyright
  section 18 729 name

module load_balancing
  section 18 85 name
  section 85 529 introduction
  section 529 1038 load balancing methods
  section 1038 2254 default load balancing configuration
  section 2254 3035 least connected load balancing
  section 3035 4178 session persistence
  section 4178 5402 weighted load balancing
  section 5402 6402 health checks
  section 6402 7533 further reading

module nginx
  section 18 62 name
  section 62 821 introduction
  section 821 1198 how-to
  section 1198 1312 development
  section 1312 6621 modules reference

module nginx_dtrace_pid_provider
  section 18 5035 name
  section 5035 5301 see also

module ngx_core_module
  section 17 71 name
  section 71 297 example configuration
  section 297 14814 directives
  section 316 930 accept_mutex
  section 930 1262 accept_mutex_delay
  section 1262 1457 daemon
  section 1457 2371 debug_connection
  section 2371 2766 debug_points
  section 2766 4414 error_log
  section 4414 5712 env
  section 5712 5894 events
  section 5894 6229 include
  section 6229 6458 load_module
  section 6458 6903 lock_file
  section 6903 7131 master_process
  section 7131 7582 multi_accept
  section 7582 8241 pcre_jit
  section 8241 8417 pid
  section 8417 8560 ssl_engine
  section 8560 9325 thread_pool
  section 9325 10000 timer_resolution
  section 10000 10261 use
  section 10261 10538 user
  section 10538 10951 worker_aio_requests
  section 10951 11532 worker_connections
  section 11532 12696 worker_cpu_affinity
  section 12696 13050 worker_priority
  section 13050 13631 worker_processes
  section 13631 13894 worker_rlimit_core
  section 13894 14166 worker_rlimit_nofile
  section 14166 14508 worker_shutdown_timeout
  section 14508 14814 working_directory

module ngx_google_perftools_module
  section 17 559 name
  section 559 735 example configuration
  section 735 1071 directives
  section 754 1071 google_perftools_profiles

module ngx_http_access_module
  aliases ngx_access
  section 17 484 name
  section 484 1060 example configuration
  section 1060 1847 directives
  section 1079 1464 allow
  section 1464 1847 deny

module ngx_http_addition_module
  aliases ngx_addition
  section 17 325 name
  section 325 471 example configuration
  section 471 1583 directives
  section 490 839 add_before_body
  section 839 1185 add_after_body
  section 1185 1583 addition_types

module ngx_http_api_module_head
  section 17 596 name
  section 596 2743 example configuration
  section 2743 3518 directives
  section 2762 3518 api

module ngx_http_auth_basic_module
  aliases ngx_auth_basic
  section 17 568 name
  section 568 723 example configuration
  section 723 2737 directives
  section 742 1288 auth_basic
  section 1288 2737 auth_basic_user_file

module ngx_http_auth_jwt_module
  aliases ngx_auth_jwt
  section 17 886 name
  section 886 1036 example configuration
  section 1036 2658 directives
  section 1055 1853 auth_jwt
  section 1853 2096 auth_jwt_header_set
  section 2096 2335 auth_jwt_claim_set
  section 2335 2658 auth_jwt_key_file
  section 2658 3045 embedded variables
  section 2769 2902 $jwt_header_i<name>
  section 2902 3045 $jwt_claim_i<name>

module ngx_http_auth_request_module
  aliases ngx_auth_request
  section 17 1139 name
  section 1139 1446 example configuration
  section 1446 2122 directives
  section 1465 1759 auth_request
  section 1759 2122 auth_request_set

module ngx_http_autoindex_module
  aliases ngx_autoindex
  section 17 413 name
  section 413 502 example configuration
  section 502 2023 directives
  section 521 742 autoindex
  section 742 1091 autoindex_exact_size
  section 1091 1714 autoindex_format
  section 1714 2023 autoindex_localtime

module ngx_http_browser_module
  aliases ngx_browser
  section 17 618 name
  section 243 378 $modern_browser
  section 378 516 $ancient_browser
  section 516 618 $msie
  section 618 1322 example configuration
  section 1322 3117 directives
  section 1341 1731 ancient_browser
  section 1731 1966 ancient_browser_value
  section 1966 2885 modern_browser
  section 2885 3117 modern_browser_value

module ngx_http_charset_module
  aliases ngx_charset
  section 17 511 name
  section 511 653 example configuration
  section 653 4932 directives
  section 672 1997 charset
  section 1997 3165 charset_map
  section 3165 3831 charset_types
  section 3831 4593 override_charset
  section 4593 4932 source_charset

module ngx_http_core_module
  aliases ngx_core
  section 17 85 name
  section 85 62738 directives
  section 104 472 absolute_redirect
  section 472 2923 aio
  section 2923 3347 aio_write
  section 3347 4352 alias
  section 4352 4732 chunked_transfer_encoding
  section 4732 5251 client_body_buffer_size
  section 5251 5976 client_body_in_file_only
  section 5976 6392 client_body_in_single_buffer
  section 6392 7024 client_body_temp_path
  section 7024 7506 client_body_timeout
  section 7506 8041 client_header_buffer_size
  section 8041 8383 client_header_timeout
  section 8383 8945 client_max_body_size
  section 8945 9433 connection_pool_size
  section 9433 9747 default_type
  section 9747 10362 directio
  section 10362 10738 directio_alignment
  section 10738 12923 disable_symlinks
  section 11123 11233 off
  section 11233 11333 on
  section 11333 11513 if_not_owner
  section 11513 12923 from=part
  section 12923 15054 error_page
  section 15054 15359 etag
  section 15359 15515 http
  section 15515 16188 if_modified_since
  section 15911 15998 off
  section 15998 16033 exact
  section 16033 16188 before
  section 16188 16784 ignore_invalid_headers
  section 16784 18093 internal
  section 18093 18924 keepalive_disable
  section 18924 19311 keepalive_requests
  section 19311 19986 keepalive_timeout
  section 19986 20742 large_client_header_buffers
  section 20742 21517 limit_except
  section 21517 22533 limit_rate
  section 22533 23013 limit_rate_after
  section 23013 23879 lingering_close
  section 23879 24293 lingering_time
  section 24293 24857 lingering_timeout
  section 24857 33524 listen
  section 33524 37665 location
  section 37665 37928 log_not_found
  section 37928 38181 log_subrequest
  section 38181 38633 max_ranges
  section 38633 39685 merge_slashes
  section 39685 40000 msie_padding
  section 40000 40254 msie_refresh
  section 40254 41511 open_file_cache
  section 41511 41779 open_file_cache_errors
  section 41779 42171 open_file_cache_min_uses
  section 42171 42428 open_file_cache_valid
  section 42428 42769 output_buffers
  section 42769 43145 port_in_redirect
  section 43145 43493 postpone_output
  section 43493 44061 read_ahead
  section 44061 44377 recursive_error_pages
  section 44377 44666 request_pool_size
  section 44666 45347 reset_timedout_connection
  section 45347 46763 resolver
  section 46763 47018 resolver_timeout
  section 47018 47729 root
  section 47729 48420 satisfy
  section 48420 48906 send_lowat
  section 48906 49326 send_timeout
  section 49326 50340 sendfile
  section 50340 50704 sendfile_max_chunk
  section 50704 51216 server
  section 51216 53950 server_name
  section 53950 54554 server_name_in_redirect
  section 54554 54934 server_names_hash_bucket_size
  section 54934 55221 server_names_hash_max_size
  section 55221 55953 server_tokens
  section 55953 56273 tcp_nodelay
  section 56273 56824 tcp_nopush
  section 56824 59873 try_files
  section 59873 60744 types
  section 60744 61167 types_hash_bucket_size
  section 61167 61484 types_hash_max_size
  section 61484 62121 underscores_in_headers
  section 62121 62397 variables_hash_bucket_size
  section 62397 62738 variables_hash_max_size
  section 62738 69402 embedded variables
  section 63055 63127 $arg_i<name>
  section 63127 63179 $args
  section 63179 63333 $binary_remote_addr
  section 63333 63532 $body_bytes_sent
  section 63532 63608 $bytes_sent
  section 63608 63676 $connection
  section 63676 63781 $connection_requests
  section 63781 63852 $content_length
  section 63852 63919 $content_type
  section 63919 63976 $cookie_i<name>
  section 63976 64073 $document_root
  section 64073 64119 $document_uri
  section 64119 64293 $host
  section 64293 64329 $hostname
  section 64329 64505 $http_i<name>
  section 64505 64605 $https
  section 64605 64703 $is_args
  section 64703 64804 $limit_rate
  section 64804 64898 $msec
  section 64898 64943 $nginx_version
  section 64943 64990 $pid
  section 64990 65086 $pipe
  section 65086 65330 $proxy_protocol_addr
  section 65330 65571 $proxy_protocol_port
  section 65571 65618 $query_string
  section 65618 65805 $realpath_root
  section 65805 65849 $remote_addr
  section 65849 65890 $remote_port
  section 65890 65968 $remote_user
  section 65968 66020 $request
  section 66020 66308 $request_body
  section 66308 66964 $request_body_file
  section 66964 67069 $request_completion
  section 67069 67205 $request_filename
  section 67205 67315 $request_id
  section 67315 67429 $request_length
  section 67429 67515 $request_method
  section 67515 67688 $request_time
  section 67688 67760 $request_uri
  section 67760 67832 $scheme
  section 67832 68014 $sent_http_i<name>
  section 68014 68224 $sent_trailer_i<name>
  section 68224 68480 $server_addr
  section 68480 68553 $server_name
  section 68553 68626 $server_port
  section 68626 68778 $server_protocol
  section 68778 69038 $status
  section 69038 69127 $time_iso8601
  section 69127 69207 $time_local
  section 69207 69402 $uri

module ngx_http_dav_module
  aliases ngx_dav
  section 17 516 name
  section 516 916 example configuration
  section 916 3322 directives
  section 935 1385 dav_access
  section 1385 2437 dav_methods
  section 2437 2783 create_full_put_path
  section 2783 3322 min_delete_depth

module ngx_http_empty_gif_module
  aliases ngx_empty_gif
  section 17 185 name
  section 185 278 example configuration
  section 278 408 directives
  section 297 408 empty_gif

module ngx_http_f4f_module
  aliases ngx_f4f
  section 17 699 name
  section 699 797 example configuration
  section 797 1170 directives
  section 816 923 f4f
  section 923 1170 f4f_buffer_size

module ngx_http_fastcgi_module
  aliases ngx_fastcgi
  section 17 188 name
  section 188 628 example configuration
  section 628 39381 directives
  section 647 1717 fastcgi_bind
  section 1717 2214 fastcgi_buffer_size
  section 2214 3478 fastcgi_buffering
  section 3478 3911 fastcgi_buffers
  section 3911 4586 fastcgi_busy_buffers_size
  section 4586 4996 fastcgi_cache
  section 4996 5486 fastcgi_cache_background_update
  section 5486 6065 fastcgi_cache_bypass
  section 6065 6319 fastcgi_cache_key
  section 6319 6960 fastcgi_cache_lock
  section 6960 7375 fastcgi_cache_lock_age
  section 7375 7832 fastcgi_cache_lock_timeout
  section 7832 8237 fastcgi_cache_max_range_offset
  section 8237 8782 fastcgi_cache_methods
  section 8782 9042 fastcgi_cache_min_uses
  section 9042 14020 fastcgi_cache_path
  section 14020 15397 fastcgi_cache_purge
  section 15397 15780 fastcgi_cache_revalidate
  section 15780 17571 fastcgi_cache_use_stale
  section 17571 19461 fastcgi_cache_valid
  section 19461 20079 fastcgi_catch_stderr
  section 20079 20408 fastcgi_connect_timeout
  section 20408 20797 fastcgi_force_ranges
  section 20797 21289 fastcgi_hide_header
  section 21289 21637 fastcgi_ignore_client_abort
  section 21637 22756 fastcgi_ignore_headers
  section 22756 23460 fastcgi_index
  section 23460 23875 fastcgi_intercept_errors
  section 23875 24423 fastcgi_keep_conn
  section 24423 25056 fastcgi_limit_rate
  section 25056 25849 fastcgi_max_temp_file_size
  section 25849 28347 fastcgi_next_upstream
  section 26368 26512 error
  section 26512 26663 timeout
  section 26663 26740 invalid_header
  section 26740 26811 http_500
  section 26811 26882 http_503
  section 26882 26953 http_403
  section 26953 27024 http_404
  section 27024 27105 http_429
  section 27105 27421 non_idempotent
  section 27421 28347 off
  section 28347 28704 fastcgi_next_upstream_timeout
  section 28704 29064 fastcgi_next_upstream_tries
  section 29064 29614 fastcgi_no_cache
  section 29614 31129 fastcgi_param
  section 31129 31944 fastcgi_pass
  section 31944 32188 fastcgi_pass_header
  section 32188 32524 fastcgi_pass_request_body
  section 32524 32880 fastcgi_pass_request_headers
  section 32880 33332 fastcgi_read_timeout
  section 33332 34012 fastcgi_request_buffering
  section 34012 34524 fastcgi_send_lowat
  section 34524 34974 fastcgi_send_timeout
  section 34974 35876 fastcgi_split_path_info
  section 35876 37546 fastcgi_store
  section 37546 38036 fastcgi_store_access
  section 38036 38609 fastcgi_temp_file_write_size
  section 38609 39381 fastcgi_temp_path
  section 39381 39849 parameters passed to a fastcgi server
  section 39849 41009 embedded variables
  section 40028 40819 $fastcgi_script_name
  section 40819 41009 $fastcgi_path_info

module ngx_http_flv_module
  aliases ngx_flv
  section 17 542 name
  section 542 629 example configuration
  section 629 753 directives
  section 648 753 flv

module ngx_http_geo_module
  aliases ngx_geo
  section 17 197 name
  section 197 428 example configuration
  section 428 3843 directives
  section 447 3843 geo
  section 1419 1482 delete
  section 1482 1809 default
  section 1809 1909 include
  section 1909 2271 proxy
  section 2271 2717 proxy_recursive
  section 2717 3843 ranges

module ngx_http_geoip_module
  aliases ngx_geoip
  section 17 620 name
  section 620 903 example configuration
  section 903 4564 directives
  section 922 1511 geoip_country
  section 1173 1273 $geoip_country_code
  section 1273 1379 $geoip_country_code3
  section 1379 1511 $geoip_country_name
  section 1511 3202 geoip_city
  section 1774 2058 $geoip_area_code
  section 2058 2164 $geoip_city_country_code
  section 2164 2275 $geoip_city_country_code3
  section 2275 2397 $geoip_city_country_name
  section 2397 2615 $geoip_dma_code
  section 2615 2655 $geoip_latitude
  section 2655 2697 $geoip_longitude
  section 2697 2862 $geoip_region
  section 2862 3048 $geoip_region_name
  section 3048 3138 $geoip_city
  section 3138 3202 $geoip_postal_code
  section 3202 3603 geoip_org
  section 3493 3603 $geoip_org
  section 3603 3964 geoip_proxy
  section 3964 4564 geoip_proxy_recursive

module ngx_http_gunzip_module
  aliases ngx_gunzip
  section 17 516 name
  section 516 622 example configuration
  section 622 1515 directives
  section 641 1131 gunzip
  section 1131 1515 gunzip_buffers

module ngx_http_gzip_module
  aliases ngx_gzip
  section 17 279 name
  section 279 565 example configuration
  section 565 5092 directives
  section 584 820 gzip
  section 820 1275 gzip_buffers
  section 1275 1545 gzip_comp_level
  section 1545 2079 gzip_disable
  section 2079 2391 gzip_min_length
  section 2391 2655 gzip_http_version
  section 2655 4327 gzip_proxied
  section 3284 3378 off
  section 3378 3509 expired
  section 3509 3649 no-cache
  section 3649 3789 no-store
  section 3789 3927 private
  section 3927 4046 no_last_modified
  section 4046 4147 no_etag
  section 4147 4245 auth
  section 4245 4327 any
  section 4327 4739 gzip_types
  section 4739 5092 gzip_vary
  section 5092 5272 embedded variables
  section 5131 5272 $gzip_ratio

module ngx_http_gzip_static_module
  aliases ngx_gzip_static
  section 17 388 name
  section 388 510 example configuration
  section 510 1436 directives
  section 529 1436 gzip_static

module ngx_http_headers_module
  aliases ngx_headers
  section 17 252 name
  section 252 489 example configuration
  section 489 3814 directives
  section 508 1222 add_header
  section 1222 1939 add_trailer
  section 1939 3814 expires

module ngx_http_hls_module
  aliases ngx_hls
  section 17 1284 name
  section 1284 1850 example configuration
  section 1850 5659 directives
  section 1869 1972 hls
  section 1972 2256 hls_buffers
  section 2256 4598 hls_forward_args
  section 4598 4861 hls_fragment
  section 4861 5122 hls_mp4_buffer_size
  section 5122 5659 hls_mp4_max_buffer_size

module ngx_http_image_filter_module
  aliases ngx_image_filter
  section 17 673 name
  section 673 939 example configuration
  section 939 5420 directives
  section 958 3019 image_filter
  section 1448 1523 off
  section 1523 1689 test
  section 1689 1900 size
  section 1900 2160 rotate
  section 2160 2560 resize
  section 2560 3019 crop
  section 3019 3345 image_filter_buffer
  section 3345 3698 image_filter_interlace
  section 3698 4160 image_filter_jpeg_quality
  section 4160 4498 image_filter_sharpen
  section 4498 4949 image_filter_transparency
  section 4949 5420 image_filter_webp_quality

module ngx_http_index_module
  aliases ngx_index
  section 17 379 name
  section 379 488 example configuration
  section 488 1322 directives
  section 507 1322 index

module ngx_http_js_module
  aliases ngx_js
  section 17 817 name
  section 817 2276 example configuration
  section 2276 2813 directives
  section 2295 2465 js_include
  section 2465 2653 js_content
  section 2653 2813 js_set
  section 2813 4230 request and response arguments
  section 2993 3049 uri
  section 3049 3098 method
  section 3098 3150 httpversion
  section 3150 3206 remoteaddress
  section 3206 3394 headers{}
  section 3394 3453 args{}
  section 3453 3515 variables{}
  section 3515 3658 log(string)
  section 3658 3707 status
  section 3707 3757 headers{}
  section 3757 3843 contenttype
  section 3843 4003 contentlength
  section 4003 4068 sendheader()
  section 4068 4151 send(string)
  section 4151 4230 finish()

module ngx_http_keyval_module
  aliases ngx_keyval
  section 17 330 name
  section 330 693 example configuration
  section 693 1546 directives
  section 712 1063 keyval
  section 1063 1546 keyval_zone

module ngx_http_limit_conn_module
  aliases ngx_limit_conn
  section 17 446 name
  section 446 708 example configuration
  section 708 4320 directives
  section 727 1987 limit_conn
  section 1987 2362 limit_conn_log_level
  section 2362 2648 limit_conn_status
  section 2648 3938 limit_conn_zone
  section 3938 4320 limit_zone

module ngx_http_limit_req_module
  aliases ngx_limit_req
  section 17 362 name
  section 362 639 example configuration
  section 639 4819 directives
  section 658 2358 limit_req
  section 2358 2948 limit_req_log_level
  section 2948 3232 limit_req_status
  section 3232 4819 limit_req_zone

module ngx_http_log_module
  aliases ngx_log
  section 17 384 name
  section 384 713 example configuration
  section 713 7665 directives
  section 732 4055 access_log
  section 4055 6459 log_format
  section 4529 4594 $bytes_sent
  section 4594 4647 $connection
  section 4647 4751 $connection_requests
  section 4751 4849 $msec
  section 4849 4929 $pipe
  section 4929 5027 $request_length
  section 5027 5250 $request_time
  section 5250 5290 $status
  section 5290 5363 $time_iso8601
  section 5363 6459 $time_local
  section 6459 7665 open_log_file_cache
  section 6907 7057 max
  section 7057 7205 inactive
  section 7205 7378 min_uses
  section 7378 7517 valid
  section 7517 7665 off

module ngx_http_map_module
  aliases ngx_map
  section 17 199 name
  section 199 576 example configuration
  section 576 3859 directives
  section 595 3228 map
  section 1949 2157 default value
  section 2157 2493 hostnames
  section 2493 2590 include file
  section 2590 3228 volatile
  section 3228 3584 map_hash_bucket_size
  section 3584 3859 map_hash_max_size

module ngx_http_memcached_module
  aliases ngx_memcached
  section 17 329 name
  section 329 657 example configuration
  section 657 7078 directives
  section 676 1762 memcached_bind
  section 1762 2134 memcached_buffer_size
  section 2134 2469 memcached_connect_timeout
  section 2469 2864 memcached_force_ranges
  section 2864 3261 memcached_gzip_flag
  section 3261 4865 memcached_next_upstream
  section 3651 3795 error
  section 3795 3946 timeout
  section 3946 4025 invalid_response
  section 4025 4089 not_found
  section 4089 4865 off
  section 4865 5226 memcached_next_upstream_timeout
  section 5226 5590 memcached_next_upstream_tries
  section 5590 6160 memcached_pass
  section 6160 6620 memcached_read_timeout
  section 6620 7078 memcached_send_timeout
  section 7078 7223 embedded variables
  section 7117 7223 $memcached_key

module ngx_http_mirror_module
  aliases ngx_mirror
  section 17 281 name
  section 281 511 example configuration
  section 511 1696 directives
  section 530 811 mirror
  section 811 1696 mirror_request_body

module ngx_http_mp4_module
  aliases ngx_mp4
  section 17 2915 name
  section 2915 3138 example configuration
  section 3138 5229 directives
  section 3157 3262 mp4
  section 3262 3507 mp4_buffer_size
  section 3507 4032 mp4_max_buffer_size
  section 4032 4811 mp4_limit_rate
  section 4811 5229 mp4_limit_rate_after

module ngx_http_perl_module
  aliases ngx_perl
  section 17 514 name
  section 514 1950 known issues
  section 1950 2905 example configuration
  section 2905 3688 directives
  section 2924 3121 perl
  section 3121 3258 perl_modules
  section 3258 3484 perl_require
  section 3484 3688 perl_set
  section 3688 3930 calling perl from ssi
  section 3930 8789 the $r request object methods
  section 3980 4036 $r->args
  section 4036 5093 $r->filename
  section 5093 5185 $r->allow_ranges
  section 5185 5275 $r->discard_request_body
  section 5275 5386 $r->header_in(field)
  section 5386 5893 $r->header_only
  section 5893 6114 c<$r->log_error(errno,
  section 6114 6186 $r->print(text, ...)
  section 6186 6485 $r->request_body
  section 6485 6721 $r->request_body_file
  section 6721 6800 $r->request_method
  section 6800 6867 $r->remote_addr
  section 6867 7519 $r->flush
  section 7519 8474 $r->status(code)
  section 8474 8565 $r->unescape(text)
  section 8565 8789 $r->uri

module ngx_http_proxy_module
  aliases ngx_proxy
  section 17 180 name
  section 180 386 example configuration
  section 386 52715 directives
  section 405 1467 proxy_bind
  section 1467 1960 proxy_buffer_size
  section 1960 3163 proxy_buffering
  section 3163 3592 proxy_buffers
  section 3592 4259 proxy_busy_buffers_size
  section 4259 4665 proxy_cache
  section 4665 5151 proxy_cache_background_update
  section 5151 5719 proxy_cache_bypass
  section 5719 6159 proxy_cache_convert_head
  section 6159 6584 proxy_cache_key
  section 6584 7217 proxy_cache_lock
  section 7217 7628 proxy_cache_lock_age
  section 7628 8079 proxy_cache_lock_timeout
  section 8079 8480 proxy_cache_max_range_offset
  section 8480 9019 proxy_cache_methods
  section 9019 9275 proxy_cache_min_uses
  section 9275 14230 proxy_cache_path
  section 14230 15585 proxy_cache_purge
  section 15585 15964 proxy_cache_revalidate
  section 15964 17778 proxy_cache_use_stale
  section 17778 19650 proxy_cache_valid
  section 19650 19975 proxy_connect_timeout
  section 19975 21638 proxy_cookie_domain
  section 21638 23166 proxy_cookie_path
  section 23166 23551 proxy_force_ranges
  section 23551 23948 proxy_headers_hash_bucket_size
  section 23948 24340 proxy_headers_hash_max_size
  section 24340 24844 proxy_hide_header
  section 24844 25290 proxy_http_version
  section 25290 25634 proxy_ignore_client_abort
  section 25634 26749 proxy_ignore_headers
  section 26749 27153 proxy_intercept_errors
  section 27153 27782 proxy_limit_rate
  section 27782 28565 proxy_max_temp_file_size
  section 28565 28890 proxy_method
  section 28890 31604 proxy_next_upstream
  section 29457 29601 error
  section 29601 29752 timeout
  section 29752 29829 invalid_header
  section 29829 29900 http_500
  section 29900 29971 http_502
  section 29971 30042 http_503
  section 30042 30113 http_504
  section 30113 30184 http_403
  section 30184 30255 http_404
  section 30255 30336 http_429
  section 30336 30652 non_idempotent
  section 30652 31604 off
  section 31604 31957 proxy_next_upstream_timeout
  section 31957 32313 proxy_next_upstream_tries
  section 32313 32853 proxy_no_cache
  section 32853 35853 proxy_pass
  section 35853 36093 proxy_pass_header
  section 36093 36637 proxy_pass_request_body
  section 36637 37197 proxy_pass_request_headers
  section 37197 37645 proxy_read_timeout
  section 37645 40432 proxy_redirect
  section 40432 41315 proxy_request_buffering
  section 41315 41823 proxy_send_lowat
  section 41823 42269 proxy_send_timeout
  section 42269 42552 proxy_set_body
  section 42552 44204 proxy_set_header
  section 44204 44525 proxy_ssl_certificate
  section 44525 45037 proxy_ssl_certificate_key
  section 45037 45486 proxy_ssl_ciphers
  section 45486 45811 proxy_ssl_crl
  section 45811 46283 proxy_ssl_name
  section 46283 46658 proxy_ssl_password_file
  section 46658 47123 proxy_ssl_server_name
  section 47123 47515 proxy_ssl_session_reuse
  section 47515 47915 proxy_ssl_protocols
  section 47915 48269 proxy_ssl_trusted_certificate
  section 48269 48573 proxy_ssl_verify
  section 48573 48879 proxy_ssl_verify_depth
  section 48879 50912 proxy_store
  section 50912 51394 proxy_store_access
  section 51394 51957 proxy_temp_file_write_size
  section 51957 52715 proxy_temp_path
  section 52715 53472 embedded variables
  section 52896 53002 $proxy_host
  section 53002 53472 $proxy_port

module ngx_http_random_index_module
  aliases ngx_random_index
  section 17 515 name
  section 515 607 example configuration
  section 607 822 directives
  section 626 822 random_index

module ngx_http_realip_module
  aliases ngx_realip
  section 17 366 name
  section 366 586 example configuration
  section 586 2625 directives
  section 605 1126 set_real_ip_from
  section 1126 1955 real_ip_header
  section 1955 2625 real_ip_recursive
  section 2625 2831 embedded variables
  section 2664 2742 $realip_remote_addr
  section 2742 2831 $realip_remote_port

module ngx_http_referer_module
  aliases ngx_referer
  section 17 626 name
  section 626 876 example configuration
  section 876 3136 directives
  section 895 1246 referer_hash_bucket_size
  section 1246 1599 referer_hash_max_size
  section 1599 3136 valid_referers
  section 2088 2164 none
  section 2164 2411 blocked
  section 2411 2510 server_names
  section 2510 2729 arbitrary string
  section 2729 3136 regular expression
  section 3136 3323 embedded variables
  section 3175 3323 $invalid_referer

module ngx_http_rewrite_module
  aliases ngx_rewrite
  section 17 852 name
  section 852 8301 directives
  section 871 1258 break
  section 1258 3394 if
  section 3394 4881 return
  section 4881 7402 rewrite
  section 5598 5758 last
  section 5758 5887 break
  section 5887 6087 redirect
  section 6087 7402 permanent
  section 7402 7744 rewrite_log
  section 7744 8007 set
  section 8007 8301 uninitialized_variable_warn
  section 8301 9968 internal implementation

module ngx_http_scgi_module
  aliases ngx_scgi
  section 17 177 name
  section 177 309 example configuration
  section 309 34621 directives
  section 328 1333 scgi_bind
  section 1333 1821 scgi_buffer_size
  section 1821 3007 scgi_buffering
  section 3007 3431 scgi_buffers
  section 3431 4091 scgi_busy_buffers_size
  section 4091 4495 scgi_cache
  section 4495 4979 scgi_cache_background_update
  section 4979 5543 scgi_cache_bypass
  section 5543 5788 scgi_cache_key
  section 5788 6415 scgi_cache_lock
  section 6415 6818 scgi_cache_lock_age
  section 6818 7263 scgi_cache_lock_timeout
  section 7263 7659 scgi_cache_max_range_offset
  section 7659 8149 scgi_cache_methods
  section 8149 8403 scgi_cache_min_uses
  section 8403 13352 scgi_cache_path
  section 13352 14708 scgi_cache_purge
  section 14708 15085 scgi_cache_revalidate
  section 15085 16853 scgi_cache_use_stale
  section 16853 18716 scgi_cache_valid
  section 18716 19037 scgi_connect_timeout
  section 19037 19417 scgi_force_ranges
  section 19417 19895 scgi_hide_header
  section 19895 20235 scgi_ignore_client_abort
  section 20235 21345 scgi_ignore_headers
  section 21345 21754 scgi_intercept_errors
  section 21754 22372 scgi_limit_rate
  section 22372 23147 scgi_max_temp_file_size
  section 23147 25639 scgi_next_upstream
  section 23660 23804 error
  section 23804 23955 timeout
  section 23955 24032 invalid_header
  section 24032 24103 http_500
  section 24103 24174 http_503
  section 24174 24245 http_403
  section 24245 24316 http_404
  section 24316 24397 http_429
  section 24397 24713 non_idempotent
  section 24713 25639 off
  section 25639 25990 scgi_next_upstream_timeout
  section 25990 26344 scgi_next_upstream_tries
  section 26344 26879 scgi_no_cache
  section 26879 27792 scgi_param
  section 27792 28590 scgi_pass
  section 28590 28826 scgi_pass_header
  section 28826 29150 scgi_pass_request_body
  section 29150 29494 scgi_pass_request_headers
  section 29494 29934 scgi_read_timeout
  section 29934 30765 scgi_request_buffering
  section 30765 31203 scgi_send_timeout
  section 31203 32840 scgi_store
  section 32840 33318 scgi_store_access
  section 33318 33873 scgi_temp_file_write_size
  section 33873 34621 scgi_temp_path

module ngx_http_secure_link_module
  aliases ngx_secure_link
  section 17 1102 name
  section 1102 5064 directives
  section 1121 2469 secure_link
  section 2469 3846 secure_link_md5
  section 3846 5064 secure_link_secret
  section 5064 5377 embedded variables
  section 5103 5219 $secure_link
  section 5219 5377 $secure_link_expires

module ngx_http_session_log_module
  aliases ngx_session_log
  section 17 346 name
  section 346 790 example configuration
  section 790 2791 directives
  section 809 1207 session_log_format
  section 1207 2453 session_log_zone
  section 2453 2791 session_log
  section 2791 3057 embedded variables
  section 2906 2958 $session_log_id
  section 2958 3057 $session_log_binary_id

module ngx_http_slice_module
  aliases ngx_slice
  section 17 427 name
  section 427 883 example configuration
  section 883 1646 directives
  section 902 1646 slice
  section 1646 1942 embedded variables
  section 1764 1942 $slice_range

module ngx_http_spdy_module
  aliases ngx_spdy
  section 17 718 name
  section 718 1190 known issues
  section 1190 1651 example configuration
  section 1651 2535 directives
  section 1670 2199 spdy_chunk_size
  section 2199 2535 spdy_headers_comp
  section 2535 2870 embedded variables
  section 2652 2748 $spdy
  section 2748 2870 $spdy_request_priority

module ngx_http_split_clients_module
  aliases ngx_split_clients
  section 17 239 name
  section 239 590 example configuration
  section 590 1350 directives
  section 609 1350 split_clients

module ngx_http_ssi_module
  aliases ngx_ssi
  section 17 288 name
  section 288 383 example configuration
  section 383 2489 directives
  section 402 654 ssi
  section 654 1236 ssi_last_modified
  section 1236 1556 ssi_min_file_chunk
  section 1556 1895 ssi_silent_errors
  section 1895 2253 ssi_types
  section 2253 2489 ssi_value_length
  section 2489 7533 ssi commands
  section 2683 2865 block
  section 2865 2992 name
  section 2992 3079 config
  section 3079 3275 errmsg
  section 3275 3536 timefmt
  section 3536 3639 echo
  section 3639 3678 var
  section 3678 3811 encoding
  section 3811 4227 default
  section 4227 4545 if
  section 4545 5386 expr
  section 5386 5515 include
  section 5515 5626 file
  section 5626 5962 virtual
  section 5962 6387 stub
  section 6387 6623 wait
  section 6623 7259 set
  section 7259 7356 set
  section 7356 7395 var
  section 7395 7533 value
  section 7533 7912 embedded variables
  section 7639 7778 $date_local
  section 7778 7912 $date_gmt

module ngx_http_ssl_module
  aliases ngx_ssl
  section 17 375 name
  section 375 1461 example configuration
  section 1461 14308 directives
  section 1480 1795 ssl
  section 1795 2263 ssl_buffer_size
  section 2263 3628 ssl_certificate
  section 3628 4036 ssl_certificate_key
  section 4036 4581 ssl_ciphers
  section 4581 5010 ssl_client_certificate
  section 5010 5273 ssl_crl
  section 5273 5494 ssl_dhparam
  section 5494 6188 ssl_ecdh_curve
  section 6188 6991 ssl_password_file
  section 6991 7278 ssl_prefer_server_ciphers
  section 7278 7784 ssl_protocols
  section 7784 9187 ssl_session_cache
  section 8150 8286 off
  section 8286 8467 none
  section 8467 8702 builtin
  section 8702 9187 shared
  section 9187 10098 ssl_session_ticket_key
  section 10098 10414 ssl_session_tickets
  section 10414 10639 ssl_session_timeout
  section 10639 11414 ssl_stapling
  section 11414 11836 ssl_stapling_file
  section 11836 12318 ssl_stapling_responder
  section 12318 12812 ssl_stapling_verify
  section 12812 13285 ssl_trusted_certificate
  section 13285 14099 ssl_verify_client
  section 14099 14308 ssl_verify_depth
  section 14308 14880 error processing
  section 14880 18694 embedded variables
  section 14990 15088 $ssl_cipher
  section 15088 15493 $ssl_ciphers
  section 15493 15640 $ssl_client_escaped_cert
  section 15640 15999 $ssl_client_cert
  section 15999 16137 $ssl_client_fingerprint
  section 16137 16337 $ssl_client_i_dn
  section 16337 16553 $ssl_client_i_dn_legacy
  section 16553 16675 $ssl_client_raw_cert
  section 16675 16876 $ssl_client_s_dn
  section 16876 17093 $ssl_client_s_dn_legacy
  section 17093 17215 $ssl_client_serial
  section 17215 17306 $ssl_client_v_end
  section 17306 17417 $ssl_client_v_remain
  section 17417 17512 $ssl_client_v_start
  section 17512 17806 $ssl_client_verify
  section 17806 18237 $ssl_curves
  section 18237 18322 $ssl_protocol
  section 18322 18465 $ssl_server_name
  section 18465 18562 $ssl_session_id
  section 18562 18694 $ssl_session_reused

module ngx_http_status_module
  aliases ngx_status
  section 17 374 name
  section 374 2678 example configuration
  section 2678 3738 directives
  section 2697 2891 status
  section 2891 3443 status_format
  section 3443 3738 status_zone
  section 3738 16162 data
  section 3809 3893 version
  section 3893 3941 nginx_version
  section 3941 3990 nginx_build
  section 3990 4070 address
  section 4070 4151 generation
  section 4151 4253 load_timestamp
  section 4253 4321 timestamp
  section 4321 4399 pid
  section 4399 4482 ppid
  section 4482 4515 processes
  section 4515 4626 respawned
  section 4626 4661 connections
  section 4661 4735 accepted
  section 4735 4807 dropped
  section 4807 4879 active
  section 4879 4959 idle
  section 4959 4986 ssl
  section 4986 5060 handshakes
  section 5060 5137 handshakes_failed
  section 5137 5237 session_reuses
  section 5237 5269 requests
  section 5269 5328 total
  section 5328 5403 current
  section 5403 5465 server_zones
  section 5465 5558 processing
  section 5558 5642 requests
  section 5642 5675 responses
  section 5675 5881 total
  section 5881 5974 discarded
  section 5974 6048 received
  section 6048 6124 sent
  section 6124 6207 slabs
  section 6207 6236 pages
  section 6236 6298 used
  section 6298 6372 free
  section 6372 6487 slots
  section 6487 6549 used
  section 6549 6611 free
  section 6611 6699 reqs
  section 6699 6819 fails
  section 6819 6982 upstreams
  section 6982 7082 peers
  section 7082 7123 id
  section 7123 7200 server
  section 7200 7300 name
  section 7300 7418 service
  section 7418 7528 backup
  section 7528 7601 weight
  section 7601 7765 state
  section 7765 7830 active
  section 7830 7910 max_conns
  section 7910 7997 requests
  section 7997 8030 responses
  section 8030 8246 total
  section 8246 8314 sent
  section 8314 8392 received
  section 8392 8488 fails
  section 8488 8697 unavail
  section 8697 8734 health_checks
  section 8734 8836 checks
  section 8836 8894 fails
  section 8894 8991 unhealthy
  section 8991 9147 last_passed
  section 9147 9273 downtime
  section 9273 9421 downstart
  section 9421 9549 selected
  section 9549 9795 header_time
  section 9795 10053 response_time
  section 10053 10147 keepalive
  section 10147 10269 zombies
  section 10269 10407 zone
  section 10407 10515 queue
  section 10515 10581 size
  section 10581 10680 max_size
  section 10680 10795 overflows
  section 10795 10896 caches
  section 10896 10948 size
  section 10948 11048 max_size
  section 11048 11267 cold
  section 11267 11417 responses
  section 11417 11563 bytes
  section 11563 11722 responses
  section 11722 11800 bytes
  section 11800 11886 responses_written
  section 11886 11988 bytes_written
  section 11988 12018 stream
  section 12018 12080 server_zones
  section 12080 12176 processing
  section 12176 12259 connections
  section 12259 12291 sessions
  section 12291 12505 total
  section 12505 12601 discarded
  section 12601 12675 received
  section 12675 12751 sent
  section 12751 12918 upstreams
  section 12918 13019 peers
  section 13019 13060 id
  section 13060 13140 server
  section 13140 13242 name
  section 13242 13364 service
  section 13364 13476 backup
  section 13476 13551 weight
  section 13551 13696 state
  section 13696 13754 active
  section 13754 13836 max_conns
  section 13836 13929 connections
  section 13929 14132 connect_time
  section 14132 14338 first_byte_time
  section 14338 14541 response_time
  section 14541 14609 sent
  section 14609 14687 received
  section 14687 14783 fails
  section 14783 14997 unavail
  section 14997 15034 health_checks
  section 15034 15138 checks
  section 15138 15196 fails
  section 15196 15293 unhealthy
  section 15293 15451 last_passed
  section 15451 15577 downtime
  section 15577 15725 downstart
  section 15725 15860 selected
  section 15860 15985 zombies
  section 15985 16162 zone
  section 16162 18040 compatibility

module ngx_http_stub_status_module
  aliases ngx_stub_status
  section 17 331 name
  section 331 679 example configuration
  section 679 995 directives
  section 698 995 stub_status
  section 995 1852 data
  section 1066 1183 active connections
  section 1183 1256 accepts
  section 1256 1469 handled
  section 1469 1531 requests
  section 1531 1632 reading
  section 1632 1746 writing
  section 1746 1852 waiting
  section 1852 2276 embedded variables
  section 1985 2062 $connections_active
  section 2062 2129 $connections_reading
  section 2129 2196 $connections_writing
  section 2196 2276 $connections_waiting

module ngx_http_sub_module
  aliases ngx_sub
  section 17 337 name
  section 337 595 example configuration
  section 595 2278 directives
  section 614 1178 sub_filter
  section 1178 1659 sub_filter_last_modified
  section 1659 1914 sub_filter_once
  section 1914 2278 sub_filter_types

module ngx_http_upstream_conf_module
  aliases ngx_upstream_conf
  section 17 586 name
  section 586 878 example configuration
  section 878 6816 directives
  section 897 6816 upstream_conf
  section 4296 6816 drain=

module ngx_http_upstream_hc_module
  aliases ngx_upstream_hc
  section 17 878 name
  section 878 2528 example configuration
  section 2528 6498 directives
  section 2547 4252 health_check
  section 4252 6498 match
  section 4480 4520 status 200;
  section 4520 4566 status ! 500;
  section 4566 4617 status 200 204;
  section 4617 4679 status ! 301 302;
  section 4679 4748 status 200-399;
  section 4748 4823 status ! 400-599;
  section 4823 4916 status 301-303 307;
  section 4916 5031 header content-type = text/html;
  section 5031 5158 header content-type != text/html;
  section 5158 5279 header connection ~ close;
  section 5279 5405 header connection !~ close;
  section 5405 5456 header host;
  section 5456 5550 header ! x-accel-redirect;
  section 5550 5653 body ~ welcome to nginx!;
  section 5653 6498 body !~ welcome to nginx!;

module ngx_http_upstream_module
  aliases ngx_upstream
  section 17 362 name
  section 362 1614 example configuration
  section 1614 24136 directives
  section 1633 2713 upstream
  section 2713 7936 server
  section 7936 8639 zone
  section 8639 9542 state
  section 9542 10663 hash
  section 10663 11864 ip_hash
  section 11864 14292 keepalive
  section 14292 15594 ntlm
  section 15594 16030 least_conn
  section 16030 16995 least_time
  section 16995 17894 queue
  section 17894 23716 sticky
  section 18544 19957 cookie
  section 19957 20254 expires=time
  section 20254 20392 domain=domain
  section 20392 20472 httponly
  section 20472 20549 secure
  section 20549 20723 path=path
  section 20723 22121 route
  section 22121 23716 learn
  section 23716 24136 sticky_cookie_insert
  section 24136 27534 embedded variables
  section 24257 24943 $upstream_addr
  section 24943 25157 $upstream_bytes_received
  section 25157 25402 $upstream_cache_status
  section 25402 25740 $upstream_connect_time
  section 25740 25967 $upstream_cookie_i<name>
  section 25967 26257 $upstream_header_time
  section 26257 26675 $upstream_http_i<name>
  section 26675 26935 $upstream_response_length
  section 26935 27211 $upstream_response_time
  section 27211 27534 $upstream_status

module ngx_http_userid_module
  aliases ngx_userid
  section 17 390 name
  section 390 637 example configuration
  section 637 4188 directives
  section 656 1341 userid
  section 944 1041 on
  section 1041 1138 v1
  section 1138 1236 log
  section 1236 1341 off
  section 1341 1640 userid_domain
  section 1640 2083 userid_expires
  section 2083 2906 userid_mark
  section 2906 3091 userid_name
  section 3091 3459 userid_p3p
  section 3459 3669 userid_path
  section 3669 4188 userid_service
  section 4188 4723 embedded variables
  section 4307 4380 $uid_got
  section 4380 4641 $uid_reset
  section 4641 4723 $uid_set

module ngx_http_uwsgi_module
  aliases ngx_uwsgi
  section 17 180 name
  section 180 315 example configuration
  section 315 40487 directives
  section 334 1344 uwsgi_bind
  section 1344 1835 uwsgi_buffer_size
  section 1835 3032 uwsgi_buffering
  section 3032 3459 uwsgi_buffers
  section 3459 4124 uwsgi_busy_buffers_size
  section 4124 4530 uwsgi_cache
  section 4530 5016 uwsgi_cache_background_update
  section 5016 5585 uwsgi_cache_bypass
  section 5585 5833 uwsgi_cache_key
  section 5833 6464 uwsgi_cache_lock
  section 6464 6871 uwsgi_cache_lock_age
  section 6871 7320 uwsgi_cache_lock_timeout
  section 7320 7719 uwsgi_cache_max_range_offset
  section 7719 8212 uwsgi_cache_methods
  section 8212 8468 uwsgi_cache_min_uses
  section 8468 13421 uwsgi_cache_path
  section 13421 14784 uwsgi_cache_purge
  section 14784 15163 uwsgi_cache_revalidate
  section 15163 16938 uwsgi_cache_use_stale
  section 16938 18810 uwsgi_cache_valid
  section 18810 19133 uwsgi_connect_timeout
  section 19133 19516 uwsgi_force_ranges
  section 19516 19998 uwsgi_hide_header
  section 19998 20340 uwsgi_ignore_client_abort
  section 20340 21453 uwsgi_ignore_headers
  section 21453 21864 uwsgi_intercept_errors
  section 21864 22488 uwsgi_limit_rate
  section 22488 23269 uwsgi_max_temp_file_size
  section 23269 23589 uwsgi_modifier1
  section 23589 23909 uwsgi_modifier2
  section 23909 26403 uwsgi_next_upstream
  section 24424 24568 error
  section 24568 24719 timeout
  section 24719 24796 invalid_header
  section 24796 24867 http_500
  section 24867 24938 http_503
  section 24938 25009 http_403
  section 25009 25080 http_404
  section 25080 25161 http_429
  section 25161 25477 non_idempotent
  section 25477 26403 off
  section 26403 26756 uwsgi_next_upstream_timeout
  section 26756 27112 uwsgi_next_upstream_tries
  section 27112 27652 uwsgi_no_cache
  section 27652 28573 uwsgi_param
  section 28573 29679 uwsgi_pass
  section 29679 29917 uwsgi_pass_header
  section 29917 30245 uwsgi_pass_request_body
  section 30245 30593 uwsgi_pass_request_headers
  section 30593 31037 uwsgi_read_timeout
  section 31037 31871 uwsgi_request_buffering
  section 31871 32313 uwsgi_send_timeout
  section 32313 32634 uwsgi_ssl_certificate
  section 32634 33146 uwsgi_ssl_certificate_key
  section 33146 33595 uwsgi_ssl_ciphers
  section 33595 33920 uwsgi_ssl_crl
  section 33920 34395 uwsgi_ssl_name
  section 34395 34770 uwsgi_ssl_password_file
  section 34770 35170 uwsgi_ssl_protocols
  section 35170 35635 uwsgi_ssl_server_name
  section 35635 36076 uwsgi_ssl_session_reuse
  section 36076 36430 uwsgi_ssl_trusted_certificate
  section 36430 36734 uwsgi_ssl_verify
  section 36734 37040 uwsgi_ssl_verify_depth
  section 37040 38688 uwsgi_store
  section 38688 39170 uwsgi_store_access
  section 39170 39731 uwsgi_temp_file_write_size
  section 39731 40487 uwsgi_temp_path

module ngx_http_v2_module
  aliases ngx_v2
  section 17 402 name
  section 402 649 known issues
  section 649 1461 example configuration
  section 1461 4320 directives
  section 1480 1883 http2_chunk_size
  section 1883 2218 http2_body_preread_size
  section 2218 2437 http2_idle_timeout
  section 2437 2685 http2_max_concurrent_streams
  section 2685 3164 http2_max_field_size
  section 3164 3500 http2_max_header_size
  section 3500 3872 http2_max_requests
  section 3872 4073 http2_recv_buffer_size
  section 4073 4320 http2_recv_timeout
  section 4320 4620 embedded variables
  section 4435 4620 $http2

module ngx_http_xslt_module
  aliases ngx_xslt
  section 17 455 name
  section 455 672 example configuration
  section 672 4661 directives
  section 691 1268 xml_entities
  section 1268 1863 xslt_last_modified
  section 1863 2509 xslt_param
  section 2509 3101 xslt_string_param
  section 3101 4211 xslt_stylesheet
  section 4211 4661 xslt_types

module ngx_mail_auth_http_module
  section 17 95 name
  section 95 1290 directives
  section 114 307 auth_http
  section 307 684 auth_http_header
  section 684 1074 auth_http_pass_client_cert
  section 1074 1290 auth_http_timeout
  section 1290 5288 protocol

module ngx_mail_core_module
  section 17 206 name
  section 206 1216 example configuration
  section 1216 8263 directives
  section 1235 5115 listen
  section 5115 5271 mail
  section 5271 6004 protocol
  section 6004 7190 resolver
  section 7190 7418 resolver_timeout
  section 7418 7524 server
  section 7524 8065 server_name
  section 8065 8263 timeout

module ngx_mail_imap_module
  section 17 85 name
  section 85 1993 directives
  section 104 754 imap_auth
  section 330 424 login
  section 424 496 plain
  section 496 650 cram-md5
  section 650 754 external
  section 754 1684 imap_capabilities
  section 1684 1993 imap_client_buffer

module ngx_mail_pop3_module
  section 17 85 name
  section 85 1949 directives
  section 104 975 pop3_auth
  section 330 576 plain
  section 576 717 apop
  section 717 871 cram-md5
  section 871 975 external
  section 975 1949 pop3_capabilities

module ngx_mail_proxy_module
  section 17 87 name
  section 87 3026 directives
  section 106 407 proxy_buffer
  section 407 1363 proxy_pass_error_message
  section 1363 1689 proxy_timeout
  section 1689 3026 xclient

module ngx_mail_smtp_module
  section 17 85 name
  section 85 1691 directives
  section 104 857 smtp_auth
  section 380 474 login
  section 474 546 plain
  section 546 700 cram-md5
  section 700 788 external
  section 788 857 none
  section 857 1691 smtp_capabilities

module ngx_mail_ssl_module
  section 17 428 name
  section 428 1391 example configuration
  section 1391 11742 directives
  section 1410 1599 ssl
  section 1599 2697 ssl_certificate
  section 2697 3097 ssl_certificate_key
  section 3097 3642 ssl_ciphers
  section 3642 4067 ssl_client_certificate
  section 4067 4331 ssl_crl
  section 4331 4552 ssl_dhparam
  section 4552 5246 ssl_ecdh_curve
  section 5246 6051 ssl_password_file
  section 6051 6341 ssl_prefer_server_ciphers
  section 6341 6847 ssl_protocols
  section 6847 8242 ssl_session_cache
  section 7213 7349 off
  section 7349 7530 none
  section 7530 7765 builtin
  section 7765 8242 shared
  section 8242 9153 ssl_session_ticket_key
  section 9153 9469 ssl_session_tickets
  section 9469 9694 ssl_session_timeout
  section 9694 10118 ssl_trusted_certificate
  section 10118 11053 ssl_verify_client
  section 11053 11308 ssl_verify_depth
  section 11308 11742 starttls
  section 11479 11597 on
  section 11597 11669 off
  section 11669 11742 only

module ngx_stream_access_module
  section 17 206 name
  section 206 673 example configuration
  section 673 1336 directives
  section 692 1015 allow
  section 1015 1336 deny

module ngx_stream_core_module
  section 17 283 name
  section 283 1283 example configuration
  section 1283 9502 directives
  section 1302 5973 listen
  section 5973 6241 preread_buffer_size
  section 6241 6506 preread_timeout
  section 6506 6872 proxy_protocol_timeout
  section 6872 7879 resolver
  section 7879 8259 resolver_timeout
  section 8259 8367 server
  section 8367 8529 stream
  section 8529 8852 tcp_nodelay
  section 8852 9176 variables_hash_bucket_size
  section 9176 9502 variables_hash_max_size
  section 9502 12071 embedded variables
  section 9611 9765 $binary_remote_addr
  section 9765 9845 $bytes_received
  section 9845 9906 $bytes_sent
  section 9906 9959 $connection
  section 9959 9995 $hostname
  section 9995 10074 $msec
  section 10074 10119 $nginx_version
  section 10119 10166 $pid
  section 10166 10264 $protocol
  section 10264 10508 $proxy_protocol_addr
  section 10508 10749 $proxy_protocol_port
  section 10749 10793 $remote_addr
  section 10793 10834 $remote_port
  section 10834 11093 $server_addr
  section 11093 11169 $server_port
  section 11169 11268 $session_time
  section 11268 11921 $status
  section 11921 11994 $time_iso8601
  section 11994 12071 $time_local

module ngx_stream_geo_module
  section 17 212 name
  section 212 443 example configuration
  section 443 2859 directives
  section 462 2859 geo
  section 1341 1395 delete
  section 1395 1722 default
  section 1722 1822 include
  section 1822 2859 ranges

module ngx_stream_geoip_module
  section 17 612 name
  section 612 1006 example configuration
  section 1006 3667 directives
  section 1025 1616 geoip_country
  section 1278 1378 $geoip_country_code
  section 1378 1484 $geoip_country_code3
  section 1484 1616 $geoip_country_name
  section 1616 3309 geoip_city
  section 1881 2165 $geoip_area_code
  section 2165 2271 $geoip_city_country_code
  section 2271 2382 $geoip_city_country_code3
  section 2382 2504 $geoip_city_country_name
  section 2504 2722 $geoip_dma_code
  section 2722 2762 $geoip_latitude
  section 2762 2804 $geoip_longitude
  section 2804 2969 $geoip_region
  section 2969 3155 $geoip_region_name
  section 3155 3245 $geoip_city
  section 3245 3309 $geoip_postal_code
  section 3309 3667 geoip_org
  section 3557 3667 $geoip_org

module ngx_stream_js_module
  section 17 801 name
  section 801 3109 example configuration
  section 3109 4022 directives
  section 3128 3338 js_access
  section 3338 3477 js_filter
  section 3477 3647 js_include
  section 3647 3860 js_preread
  section 3860 4022 js_set
  section 4022 4991 session object properties
  section 4202 4258 remoteaddress
  section 4258 4354 eof
  section 4354 4482 fromupstream
  section 4482 4534 buffer
  section 4534 4596 variables{}
  section 4596 4637 ok
  section 4637 4690 declined
  section 4690 4737 again
  section 4737 4784 error
  section 4784 4901 abort
  section 4901 4991 log(string)

module ngx_stream_limit_conn_module
  section 17 297 name
  section 297 575 example configuration
  section 575 2576 directives
  section 594 1321 limit_conn
  section 1321 1626 limit_conn_log_level
  section 1626 2576 limit_conn_zone

module ngx_stream_log_module
  section 17 191 name
  section 191 461 example configuration
  section 461 4763 directives
  section 480 2930 access_log
  section 2930 3581 log_format
  section 3581 4763 open_log_file_cache
  section 4005 4155 max
  section 4155 4303 inactive
  section 4303 4476 min_uses
  section 4476 4615 valid
  section 4615 4763 off

module ngx_stream_map_module
  section 17 214 name
  section 214 431 example configuration
  section 431 3592 directives
  section 450 2957 map
  section 1678 1886 default value
  section 1886 2222 hostnames
  section 2222 2319 include file
  section 2319 2957 volatile
  section 2957 3315 map_hash_bucket_size
  section 3315 3592 map_hash_max_size

module ngx_stream_proxy_module
  section 17 229 name
  section 229 739 example configuration
  section 739 10161 directives
  section 758 1752 proxy_bind
  section 1752 2107 proxy_buffer_size
  section 2107 2337 proxy_connect_timeout
  section 2337 2855 proxy_download_rate
  section 2855 3254 proxy_next_upstream
  section 3254 3530 proxy_next_upstream_timeout
  section 3530 3820 proxy_next_upstream_tries
  section 3820 4616 proxy_pass
  section 4616 4944 proxy_protocol
  section 4944 5401 proxy_responses
  section 5401 5619 proxy_ssl
  section 5619 5865 proxy_ssl_certificate
  section 5865 6118 proxy_ssl_certificate_key
  section 6118 6495 proxy_ssl_ciphers
  section 6495 6745 proxy_ssl_crl
  section 6745 7213 proxy_ssl_name
  section 7213 7519 proxy_ssl_password_file
  section 7519 7909 proxy_ssl_server_name
  section 7909 8277 proxy_ssl_session_reuse
  section 8277 8605 proxy_ssl_protocols
  section 8605 8884 proxy_ssl_trusted_certificate
  section 8884 9113 proxy_ssl_verify
  section 9113 9344 proxy_ssl_verify_depth
  section 9344 9672 proxy_timeout
  section 9672 10161 proxy_upload_rate

module ngx_stream_realip_module
  section 17 501 name
  section 501 694 example configuration
  section 694 1063 directives
  section 713 1063 set_real_ip_from
  section 1063 1252 embedded variables
  section 1102 1172 $realip_remote_addr
  section 1172 1252 $realip_remote_port

module ngx_stream_return_module
  section 17 235 name
  section 235 350 example configuration
  section 350 564 directives
  section 369 564 return

module ngx_stream_split_clients_module
  section 17 254 name
  section 254 643 example configuration
  section 643 1405 directives
  section 662 1405 split_clients

module ngx_stream_ssl_module
  section 17 362 name
  section 362 1329 example configuration
  section 1329 10940 directives
  section 1348 2450 ssl_certificate
  section 2450 2844 ssl_certificate_key
  section 2844 3280 ssl_ciphers
  section 3280 3707 ssl_client_certificate
  section 3707 3973 ssl_crl
  section 3973 4151 ssl_dhparam
  section 4151 4757 ssl_ecdh_curve
  section 4757 4971 ssl_handshake_timeout
  section 4971 5721 ssl_password_file
  section 5721 6013 ssl_prefer_server_ciphers
  section 6013 6504 ssl_protocols
  section 6504 7901 ssl_session_cache
  section 6872 7008 off
  section 7008 7189 none
  section 7189 7424 builtin
  section 7424 7901 shared
  section 7901 8769 ssl_session_ticket_key
  section 8769 9042 ssl_session_tickets
  section 9042 9269 ssl_session_timeout
  section 9269 9695 ssl_trusted_certificate
  section 9695 10683 ssl_verify_client
  section 10683 10940 ssl_verify_depth
  section 10940 13912 embedded variables
  section 11048 11146 $ssl_cipher
  section 11146 11551 $ssl_ciphers
  section 11551 11743 $ssl_client_cert
  section 11743 11882 $ssl_client_fingerprint
  section 11882 12082 $ssl_client_i_dn
  section 12082 12213 $ssl_client_raw_cert
  section 12213 12414 $ssl_client_s_dn
  section 12414 12545 $ssl_client_serial
  section 12545 12636 $ssl_client_v_end
  section 12636 12747 $ssl_client_v_remain
  section 12747 12842 $ssl_client_v_start
  section 12842 13041 $ssl_client_verify
  section 13041 13472 $ssl_curves
  section 13472 13557 $ssl_protocol
  section 13557 13692 $ssl_server_name
  section 13692 13789 $ssl_session_id
  section 13789 13912 $ssl_session_reused

module ngx_stream_ssl_preread_module
  section 17 546 name
  section 546 1030 example configuration
  section 1030 1303 directives
  section 1049 1303 ssl_preread
  section 1303 1442 embedded variables
  section 1342 1442 $ssl_preread_server_name

module ngx_stream_upstream_hc_module
  section 17 752 name
  section 752 2231 example configuration
  section 2231 6201 directives
  section 2250 4264 health_check
  section 4264 4489 health_check_timeout
  section 4489 6201 match

module ngx_stream_upstream_module
  section 17 264 name
  section 264 1528 example configuration
  section 1528 11484 directives
  section 1547 2641 upstream
  section 2641 7401 server
  section 7401 8058 zone
  section 8058 8961 state
  section 8961 10089 hash
  section 10089 10445 least_conn
  section 10445 11484 least_time
  section 11484 13098 embedded variables
  section 11607 11991 $upstream_addr
  section 11991 12184 $upstream_bytes_sent
  section 12184 12387 $upstream_bytes_received
  section 12387 12632 $upstream_connect_time
  section 12632 12880 $upstream_first_byte_time
  section 12880 13098 $upstream_session_time

module njs_about
  section 18 476 name
  section 476 2393 what is currently supported
  section 2393 2794 what is not supported yet
  section 2794 3975 download and install
  section 3119 3424 installing as a linux package
  section 3424 3975 building from the sources

module request_processing
  section 18 85 name
  section 85 1590 name-based virtual servers
  section 1590 2289 how to prevent processing requests with undefined server names
  section 2289 4031 mixed name-based and ip-based virtual servers
  section 4031 7803 a simple php site configuration

module server_names
  section 18 1308 name
  section 1308 1980 wildcard names
  section 1980 3759 regular expressions names
  section 3759 6442 miscellaneous names
  section 6442 6835 internationalized names
  section 6835 9903 optimization
  section 9903 10791 compatibility

module stream_processing
  section 18 1508 name

module switches
  section 18 1616 name

module syntax
  section 18 1040 name

module sys_errlist
  section 18 535 name

module syslog
  section 18 2133 name
  section 223 598 server=address
  section 598 1080 facility=string
  section 1080 1507 severity=string
  section 1507 1600 tag=string
  section 1600 2133 nohostname

module variables_in_config
  section 18 717 name

module websocket
  section 18 2480 name

module welcome_nginx_facebook
  section 18 5785 name

module windows
  section 18 2249 name
  section 2249 2519 known issues
  section 2519 2768 possible future enhancements

dist lua-5.1.5
  modules lua-5.1.5

module lua-5.1.5
  section 23 286 lua 5.1 reference manual
  section 286 1903 introduction
  section 1903 56832 the language
  section 2494 6469 lexical conventions
  section 6469 9733 values and types
  section 9733 10230 coercion
  section 10230 12425 variables
  section 12425 12633 statements
  section 12633 13583 chunks
  section 13583 14004 blocks
  section 14004 15965 assignment
  section 15965 17558 control structures
  section 17558 20237 for statement
  section 18436 18557 all three control expressions are evaluated only once, before
  section 18557 18686 var, limit, and step are invisible variables.
  section 18686 18767 if the third expression (the step) is absent, then a step of 1
  section 18767 18820 you can use break to exit a for loop.
  section 18820 19691 the loop variable v is local to the loop; you cannot use its
  section 19691 19848 explist is evaluated only once. its results are an
  section 19848 19964 f, s, and var are invisible variables. the
  section 19964 20017 you can use break to exit a for loop.
  section 20017 20237 the loop variables var_i are local to the loop; you
  section 20237 20483 function calls as statements
  section 20483 21089 local declarations
  section 21089 23896 expressions
  section 23896 24538 arithmetic operators
  section 24538 25966 relational operators
  section 25966 27045 logical operators
  section 27045 27340 concatenation
  section 27340 28092 the length operator
  section 28092 28550 precedence
  section 28550 30169 table constructors
  section 30169 32583 function calls
  section 32583 35921 function definitions
  section 35921 37411 visibility rules
  section 37411 37907 error handling
  section 37907 47900 metatables
  section 40693 41665 add: the + operation.
  section 41665 41745 sub: the - operation. behavior similar to the add
  section 41745 41825 mul: the * operation. behavior similar to the add
  section 41825 41905 div: the / operation. behavior similar to the add
  section 41905 42056 mod: the % operation. behavior similar to the add
  section 42056 42232 pow: the ^ (exponentiation) operation. behavior similar
  section 42232 42774 unm: the unary - operation.
  section 42774 43251 concat: the .. (concatenation) operation.
  section 43251 43839 len: the # operation.
  section 43839 44868 eq: the == operation. the function getcomphandler
  section 44868 45413 lt: the < operation.
  section 45413 46234 le: the <= operation.
  section 46234 46845 index: the indexing access table[key].
  section 46845 47538 newindex: the indexing assignment table[key] = value.
  section 47538 47900 call: called when lua calls a value.
  section 47900 49651 environments
  section 49651 51359 garbage collection
  section 51359 52450 garbage-collection metamethods
  section 52450 53498 weak tables
  section 53498 56832 coroutines
  section 56832 112126 the application program interface
  section 57605 58842 the stack
  section 58842 59733 stack size
  section 59733 60529 pseudo-indices
  section 60529 61219 c closures
  section 61219 61886 registry
  section 61886 62587 error handling in c
  section 62587 63590 functions and types
  section 63590 65260 lua_alloc
  section 65260 65737 lua_atpanic
  section 65737 67685 lua_call
  section 67685 69206 lua_cfunction
  section 69206 69540 lua_checkstack
  section 69540 70072 lua_close
  section 70072 70478 lua_concat
  section 70478 70950 lua_cpcall
  section 70950 71350 lua_createtable
  section 71350 71926 lua_dump
  section 71926 72261 lua_equal
  section 72261 72529 lua_error
  section 72529 73848 lua_gc
  section 72740 72796 lua_gcstop: stops the garbage collector.
  section 72796 72858 lua_gcrestart: restarts the garbage collector.
  section 72858 72930 lua_gccollect: performs a full garbage-collection cycle.
  section 72930 73022 lua_gccount: returns the current amount of memory (in
  section 73022 73146 lua_gccountb: returns the remainder of dividing the
  section 73146 73482 lua_gcstep: performs an incremental step of garbage
  section 73482 73650 lua_gcsetpause: sets data as the new value for the
  section 73650 73848 lua_gcsetstepmul: sets data as the new value for the
  section 73848 74093 lua_getallocf
  section 74093 74257 lua_getfenv
  section 74257 74542 lua_getfield
  section 74542 74792 lua_getglobal
  section 74792 75098 lua_getmetatable
  section 75098 75501 lua_gettable
  section 75501 75746 lua_gettop
  section 75746 76032 lua_insert
  section 76032 76268 lua_integer
  section 76268 76446 lua_isboolean
  section 76446 76627 lua_iscfunction
  section 76627 76822 lua_isfunction
  section 76822 77015 lua_islightuserdata
  section 77015 77178 lua_isnil
  section 77178 77394 lua_isnone
  section 77394 77660 lua_isnoneornil
  section 77660 77867 lua_isnumber
  section 77867 78092 lua_isstring
  section 78092 78260 lua_istable
  section 78260 78431 lua_isthread
  section 78431 78631 lua_isuserdata
  section 78631 79000 lua_lessthan
  section 79000 80005 lua_load
  section 79371 79397 0: no errors;
  section 79397 79464 lua_errsyntax: syntax error during pre-compilation;
  section 79464 80005 lua_errmem: memory allocation error.
  section 80005 80418 lua_newstate
  section 80418 80601 lua_newtable
  section 80601 81082 lua_newthread
  section 81082 81818 lua_newuserdata
  section 81818 82799 lua_next
  section 82799 83062 lua_number
  section 83062 83427 lua_objlen
  section 83427 84989 lua_pcall
  section 84747 84791 lua_errrun: a runtime error.
  section 84791 84906 lua_errmem: memory allocation error. for such errors, lua
  section 84906 84989 lua_errerr: error while running the error handler
  section 84989 85099 lua_pop
  section 85099 85245 lua_pushboolean
  section 85245 86015 lua_pushcclosure
  section 86015 86571 lua_pushcfunction
  section 86571 87448 lua_pushfstring
  section 86849 87023 you do not have to allocate space for the result: the result is
  section 87023 87448 the conversion specifiers are quite restricted. there are no
  section 87448 87595 lua_pushinteger
  section 87595 88030 lua_pushlightuserdata
  section 88030 88290 lua_pushliteral
  section 88290 88655 lua_pushlstring
  section 88655 88766 lua_pushnil
  section 88766 88910 lua_pushnumber
  section 88910 89303 lua_pushstring
  section 89303 89496 lua_pushthread
  section 89496 89657 lua_pushvalue
  section 89657 89957 lua_pushvfstring
  section 89957 90267 lua_rawequal
  section 90267 90431 lua_rawget
  section 90431 90676 lua_rawgeti
  section 90676 90844 lua_rawset
  section 90844 91180 lua_rawseti
  section 91180 91852 lua_reader
  section 91852 92187 lua_register
  section 92187 92473 lua_remove
  section 92473 92705 lua_replace
  section 92705 93675 lua_resume
  section 93675 93856 lua_setallocf
  section 93856 94172 lua_setfenv
  section 94172 94547 lua_setfield
  section 94547 94819 lua_setglobal
  section 94819 95021 lua_setmetatable
  section 95021 95437 lua_settable
  section 95437 95740 lua_settop
  section 95740 96151 lua_state
  section 96151 96415 lua_status
  section 96415 96870 lua_toboolean
  section 96870 97099 lua_tocfunction
  section 97099 97497 lua_tointeger
  section 97497 98417 lua_tolstring
  section 98417 98739 lua_tonumber
  section 98739 99205 lua_topointer
  section 99205 99362 lua_tostring
  section 99362 99624 lua_tothread
  section 99624 99891 lua_touserdata
  section 99891 100368 lua_type
  section 100368 100573 lua_typename
  section 100573 101145 lua_writer
  section 101145 101407 lua_xmove
  section 101407 101915 lua_yield
  section 101915 102220 the debug interface
  section 102220 104690 lua_debug
  section 103037 103234 source: if the function was defined in a string, then
  section 103234 103326 short_src: a printable version of source, to be used
  section 103326 103415 linedefined: the line number where the definition of the
  section 103415 103506 lastlinedefined: the line number where the definition of
  section 103506 103783 what: the string lua if the function is a lua
  section 103783 103935 currentline: the current line where the given function is
  section 103935 104336 name: a reasonable name for the given function. because
  section 104336 104621 namewhat: explains the name field. the value of
  section 104621 104690 nups: the number of upvalues of the function.
  section 104690 104805 lua_gethook
  section 104805 104922 lua_gethookcount
  section 104922 105036 lua_gethookmask
  section 105036 106761 lua_getinfo
  section 106022 106086 n: fills in the field name and namewhat;
  section 106086 106200 s: fills in the fields source, short_src,
  section 106200 106255 l: fills in the field currentline;
  section 106255 106303 u: fills in the field nups;
  section 106303 106394 f: pushes onto the stack the function that is running
  section 106394 106761 l: pushes onto the stack a table whose indices are the
  section 106761 107592 lua_getlocal
  section 107592 108126 lua_getstack
  section 108126 108899 lua_getupvalue
  section 108899 109844 lua_hook
  section 109844 111180 lua_sethook
  section 110343 110518 the call hook: is called when the interpreter calls a
  section 110518 110724 the return hook: is called when the interpreter returns from
  section 110724 110961 the line hook: is called when the interpreter is about to
  section 110961 111180 the count hook: is called after the interpreter executes
  section 111180 111671 lua_setlocal
  section 111671 112126 lua_setupvalue
  section 112126 129890 the auxiliary library
  section 113017 113140 functions and types
  section 113140 113293 lual_addchar
  section 113293 113536 lual_addlstring
  section 113536 113758 lual_addsize
  section 113758 113992 lual_addstring
  section 113992 114327 lual_addvalue
  section 114327 114694 lual_argcheck
  section 114694 115058 lual_argerror
  section 115058 116199 lual_buffer
  section 115257 115324 first you declare a variable b of type lual_buffer.
  section 115324 115393 then you initialize it with a call lual_buffinit(l, &b).
  section 115393 115486 then you add string pieces to the buffer calling any of the
  section 115486 116199 you finish by calling lual_pushresult(&b). this call leaves
  section 116199 116429 lual_buffinit
  section 116429 116919 lual_callmeta
  section 116919 117105 lual_checkany
  section 117105 117294 lual_checkint
  section 117294 117506 lual_checkinteger
  section 117506 117698 lual_checklong
  section 117698 118073 lual_checklstring
  section 118073 118257 lual_checknumber
  section 118257 119034 lual_checkoption
  section 119034 119304 lual_checkstack
  section 119304 119605 lual_checkstring
  section 119605 119816 lual_checktype
  section 119816 120038 lual_checkudata
  section 120038 120335 lual_dofile
  section 120335 120630 lual_dostring
  section 120630 121107 lual_error
  section 121107 121426 lual_getmetafield
  section 121426 121643 lual_getmetatable
  section 121643 121995 lual_gsub
  section 121995 122454 lual_loadbuffer
  section 122454 123002 lual_loadfile
  section 123002 123350 lual_loadstring
  section 123350 123737 lual_newmetatable
  section 123737 124136 lual_newstate
  section 124136 124271 lual_openlibs
  section 124271 124531 lual_optint
  section 124531 124882 lual_optinteger
  section 124882 125146 lual_optlong
  section 125146 125590 lual_optlstring
  section 125590 125852 lual_optnumber
  section 125852 126174 lual_optstring
  section 126174 126528 lual_prepbuffer
  section 126528 126696 lual_pushresult
  section 126696 127415 lual_ref
  section 127415 127764 lual_reg
  section 127764 128541 lual_register
  section 128541 128701 lual_typename
  section 128701 129086 lual_typerror
  section 129086 129459 lual_unref
  section 129459 129890 lual_where
  section 129890 189003 standard libraries
  section 130511 130577 basic library, which includes the coroutine sub-library;
  section 130577 130603 package library;
  section 130603 130633 string manipulation;
  section 130633 130662 table manipulation;
  section 130662 130712 mathematical functions (sin, log, etc.);
  section 130712 130739 input and output;
  section 130739 130777 operating system facilities;
  section 130777 131655 debug facilities.
  section 131655 131897 basic functions
  section 131897 132140 assert (v [, message])
  section 132140 133205 collectgarbage ([opt [, arg]])
  section 132326 132419 collect: performs a full garbage-collection cycle. this is
  section 132419 132468 stop: stops the garbage collector.
  section 132468 132523 restart: restarts the garbage collector.
  section 132523 132596 count: returns the total memory in use by lua (in kbytes).
  section 132596 132892 step: performs a garbage-collection step. the step size
  section 132892 133039 setpause: sets arg as the new value for the pause of
  section 133039 133205 setstepmul: sets arg as the new value for the i<step
  section 133205 133557 dofile ([filename])
  section 133557 134147 error (message [, level])
  section 134147 134406 _g
  section 134406 134753 getfenv ([f])
  section 134753 134995 getmetatable (object)
  section 134995 135285 ipairs (t)
  section 135285 135851 load (func [, chunkname])
  section 135851 136001 loadfile ([filename])
  section 136001 136244 loadstring (string [, chunkname])
  section 136244 137218 next (table [, index])
  section 137218 137520 pairs (t)
  section 137520 138025 pcall (f, arg1, ...)
  section 138025 138362 print (...)
  section 138362 138485 rawequal (v1, v2)
  section 138485 138646 rawget (table, index)
  section 138646 138902 rawset (table, index, value)
  section 138902 139156 select (index, ...)
  section 139156 139551 setfenv (f, table)
  section 139551 139883 setmetatable (table, metatable)
  section 139883 140545 tonumber (e [, base])
  section 140545 140901 tostring (e)
  section 140901 141165 type (v)
  section 141165 141519 unpack (list [, i [, j]])
  section 141519 141695 _version
  section 141695 142322 xpcall (f, err)
  section 142322 142539 coroutine manipulation
  section 142539 142704 coroutine.create (f)
  section 142704 143418 coroutine.resume (co [, val1, ...])
  section 143418 143525 coroutine.running ()
  section 143525 143992 coroutine.status (co)
  section 143992 144358 coroutine.wrap (f)
  section 144358 144609 coroutine.yield (...)
  section 144609 144865 modules
  section 144865 145998 module (name [, ...])
  section 145998 147473 require (modname)
  section 147473 147747 package.cpath
  section 147747 147979 package.loaded
  section 147979 150554 package.loaders
  section 150554 151433 package.loadlib (libname, funcname)
  section 151433 151792 package.path
  section 151792 151885 package.preload
  section 151885 152127 package.seeall (module)
  section 152127 152908 string manipulation
  section 152908 153205 string.byte (s [, i [, j]])
  section 153205 153522 string.char (...)
  section 153522 153763 string.dump (function)
  section 153763 154542 string.find (s, pattern [, init [, plain]])
  section 154542 155699 string.format (formatstring, ...)
  section 155699 156475 string.gmatch (s, pattern)
  section 156475 158565 string.gsub (s, pattern, repl [, n])
  section 158565 158734 string.len (s)
  section 158734 158983 string.lower (s)
  section 158983 159390 string.match (s, pattern [, init])
  section 159390 159499 string.rep (s, n)
  section 159499 159582 string.reverse (s)
  section 159582 159980 string.sub (s, i [, j])
  section 159980 160227 string.upper (s)
  section 160227 160252 patterns
  section 160252 162558 character class:
  section 160420 160543 x: (where x is not one of the magic characters
  section 160543 160596 .: (a dot) represents all characters.
  section 160596 160639 %a: represents all letters.
  section 160639 160693 %c: represents all control characters.
  section 160693 160735 %d: represents all digits.
  section 160735 160788 %l: represents all lowercase letters.
  section 160788 160846 %p: represents all punctuation characters.
  section 160846 160898 %s: represents all space characters.
  section 160898 160951 %u: represents all uppercase letters.
  section 160951 161010 %w: represents all alphanumeric characters.
  section 161010 161064 %x: represents all hexadecimal digits.
  section 161064 161131 %z: represents the character with representation 0.
  section 161131 161407 %x: (where x is any non-alphanumeric character)
  section 161407 162091 [set]: represents the class which is the union of all
  section 162091 162558 [^set]: represents the complement of set, where
  section 162558 163965 pattern item:
  section 162613 162697 a single character class, which matches any single character in
  section 162697 162887 a single character class followed by *, which matches 0 or
  section 162887 163077 a single character class followed by +, which matches 1 or
  section 163077 163291 a single character class followed by -, which also matches
  section 163291 163406 a single character class followed by ?, which matches 0 or
  section 163406 163531 %n, for n between 1 and 9; such item matches a
  section 163531 163965 c<%bi<xy>>, where x and y are two distinct characters;
  section 163965 164298 pattern:
  section 164298 165115 captures:
  section 165115 165468 table manipulation
  section 165468 165846 table.concat (table [, sep [, i [, j]]])
  section 165846 166180 table.insert (table, [pos,] value)
  section 166180 166407 table.maxn (table)
  section 166407 166759 table.remove (table [, pos])
  section 166759 167351 table.sort (table [, comp])
  section 167351 167507 mathematical functions
  section 167507 167569 math.abs (x)
  section 167569 167641 math.acos (x)
  section 167641 167711 math.asin (x)
  section 167711 167784 math.atan (x)
  section 167784 167994 math.atan2 (y, x)
  section 167994 168080 math.ceil (x)
  section 168080 168161 math.cos (x)
  section 168161 168227 math.cosh (x)
  section 168227 168307 math.deg (x)
  section 168307 168358 math.exp (x)
  section 168358 168445 math.floor (x)
  section 168445 168568 math.fmod (x, y)
  section 168568 168747 math.frexp (x)
  section 168747 168852 math.huge
  section 168852 168927 math.ldexp (m, e)
  section 168927 168992 math.log (x)
  section 168992 169059 math.log10 (x)
  section 169059 169161 math.max (x, ...)
  section 169161 169263 math.min (x, ...)
  section 169263 169370 math.modf (x)
  section 169370 169411 math.pi
  section 169411 169519 math.pow (x, y)
  section 169519 169599 math.rad (x)
  section 169599 170152 math.random ([m [, n]])
  section 170152 170290 math.randomseed (x)
  section 170290 170369 math.sin (x)
  section 170369 170433 math.sinh (x)
  section 170433 170559 math.sqrt (x)
  section 170559 170641 math.tan (x)
  section 170641 170707 math.tanh (x)
  section 170707 171705 input and output facilities
  section 171705 171818 io.close ([file])
  section 171818 171901 io.flush ()
  section 171901 172302 io.input ([file])
  section 172302 172925 io.lines ([filename])
  section 172925 173712 io.open (filename [, mode])
  section 173177 173219 r: read mode (the default);
  section 173219 173248 w: write mode;
  section 173248 173278 a: append mode;
  section 173278 173341 r+: update mode, all previous data is preserved;
  section 173341 173401 w+: update mode, all previous data is erased;
  section 173401 173712 a+: append update mode, previous data is preserved,
  section 173712 173811 io.output ([file])
  section 173811 174136 io.popen (prog [, mode])
  section 174136 174221 io.read (...)
  section 174221 174377 io.tmpfile ()
  section 174377 174607 io.type (obj)
  section 174607 174695 io.write (...)
  section 174695 174879 file:close ()
  section 174879 174941 file:flush ()
  section 174941 175254 file:lines ()
  section 175254 176225 file:read (...)
  section 175670 175771 *n: reads a number; this is the only format that returns a
  section 175771 175890 *a: reads the whole file, starting at the current
  section 175890 176017 *l: reads the next line (skipping the end of line),
  section 176017 176225 number: reads a string with up to this number of
  section 176225 177151 file:seek ([whence] [, offset])
  section 176444 176507 set: base is position 0 (beginning of the file);
  section 176507 176552 cur: base is current position;
  section 176552 177151 end: base is end of file;
  section 177151 177798 file:setvbuf (mode [, size])
  section 177276 177364 no: no buffering; the result of any output operation
  section 177364 177521 full: full buffering; output operation is performed only
  section 177521 177798 line: line buffering; output is buffered until a newline
  section 177798 178027 file:write (...)
  section 178027 178120 operating system facilities
  section 178120 178228 os.clock ()
  section 178228 179329 os.date ([format [, time]])
  section 179329 179505 os.difftime (t2, t1)
  section 179505 179810 os.execute ([command])
  section 179810 179978 os.exit ([code])
  section 179978 180119 os.getenv (varname)
  section 180119 180324 os.remove (filename)
  section 180324 180503 os.rename (oldname, newname)
  section 180503 181233 os.setlocale (locale [, category])
  section 181233 181915 os.time ([table])
  section 181915 182532 os.tmpname ()
  section 182532 183378 the debug library
  section 183378 183885 debug.debug ()
  section 183885 183956 debug.getfenv (o)
  section 183956 184180 debug.gethook ([thread])
  section 184180 185360 debug.getinfo ([thread,] function [, what])
  section 185360 186008 debug.getlocal ([thread,] level, local)
  section 186008 186137 debug.getmetatable (object)
  section 186137 186216 debug.getregistry ()
  section 186216 186432 debug.getupvalue (func, up)
  section 186432 186561 debug.setfenv (object, table)
  section 186561 187838 debug.sethook ([thread,] hook, mask [, count])
  section 186819 186891 c: the hook is called every time lua calls a function;
  section 186891 186970 r: the hook is called every time lua returns from a
  section 186970 187838 l: the hook is called every time lua enters a new line
  section 187838 188288 debug.setlocal ([thread,] level, local, value)
  section 188288 188424 debug.setmetatable (object, table)
  section 188424 188690 debug.setupvalue (func, up, value)
  section 188690 189003 debug.traceback ([thread,] [message [, level]])
  section 189003 192563 lua stand-alone
  section 189460 189512 -e stat: executes string stat;
  section 189512 189557 -l mod: requires mod;
  section 189557 189625 -i: enters interactive mode after running script;
  section 189625 189672 -v: prints version information;
  section 189672 189715 --: stops handling options;
  section 189715 192563 -: executes stdin as a file and stops handling
  section 192563 195704 incompatibilities with the previous version
  section 192913 193505 changes in the language
  section 192958 193153 the vararg system changed from the pseudo-argument arg with
  section 193153 193284 there was a subtle change in the scope of the implicit
  section 193284 193505 the long string/long comment syntax ([[string]]) does not
  section 193505 194851 changes in the libraries
  section 193551 193678 function string.gfind was renamed string.gmatch. (see
  section 193678 193878 when string.gsub is called with a function as its third
  section 193878 194100 function table.setn was deprecated. function table.getn
  section 194100 194226 function loadlib was renamed package.loadlib. (see
  section 194226 194343 function math.mod was renamed math.fmod. (see
  section 194343 194476 functions table.foreach and table.foreachi are
  section 194476 194709 there were substantial changes in function require due to
  section 194709 194851 function collectgarbage has different arguments. function
  section 194851 195704 changes in the api
  section 194891 195055 the luaopen_* functions (to open libraries) cannot be called
  section 195055 195304 function lua_open was replaced by lua_newstate to allow
  section 195304 195477 functions lual_getn and lual_setn (from the auxiliary
  section 195477 195545 function lual_openlib was replaced by lual_register.
  section 195545 195704 function lual_checkudata now throws an error when the given
  section 195704 197381 the complete syntax of lua

dist luajit-2.1
  modules changes contact ext_c_api ext_ffi ext_ffi_api ext_ffi_semantics ext_ffi_tutorial ext_jit ext_profiler extensions faq install luajit-2.1 running status

module changes
  section 14 39336 luajit change history
  section 51 74 luajit
  section 74 104 download e<rchevron>
  section 104 126 installation
  section 126 150 running
  section 150 177 extensions
  section 177 205 ffi library
  section 205 227 ffi tutorial
  section 227 246 ffi.* api
  section 246 276 ffi semantics
  section 276 299 jit.* library
  section 299 318 lua/c api
  section 318 343 profiler
  section 343 366 status
  section 366 390 changes
  section 390 403 faq
  section 403 436 performance e<rchevron>
  section 436 462 wiki e<rchevron>
  section 462 716 mailing list e<rchevron>
  section 716 1836 luajit 2.1.0-beta3 e<mdash> 2017-05-01
  section 770 811 rewrite memory block allocator.
  section 811 860 add various extension from lua 5.2/5.3.
  section 860 911 remove old lua 5.0 compatibility defines.
  section 911 982 set arg table before evaluating lua_init and -e chunks.
  section 982 1041 fix fold rules for math.abs() and fp negation.
  section 1041 1093 fix soft-float math.abs() and negation.
  section 1093 1159 fix formatting of some small denormals at low precision.
  section 1159 1203 lj_gc64: add jit compiler support.
  section 1203 1251 x64/lj_gc64: add jit compiler backend.
  section 1251 1317 x86/x64: generate bmi2 shifts and rotates, if available.
  section 1317 1376 windows/x86: add full exception interoperability.
  section 1376 1416 arm64: add big-endian support.
  section 1416 1458 arm64: add jit compiler backend.
  section 1458 1495 mips: fix tsetr barrier.
  section 1495 1539 mips: support mips16 interlinking.
  section 1539 1598 mips soft-float: fix code generation for href.
  section 1598 1659 mips64: add mips64 hard-float jit compiler backend.
  section 1659 1733 mips64: add mips64 hard-float/soft-float support to
  section 1733 1778 ffi: compile bitfield loads/stores.
  section 1778 1836 various fixes common with the 2.0 branch.
  section 1836 2337 luajit 2.1.0-beta2 e<mdash> 2016-03-03
  section 1890 1923 enable trace stitching.
  section 1923 1998 use internal implementation for converting fp numbers to
  section 1998 2063 parse unicode escape \u{xx...} in string literals.
  section 2063 2101 add mips soft-float support.
  section 2101 2148 switch mips port to dual-number mode.
  section 2148 2214 x86/x64: add support for aes-ni, avx and avx2 to dynasm.
  section 2214 2256 ffi: add ssize_t declaration.
  section 2256 2300 ffi: parse #line nn and #nn.
  section 2300 2337 various minor fixes.
  section 2337 4583 luajit 2.1.0-beta1 e<mdash> 2015-08-25
  section 2527 2567 changes to the vm core:
  section 2567 2612 add low-overhead profiler (-jp).
  section 2612 2714 add lj_gc64 mode: 64 bit gc object references (really: 47
  section 2714 2793 add lj_fr2 mode: two-slot frame info. required by lj_gc64
  section 2793 2843 add table.new() and table.clear().
  section 2843 2900 parse binary number literals (0bxxx).
  section 2900 2950 improvements to the jit compiler:
  section 2950 2999 add trace stitching (disabled for now).
  section 2999 3223 compile various builtins: string.char(),
  section 3223 3298 compile string.find() for fixed string searches (no
  section 3298 3349 compile bc_tsetm, e.g. {1,2,3,f()}.
  section 3349 3401 compile string concatenations (bc_cat).
  section 3401 3442 compile __concat metamethod.
  section 3442 3487 various minor optimizations.
  section 3487 3521 internal changes:
  section 3521 3586 add support for embedding luajit bytecode for builtins.
  section 3586 3644 replace various builtins with embedded bytecode.
  section 3644 3700 refactor string buffers and string formatting.
  section 3700 3778 remove obsolete non-truncating number to integer conversions.
  section 3778 3801 ports:
  section 3801 3847 add xbox one port (lj_gc64 mode).
  section 3847 3910 arm64: add port of the interpreter (lj_gc64 mode).
  section 3910 3981 x64: add separate port of the interpreter to lj_gc64 mode.
  section 3981 4053 x86/x64: drop internal x87 math functions. use libm functions.
  section 4053 4127 x86: remove x87 support from interpreter. sse2 is mandatory
  section 4127 4189 ppc/e500: drop support for this architecture.
  section 4189 4218 ffi library:
  section 4218 4263 ffi: add 64 bit bitwise operations.
  section 4263 4350 ffi: compile vla/vls and large cdata allocations with default
  section 4350 4421 ffi: compile conversions from functions to function pointers.
  section 4421 4482 ffi: compile lightuserdata to void * conversion.
  section 4482 4532 ffi: compile ffi.gc(cdata, nil), too.
  section 4532 4583 ffi: add ffi.typeinfo().
  section 4583 6868 luajit 2.0.5 e<mdash> 2017-05-01
  section 4631 4684 add workaround for msvc 2015 stdio changes.
  section 4684 4758 limit mcode alloc probing, depending on the available pool
  section 4758 4829 fix overly restrictive range calculation in mcode allocation.
  section 4829 4880 fix out-of-scope goto handling in parser.
  section 4880 4950 remove internal __mode = k and replace with safe check.
  section 4950 5004 add proto field to jit.util.funcinfo().
  section 5004 5043 fix gc step size calculation.
  section 5043 5115 initialize uv->immutable for upvalues of loaded chunks.
  section 5115 5177 fix for cdata vs. non-cdata arithmetics/comparisons.
  section 5177 5240 drop leftover regs in for iterator assignment, too.
  section 5240 5281 fix phi remarking in sink pass.
  section 5281 5354 dont try to record outermost pcall() return to lower frame.
  section 5354 5431 add guard for obscure aliasing between open upvalues and ssa
  section 5431 5510 remove assumption that lj_math_random_step() doesnt clobber
  section 5510 5580 fix handling of non-numeric strings in arithmetic coercions.
  section 5580 5647 fix recording of select(n, ...) with off-trace varargs
  section 5647 5686 fix install for cross-builds.
  section 5686 5762 dont allocate unused 2nd result register in jit compiler
  section 5762 5823 drop marks from replayed instructions when sinking.
  section 5823 5853 fix unsinking check.
  section 5853 5902 properly handle oom in trace_save().
  section 5902 5979 limit number of arguments given to io.lines() and
  section 5979 6015 fix narrowing of tobit.
  section 6015 6058 osx: fix build with recent xcode.
  section 6058 6123 x86/x64: dont spill an explicit ref_base in the ir.
  section 6123 6173 x86/x64: fix instruction length decoder.
  section 6173 6246 x86/x64: search for exit jumps with instruction length decoder.
  section 6246 6310 arm: fix blx encoding for thumb interworking calls.
  section 6310 6368 mips: dont use rid_gp as a scratch register.
  section 6368 6429 mips: fix emitted code for u32 to float conversion.
  section 6429 6491 mips: backport workaround for compact unwind tables.
  section 6491 6535 mips: fix cross-endian jit.bcsave.
  section 6535 6582 mips: fix bc_isnext fallback path.
  section 6582 6646 mips: fix use of ffgccheck delay slots in interpreter.
  section 6646 6703 ffi: fix fold rules for int64_t comparisons.
  section 6703 6753 ffi: fix split pass for conv i64.u64.
  section 6753 6794 ffi: fix ipairs() recording.
  section 6794 6868 ffi: dont propagate qualifiers into subtypes of complex.
  section 6868 9694 luajit 2.0.4 e<mdash> 2015-05-14
  section 6916 6968 fix stack check in narrowing optimization.
  section 6968 7028 fix lua/c api typecheck error for special indexes.
  section 7028 7070 fix string to number conversion.
  section 7070 7122 fix lexer error for chunks without tokens.
  section 7122 7196 dont compile ir_retf after callt to ff with-side
  section 7196 7263 fix bc_uclo/bc_jmp join optimization in lua parser.
  section 7263 7320 fix corner case in string to number conversion.
  section 7320 7389 gracefully handle lua_error() for a suspended coroutine.
  section 7389 7445 avoid error messages when building with clang.
  section 7445 7519 fix snapshot #0 handling for traces with a stack check on
  section 7519 7583 fix fused constant loads under high register pressure.
  section 7583 7636 invalidate backpropagation cache after dce.
  section 7636 7666 fix abc elimination.
  section 7666 7727 fix debug info for main chunk of stripped bytecode.
  section 7727 7782 fix fold rule for string.sub(s, ...) == k.
  section 7782 7831 fix fold rule for strref of snew.
  section 7831 7896 fix frame traversal while searching for error function.
  section 7896 7962 prevent gc estimate miscalculation due to buffer growth.
  section 7962 8016 prevent adding side traces for stack checks.
  section 8016 8084 fix top slot calculation for snapshots with continuations.
  section 8084 8141 fix check for reuse of scev results in forl.
  section 8141 8168 add ps vita port.
  section 8168 8216 fix compatibility issues with illumos.
  section 8216 8260 fix dragonfly build (unsupported).
  section 8260 8332 openbsd/x86: better executable memory allocation for w^x mode.
  section 8332 8392 x86: fix argument checks for ipairs() iterator.
  section 8392 8463 x86: lj_math_random_step() clobbers xmm regs on osx clang.
  section 8463 8536 x86: fix code generation for unused result of math.random().
  section 8536 8622 x64: allow building with luajit_use_sysmalloc and
  section 8622 8675 x86/x64: fix argument check for bit shifts.
  section 8675 8739 x86/x64: fix code generation for fused test/arith ops.
  section 8739 8793 arm: fix write barrier check in bc_usets.
  section 8793 8857 ppc: fix red zone overflow in machine code generation.
  section 8857 8898 ppc: dont use mcrxr on ppe.
  section 8898 8962 various archs: fix excess stack growth in interpreter.
  section 8962 9022 ffi: fix fold rule for tobit + conv num.u32.
  section 9022 9072 ffi: prevent dse across ffi.string().
  section 9072 9147 ffi: no meta fallback when indexing pointer to incomplete
  section 9147 9203 ffi: fix initialization of unions of subtypes.
  section 9203 9269 ffi: fix cdata vs. non-cdata arithmetic and comparisons.
  section 9269 9346 ffi: fix __index/__newindex metamethod resolution for
  section 9346 9403 ffi: fix compilation of reference field access.
  section 9403 9472 ffi: fix frame traversal for backtraces with ffi callbacks.
  section 9472 9550 ffi: fix recording of indexing a struct pointer ctype object
  section 9550 9627 ffi: allow non-scalar cdata to be compared for equality by
  section 9627 9694 ffi: fix pseudo type conversions for type punning.
  section 9694 11483 luajit 2.0.3 e<mdash> 2014-03-12
  section 9742 9765 add ps4 port.
  section 9765 9814 add support for multilib distro builds.
  section 9814 9838 fix osx build.
  section 9838 9864 fix mingw build.
  section 9864 9893 fix xbox 360 build.
  section 9893 9946 improve uload forwarding for open upvalues.
  section 9946 10021 fix gc steps threshold handling when called by jit-compiled
  section 10021 10087 fix argument checks for math.deg() and math.rad().
  section 10087 10125 fix jit.flush(func|true).
  section 10125 10194 respect jit.off(func) when returning to a function, too.
  section 10194 10249 fix compilation of string.byte(s, nil, n).
  section 10249 10317 fix line number for relocated bytecode after closure fixup
  section 10317 10362 fix frame traversal for backtraces.
  section 10362 10392 fix abc elimination.
  section 10392 10433 fix handling of redundant phis.
  section 10433 10492 fix snapshot restore for exit to function header.
  section 10492 10557 fix type punning alias analysis for constified pointers
  section 10557 10627 fix call unroll checks in the presence of metamethod frames.
  section 10627 10683 fix initial maxslot for down-recursive traces.
  section 10683 10752 prevent base register coalescing if parent uses ir_retf.
  section 10752 10822 dont purge modified function from stack slots in bc_ret.
  section 10822 10860 fix recording of bc_varg.
  section 10860 10920 dont access dangling reference to reallocated ir.
  section 10920 10985 fix frame depth display for bytecode dump in -jdump.
  section 10985 11050 arm: fix register allocation when rematerializing fprs.
  section 11050 11111 x64: fix store to upvalue for lightuserdata values.
  section 11111 11181 ffi: add missing gc steps for callback argument conversions.
  section 11181 11224 ffi: properly unload loaded dlls.
  section 11224 11279 ffi: fix argument checks for ffi.string().
  section 11279 11339 ffi/x64: fix passing of vector arguments to calls.
  section 11339 11403 ffi: rehash finalizer table after gc cycle, if needed.
  section 11403 11483 ffi: fix cts->l for cdata unsinking in snapshot restore.
  section 11483 13243 luajit 2.0.2 e<mdash> 2013-06-03
  section 11531 11591 fix memory access check for fast string interning.
  section 11591 11640 fix msvc intrinsics for older versions.
  section 11640 11693 add missing gc steps for io.* functions.
  section 11693 11762 fix spurious red zone overflows in machine code generation.
  section 11762 11816 fix jump-range constrained mcode allocation.
  section 11816 11867 inhibit dse for implicit loads via calls.
  section 11867 11937 fix builtin string to number conversion for overflow digits.
  section 11937 12003 fix optional argument handling while recording builtins.
  section 12003 12065 fix optional argument handling in table.concat().
  section 12065 12133 add partial support for building with mingw64 gcc 4.8-seh.
  section 12133 12213 add missing phi barrier to string.sub(str, a, b) == kstr
  section 12213 12261 fix compatibility issues with illumos.
  section 12261 12333 arm: fix cache flush/sync for exit stubs of jit-compiled code.
  section 12333 12402 mips: fix cache flush/sync for jit-compiled code jump area.
  section 12402 12474 ppc: add plt suffix for external calls from assembler code.
  section 12474 12529 ffi: fix snapshot substitution in split pass.
  section 12529 12595 ffi/x86: fix register allocation for 64 bit comparisons.
  section 12595 12670 ffi: fix tailcall in lowest frame to c function with bool
  section 12670 12734 ffi: ignore long type specifier in ffi.istype().
  section 12734 12823 ffi: fix calling conventions for 32 bit osx and ios simulator
  section 12823 12903 ffi: fix calling conventions for arm hard-float eabi (nested
  section 12903 12981 ffi: improve error messages for arithmetic and comparison
  section 12981 13053 ffi: insert no-op type conversion for pointer to integer cast.
  section 13053 13103 ffi: fix unroll limit for ffi.fill().
  section 13103 13161 ffi: must sink xbar together with xstores.
  section 13161 13243 ffi: preserve intermediate string for const char *
  section 13243 14290 luajit 2.0.1 e<mdash> 2013-02-19
  section 13291 13343 dont clear frame for out-of-memory error.
  section 13343 13407 leave hook when resume catches error thrown from hook.
  section 13407 13466 add missing gc steps for template table creation.
  section 13466 13525 fix discharge order of comparisons in lua parser.
  section 13525 13576 improve buffer handling for io.read().
  section 13576 13643 osx: add support for mach-o object files to -b option.
  section 13643 13666 fix ps3 port.
  section 13666 13701 fix/enable xbox 360 port.
  section 13701 13764 x86/x64: always mark ref for shift count as non-weak.
  section 13764 13828 x64: dont fuse implicitly 32-to-64 extended operands.
  section 13828 13876 arm: fix armhf call argument handling.
  section 13876 13941 arm: fix code generation for integer math.min/math.max.
  section 13941 13994 ppc/e500: fix lj_vm_floor() for inf/nan.
  section 13994 14067 ffi: change priority of table initializer variants for structs.
  section 14067 14140 ffi: fix code generation for bool call result check on x86/x64.
  section 14140 14215 ffi: load ffi library on-demand for bytecode with cdata
  section 14215 14290 ffi: fix handling of qualified transparent structs/unions.
  section 14290 15159 luajit 2.0.0 e<mdash> 2012-11-08
  section 14338 14384 correctness and completeness:
  section 14384 14416 fix android/x86 build.
  section 14416 14489 fix recording of equality comparisons with __eq metamethods.
  section 14489 14535 fix detection of immutable upvalues.
  section 14535 14607 replace error with panic for callbacks from jit-compiled code.
  section 14607 14672 fix builtin string to number conversion for int_min.
  section 14672 14735 dont create unneeded array part for template tables.
  section 14735 14773 fix conv.num.int sinking.
  section 14773 14846 dont propagate implicitly widened number to index metamethods.
  section 14846 14910 arm: fix ordered comparisons of number vs. non-number.
  section 14910 14977 ffi: fix code generation for replay of sunk float fields.
  section 14977 15015 ffi: fix signedness of bool.
  section 15015 15081 ffi: fix recording of bool call result check on x86/x64.
  section 15081 15159 ffi: fix stack-adjustment for __thiscall callbacks.
  section 15159 20704 luajit 2.0.0-beta11 e<mdash> 2012-10-16
  section 15214 15244 new features:
  section 15244 15316 use arm vfp instructions, if available (build-time detection).
  section 15316 15373 add support for arm hard-float eabi (armhf).
  section 15373 15396 add ps3 port.
  section 15396 15478 add many features from lua 5.2, e.g. goto/labels. refer to
  section 15478 15519 ffi: add parameterized c types.
  section 15519 15568 ffi: add support for copy constructors.
  section 15568 15652 ffi: equality comparisons never raise an error (treat as
  section 15652 15702 ffi: box all accessed or returned enums.
  section 15702 15774 ffi: check for __new metamethod when calling a constructor.
  section 15774 15849 ffi: handle __pairs/__ipairs metamethods for cdata
  section 15849 15934 ffi: convert io.* file handle to file * pointer (but as a
  section 15934 15996 ffi: detect and support type punning through unions.
  section 15996 16049 ffi: improve various error messages.
  section 16049 16094 build-system reorganization:
  section 16094 16286 reorganize directory layout:
  section 16286 16367 add minified lua interpreter plus lua bitop (minilua) to run
  section 16367 16422 change dynasm bit operations to use lua bitop
  section 16422 16493 translate only vm_*.dasc for detected target architecture.
  section 16493 16549 improve target detection for msvcbuild.bat.
  section 16549 16615 fix build issues on cygwin and mingw with optional msys.
  section 16615 16695 handle cross-compiles with fpu/no-fpu or hard-fp/soft-fp abi
  section 16695 16760 remove some library functions for no-jit/no-ffi builds.
  section 16760 16820 add uninstall target to top-level makefile.
  section 16820 16866 correctness and completeness:
  section 16866 16915 preserve snapshot #0 pc for all traces.
  section 16915 16971 fix argument checks for coroutine.create().
  section 16971 17052 command line prints version and jit status to stdout, not
  section 17052 17114 fix userdata __gc separations at lua state close.
  section 17114 17184 fix tdup to hload forwarding for lj_dualnum builds.
  section 17184 17230 fix buffer check in bytecode writer.
  section 17230 17270 make os.date() thread-safe.
  section 17270 17325 add missing declarations for msvc intrinsics.
  section 17325 17385 fix dispatch table modifications for return hooks.
  section 17385 17481 workaround for msvc conversion bug (double e<rarr>
  section 17481 17527 fix fold rule (i-j)-i => 0-j.
  section 17527 17573 never use dwarf unwinder on windows.
  section 17573 17642 fix shrinking of direct mapped blocks in builtin allocator.
  section 17642 17701 limit recursion depth in string.match() et al.
  section 17701 17777 fix late despecialization of itern after loop has been
  section 17777 17861 fix f and l options for debug.getinfo() and
  section 17861 17899 fix package.searchpath().
  section 17899 17971 osx: change dylib names to be consistent with other platforms.
  section 17971 18035 android: workaround for broken sprintf(%g, -0.0).
  section 18035 18119 x86: remove support for ancient cpus without cmov (before
  section 18119 18192 x86: fix register allocation for calls returning register pair.
  section 18192 18273 x86/x64: fix fusion of unsigned byte comparisons with swapped
  section 18273 18321 arm: fix tonumber() argument check.
  section 18321 18409 arm: fix modulo operator and math.floor()/math.ceil() for
  section 18409 18467 arm: invoke split pass for leftover ir_tobit.
  section 18467 18511 arm: fix base register coalescing.
  section 18511 18567 ppc: fix interpreter state setup in callbacks.
  section 18567 18614 ppc: fix string.sub() range check.
  section 18614 18686 mips: support generation of mips/mipsel bytecode object files.
  section 18686 18747 mips: fix calls to floor()/ceil()/trunc().
  section 18747 18807 arm/ppc: detect more target architecture variants.
  section 18807 18890 arm/ppc/e500/mips: fix tailcalls from fast functions, esp.
  section 18890 18952 arm/ppc/mips: fix rematerialization of fp constants.
  section 18952 19014 ffi: dont call freelibrary() on our own exe/dll.
  section 19014 19071 ffi: resolve metamethods for constructors, too.
  section 19071 19154 ffi: properly disable callbacks on ios (would require
  section 19154 19211 ffi: fix cdecl string parsing during recording.
  section 19211 19276 ffi: show address pointed to for tostring(ref), too.
  section 19276 19341 ffi: fix alignment of c call argument/return structure.
  section 19341 19396 ffi: initialize all fields of standard types.
  section 19396 19475 ffi: fix callback handling when new c types are declared in
  section 19475 19533 ffi: fix recording of constructors for pointers.
  section 19533 19599 ffi: always resolve metamethods for pointers to structs.
  section 19599 19679 ffi: correctly propagate alignment when interning nested types.
  section 19679 19736 structural and performance enhancements:
  section 19736 19800 add allocation sinking and store sinking optimization.
  section 19800 19838 constify immutable upvalues.
  section 19838 19955 add builtin string to integer or fp number conversion. improves
  section 19955 20063 create string hash slots in template tables for non-const
  section 20063 20128 eliminate hrefk guard for template table references.
  section 20128 20165 add various new fold rules.
  section 20165 20234 dont use stack unwinding for lua_yield() (slow on x64).
  section 20234 20313 arm, ppc, mips: improve xload operand fusion and register
  section 20313 20391 ppc, mips: compile math.sqrt() to sqrt instruction, if
  section 20391 20451 ffi: fold kptr + constant offset in split pass.
  section 20451 20514 ffi: optimize/inline ffi.copy() and ffi.fill().
  section 20514 20570 ffi: compile and optimize array/struct copies.
  section 20570 20704 ffi: compile ffi.typeof(cdata|ctype), ffi.sizeof(),
  section 20704 24056 luajit 2.0.0-beta10 e<mdash> 2012-05-09
  section 20759 20789 new features:
  section 20789 20954 the mips of luajit is complete. it requires a cpu conforming to
  section 20954 21043 auto-detect target arch via cross-compiler. no need for
  section 21043 21089 make dynasm compatible with lua 5.2.
  section 21089 21179 from lua 5.2: try __tostring metamethod on non-string error
  section 21179 21225 correctness and completeness:
  section 21225 21278 fix parsing of hex literals with exponents.
  section 21278 21335 fix bytecode dump for certain number constants.
  section 21335 21403 fix argument type in error message for relative arguments.
  section 21403 21471 fix argument error handling on lua stacks without a frame.
  section 21471 21532 add missing mcode limit check in assembler backend.
  section 21532 21569 fix compilation on openbsd.
  section 21569 21634 avoid recursive gc steps after gc-triggered trace exit.
  section 21634 21699 replace <unwind.h> definitions with our own.
  section 21699 21773 fix osx build issues. bump minimum required osx version to
  section 21773 21832 fix discharge order of comparisons in lua parser.
  section 21832 21911 ensure running __gc of userdata created in __gc at state
  section 21911 21981 limit number of userdata __gc separations at state close.
  section 21981 22069 fix bytecode jmp slot range when optimizing and/or
  section 22069 22100 fix dse of ustore.
  section 22100 22167 make lua_concat() work from c hook with partial frame.
  section 22167 22249 add required phis for implicit conversions, e.g. via xref
  section 22249 22318 add more comparison variants to valgrind suppressions file.
  section 22318 22389 disable loading bytecode with an extra header (bom or #!).
  section 22389 22426 fix phi stack slot syncing.
  section 22426 22486 arm: reorder type/value tests to silence valgrind.
  section 22486 22556 arm: fix register allocation for ldrd-optimized hrefk.
  section 22556 22612 arm: fix conditional branch fixup for obar.
  section 22612 22676 arm: invoke split pass for double args in ffi call.
  section 22676 22752 arm: handle all call* ops with double results in split
  section 22752 22802 arm: fix rejoin of pow in split pass.
  section 22802 22877 arm: fix compilation of math.sinh, math.cosh,
  section 22877 22942 arm, ppc: avoid pointless arg clearing in bc_ifuncf.
  section 22942 22990 ppc: fix resume after yield from hook.
  section 22990 23043 ppc: fix argument checking for rawget().
  section 23043 23106 ppc: fix fusion of floating-point xload/xstore.
  section 23106 23166 ppc: fix hrefk code generation for huge tables.
  section 23166 23226 ppc: use builtin d-cache/i-cache sync code.
  section 23226 23255 ffi library:
  section 23255 23306 ignore empty statements in ffi.cdef().
  section 23306 23372 ignore number parsing errors while skipping definitions.
  section 23372 23446 dont touch frame in callbacks with tailcalls to fast
  section 23446 23495 fix library unloading on posix systems.
  section 23495 23559 finalize cdata before userdata when closing the state.
  section 23559 23625 change ffi.load() library name resolution for cygwin.
  section 23625 23691 fix resolving of function name redirects on windows/x86.
  section 23691 23748 fix symbol resolving error messages on windows.
  section 23748 23808 fix blacklisting of c functions calling callbacks.
  section 23808 23856 fix result type of pointer difference.
  section 23856 23913 use correct pc in ffi metamethod error message.
  section 23913 23978 allow typedef _bool int bool; for the windows api.
  section 23978 24056 dont record test for bool result of call, if ignored.
  section 24056 27553 luajit 2.0.0-beta9 e<mdash> 2011-12-14
  section 24110 24140 new features:
  section 24140 24296 ppc port of luajit is complete. default is the dual-number port
  section 24296 24331 add ffi callback support.
  section 24331 24422 extend -b to generate .c, .h or .obj/.o files with
  section 24422 24482 allow loading embedded bytecode with require().
  section 24482 24573 from lua 5.2: change to \z escape. reject undefined escape
  section 24573 24619 correctness and completeness:
  section 24619 24691 fix osx 10.7 build. fix install_name and versioning on osx.
  section 24691 24715 fix ios build.
  section 24715 24753 install dis_arm.lua, too.
  section 24753 24807 mark installed shared library as executable.
  section 24807 24881 add debug option to msvcbuild.bat and improve error
  section 24881 24928 fix data-flow analysis for iterators.
  section 24928 24990 fix forced unwinding triggered by external unwinder.
  section 24990 25062 record missing for loop slot loads (return to lower frame).
  section 25062 25125 always use ansi variants of windows system functions.
  section 25125 25196 fix gc barrier for multi-result table constructor (tsetm).
  section 25196 25233 fix/add various fold rules.
  section 25233 25308 add potential phi for number conversions due to type
  section 25308 25372 do not eliminate phis only referenced from other phis.
  section 25372 25450 correctly anchor implicit number to string conversions in lua/c
  section 25450 25491 fix various stack limit checks.
  section 25491 25572 x64: use thread-safe exceptions for external unwinding (gcc
  section 25572 25630 x64: fix result type of cdata index conversions.
  section 25630 25701 x64: fix math.random() and bit.bswap() code generation.
  section 25701 25749 x64: fix lightuserdata comparisons.
  section 25749 25817 x64: always extend stack-passed arguments to pointer size.
  section 25817 25870 arm: many fixes to code generation backend.
  section 25870 25925 ppc/e500: fix dispatch for binop metamethods.
  section 25925 26007 ppc/e500: save/restore condition registers when
  section 26007 26085 ppc/e500: fix write barrier in stores of strings to upvalues.
  section 26085 26114 ffi library:
  section 26114 26146 fix c comment parsing.
  section 26146 26204 fix snapshot optimization for cdata comparisons.
  section 26204 26264 fix recording of const/enum lookups in namespaces.
  section 26264 26339 fix call argument and return handling for i8/u8/i16/u16
  section 26339 26383 fix unfused loads of float fields.
  section 26383 26423 fix ffi.string() recording.
  section 26423 26503 save getlasterror() around ffi.load() and symbol
  section 26503 26558 improve ld script detection in ffi.load().
  section 26558 26624 record loads/stores to external variables in namespaces.
  section 26624 26690 compile calls to stdcall, fastcall and vararg functions.
  section 26690 26751 treat function ctypes like pointers in comparisons.
  section 26751 26808 resolve __call metamethod for pointers, too.
  section 26808 26866 record c function calls with bool return values.
  section 26866 26898 record ffi.errno().
  section 26898 26959 x86: fix number to uint32_t conversion rounding.
  section 26959 27017 x86: fix 64 bit arithmetic in assembler backend.
  section 27017 27072 x64: fix struct-by-value calling conventions.
  section 27072 27148 arm: ensure invocation of split pass for float conversions.
  section 27148 27205 structural and performance enhancements:
  section 27205 27261 display trace types with -jv and -jdump.
  section 27261 27332 record isolated calls. but prefer recording loops over calls.
  section 27332 27469 specialize to prototype for non-monomorphic functions. solves
  section 27469 27553 always generate a portable vmdef.lua. easier for distros.
  section 27553 29179 luajit 2.0.0-beta8 e<mdash> 2011-06-23
  section 27607 27637 new features:
  section 27637 27689 soft-float arm port of luajit is complete.
  section 27689 27769 add support for bytecode loading/saving and -b command line
  section 27769 27853 from lua 5.2: __len metamethod for tables (disabled by
  section 27853 27899 correctness and completeness:
  section 27899 27942 arm: misc. fixes for interpreter.
  section 27942 28007 x86/x64: fix bit.* argument checking in interpreter.
  section 28007 28078 catch early out-of-memory in memory allocator initialization.
  section 28078 28149 fix data-flow analysis for paths leading to an upvalue close.
  section 28149 28213 fix check for missing arguments in string.format().
  section 28213 28276 fix solaris/x86 build (note: not a supported target).
  section 28276 28349 fix recording of loops with instable directions in side traces.
  section 28349 28421 x86/x64: fix fusion of comparisons with u8/u16 xload.
  section 28421 28491 x86/x64: fix register allocation for variable shifts.
  section 28491 28520 ffi library:
  section 28520 28605 add ffi.errno(). save errno/getlasterror() around
  section 28605 28653 fix __gc for vla/vls cdata objects.
  section 28653 28725 fix recording of casts from 32 bit cdata pointers to integers.
  section 28725 28785 tonumber(cdata) returns nil for non-numbers.
  section 28785 28844 show address pointed to for tostring(pointer).
  section 28844 28912 print null pointers as cdata<... *>: null.
  section 28912 28991 support __tostring metamethod for pointers to structs, too.
  section 28991 29048 structural and performance enhancements:
  section 29048 29100 more tuning for loop unrolling heuristics.
  section 29100 29179 flatten and compress in-memory debug info (saves ~70%).
  section 29179 30940 luajit 2.0.0-beta7 e<mdash> 2011-05-05
  section 29233 29263 new features:
  section 29263 29320 arm port of the luajit interpreter is complete.
  section 29320 29395 ffi library: add ffi.gc(), ffi.metatype(),
  section 29395 29465 ffi library: resolve ld script redirection in ffi.load().
  section 29465 29548 from lua 5.2: package.searchpath(), fp:read(*l),
  section 29548 29668 from lua 5.2, disabled by default: empty statement,
  section 29668 29714 correctness and completeness:
  section 29714 29752 ffi library: numerous fixes.
  section 29752 29810 fix type mismatches in store-to-load forwarding.
  section 29810 29858 fix error handling within metamethods.
  section 29858 29888 fix table.maxn().
  section 29888 29933 improve accuracy of x^-k on x64.
  section 29933 29990 fix code generation for intel atom in x64 mode.
  section 29990 30021 fix narrowing of pow.
  section 30021 30071 fix recording of retried fast functions.
  section 30071 30134 fix code generation for bit.bnot() and multiplies.
  section 30134 30184 fix error location within cpcall frames.
  section 30184 30235 add workaround for old libgcc unwind bug.
  section 30235 30306 fix lua_yield() and getmetatable(lightuserdata) on x64.
  section 30306 30353 misc. fixes for ppc/e500 interpreter.
  section 30353 30412 fix stack slot updates for down-recursion.
  section 30412 30469 structural and performance enhancements:
  section 30469 30541 add dual-number mode (int/double) for the vm. enabled for arm.
  section 30541 30610 improve narrowing of arithmetic operators and for loops.
  section 30610 30686 tune loop unrolling heuristics and increase trace recorder
  section 30686 30764 eliminate dead slots in snapshots using bytecode data-flow
  section 30764 30811 avoid phantom stores to proxy tables.
  section 30811 30860 optimize lookups in empty proxy tables.
  section 30860 30940 improve bytecode optimization of and/or operators.
  section 30940 32899 luajit 2.0.0-beta6 e<mdash> 2011-02-11
  section 30994 31024 new features:
  section 31024 31092 powerpc/e500v2 port of the luajit interpreter is complete.
  section 31092 31304 various minor features from lua 5.2: hex escapes in literals,
  section 31304 31383 lua 5.2 __pairs and __ipairs metamethods (disabled by
  section 31383 31435 initial release of the ffi library.
  section 31435 31481 correctness and completeness:
  section 31481 31537 fix string.format() for non-finite numbers.
  section 31537 31607 fix memory leak when compiled to use the built-in allocator.
  section 31607 31670 x86/x64: fix unnecessary resize in tsetm bytecode.
  section 31670 31733 fix various gc issues with traces and jit.flush().
  section 31733 31791 x64: fix fusion of indexes for array references.
  section 31791 31860 x86/x64: fix stack overflow handling for coroutine results.
  section 31860 31918 enable low-2gb memory allocation on freebsd/x64.
  section 31918 31993 fix collectgarbage(count) result if more than 2gb is in
  section 31993 32029 fix parsing of hex floats.
  section 32029 32102 x86/x64: fix loop branch inversion with trailing href+ne/eq.
  section 32102 32133 add jit.os string.
  section 32133 32198 coroutine.create() permits running c functions, too.
  section 32198 32255 fix osx build to work with newer ld64 versions.
  section 32255 32324 fix bytecode optimization of and/or operators.
  section 32324 32381 structural and performance enhancements:
  section 32381 32442 emit specialized bytecode for pairs()/next().
  section 32442 32500 improve bytecode coalescing of nil constants.
  section 32500 32544 compile calls to vararg functions.
  section 32544 32574 compile select().
  section 32574 32640 improve alias analysis, esp. for loads from allocations.
  section 32640 32688 tuning of various compiler heuristics.
  section 32688 32745 refactor and extend ir conversion instructions.
  section 32745 32812 x86/x64: various backend enhancements related to the ffi.
  section 32812 32899 add split pass to split 64 bit ir instructions for 32 bit cpus.
  section 32899 34221 luajit 2.0.0-beta5 e<mdash> 2010-08-24
  section 32953 32999 correctness and completeness:
  section 32999 33053 fix trace exit dispatch to function headers.
  section 33053 33114 fix windows and osx builds with luajit_disable_jit.
  section 33114 33186 reorganize and fix placement of generated machine code on x64.
  section 33186 33224 fix tnew in x64 interpreter.
  section 33224 33299 do not eliminate phis for values only referenced from side
  section 33299 33375 os-independent canonicalization of strings for non-finite
  section 33375 33425 fix string.char() range check on x64.
  section 33425 33481 fix tostring() resolving within print().
  section 33481 33524 fix error handling for next().
  section 33524 33593 fix passing of constant arguments to external calls on x64.
  section 33593 33670 fix interpreter argument check for two-argument sse math
  section 33670 33735 fix c frame chain corruption caused by lua_cpcall().
  section 33735 33798 fix return from pcall() within active hook.
  section 33798 33855 structural and performance enhancements:
  section 33855 33921 replace on-trace gc frame syncing with interpreter exit.
  section 33921 34002 improve hash lookup specialization by not removing dead keys
  section 34002 34045 turn traces into true gc objects.
  section 34045 34112 avoid starting a gc cycle immediately after library init.
  section 34112 34171 add weak guards to improve dead-code elimination.
  section 34171 34221 speed up string interning.
  section 34221 34989 luajit 2.0.0-beta4 e<mdash> 2010-03-28
  section 34275 34321 correctness and completeness:
  section 34321 34384 fix precondition for on-trace creation of table keys.
  section 34384 34436 fix {f()} on x64 when table is resized.
  section 34436 34502 fix folding of ordered comparisons with same references.
  section 34502 34561 fix snapshot restores for multi-result bytecodes.
  section 34561 34635 fix potential hang when recording bytecode with nested
  section 34635 34718 fix recording of getmetatable(), tonumber() and bad
  section 34718 34783 fix sload fusion across returns to lower frames.
  section 34783 34840 structural and performance enhancements:
  section 34840 34917 add array bounds check elimination. -oabc is enabled by
  section 34917 34989 more tuning for x64, e.g. smaller table objects.
  section 34989 37371 luajit 2.0.0-beta3 e<mdash> 2010-03-07
  section 35043 35076 luajit x64 port:
  section 35076 35157 port integrated memory allocator to linux/x64, windows/x64 and
  section 35157 35208 port interpreter and jit compiler to x64.
  section 35208 35237 port dynasm to x64.
  section 35237 35281 many 32/64 bit cleanups in the vm.
  section 35281 35358 allow building the interpreter with either x87 or sse2
  section 35358 35441 add external unwinding and c++ exception interop (default on
  section 35441 35487 correctness and completeness:
  section 35487 35564 fix constructor bytecode generation for certain conditional
  section 35564 35619 fix some cases of ordered string comparisons.
  section 35619 35654 fix lua_tocfunction().
  section 35654 35733 fix cutoff register in jmp bytecode for some conditional
  section 35733 35803 fix phi marking algorithm for references from variant slots.
  section 35803 35857 fix package.cpath for non-default prefix.
  section 35857 35926 fix dwarf2 frame unwind information for interpreter on osx.
  section 35926 35993 drive the gc forward on string allocations in the parser.
  section 35993 36055 implement call/return hooks (zero-cost if disabled).
  section 36055 36094 implement yield from c hooks.
  section 36094 36175 disable jit compiler on older non-sse2 cpus instead of
  section 36175 36232 structural and performance enhancements:
  section 36232 36297 compile recursive code (tail-, up- and down-recursion).
  section 36297 36366 improve heuristics for bytecode penalties and blacklisting.
  section 36366 36444 split call/func recording and clean up fast function call
  section 36444 36504 major redesign of internal function call handling.
  section 36504 36575 improve for loop const specialization and integerness checks.
  section 36575 36640 switch to pre-initialized stacks. avoid frame-clearing.
  section 36640 36725 colocation of prototypes and related data: bytecode, constants,
  section 36725 36785 cleanup parser and streamline bytecode generation.
  section 36785 36852 add support for weak ir references to register allocator.
  section 36852 36905 switch to compressed, extensible snapshots.
  section 36905 36963 compile returns to frames below the start frame.
  section 36963 37042 improve alias analysis of upvalues using a disambiguation hash
  section 37042 37121 compile floor/ceil/trunc to sse2 helper calls or sse4.1
  section 37121 37177 add generic c call handling to ir and backend.
  section 37177 37225 improve knum fuse vs. load heuristics.
  section 37225 37271 compile various io.*() functions.
  section 37271 37371 compile math.sinh(), math.cosh(), math.tanh() and
  section 37371 38758 luajit 2.0.0-beta2 e<mdash> 2009-11-09
  section 37425 37497 reorganize build system. build static+shared library on posix.
  section 37497 37580 allow c++ exception conversion on all platforms using a wrapper
  section 37580 37661 automatically catch c++ exceptions and rethrow lua error
  section 37661 37731 check for the correct x87 fpu precision at strategic points.
  section 37731 37780 always use wrappers for libm functions.
  section 37780 37844 resurrect metamethod name strings before copying them.
  section 37844 37899 mark current trace, even if compiler is idle.
  section 37899 37952 ensure file metatable is created only once.
  section 37952 38025 fix type comparisons when different integer types are involved.
  section 38025 38067 fix getmetatable() recording.
  section 38067 38119 fix tdup with dead keys in template table.
  section 38119 38214 jit.flush(tr) returns status. prevent manual flush of a
  section 38214 38288 improve register allocation heuristics for invariant
  section 38288 38371 compile the push/pop variants of table.insert() and
  section 38371 38420 compatibility with msvc link /debug.
  section 38420 38455 fix lua_iscfunction().
  section 38455 38520 fix math.random() when compiled with -fpic (osx).
  section 38520 38550 fix table.maxn().
  section 38550 38603 bump macosx_deployment_target to 10.4
  section 38603 38758 lual_check*() and lual_opt*() now support negative
  section 38758 39336 luajit 2.0.0-beta1 e<mdash> 2009-10-31
  section 38812 38869 this is the first public release of luajit 2.0.
  section 38869 39336 the whole vm has been rewritten from the ground up, so theres

module contact
  section 14 1157 contact
  section 37 60 luajit
  section 60 90 download e<rchevron>
  section 90 112 installation
  section 112 136 running
  section 136 163 extensions
  section 163 191 ffi library
  section 191 213 ffi tutorial
  section 213 232 ffi.* api
  section 232 262 ffi semantics
  section 262 285 jit.* library
  section 285 304 lua/c api
  section 304 329 profiler
  section 329 352 status
  section 352 376 changes
  section 376 389 faq
  section 389 422 performance e<rchevron>
  section 422 448 wiki e<rchevron>
  section 448 746 mailing list e<rchevron>
  section 746 1157 copyright

module ext_c_api
  section 14 4445 lua/c api extensions
  section 50 73 luajit
  section 73 103 download e<rchevron>
  section 103 125 installation
  section 125 149 running
  section 149 176 extensions
  section 176 204 ffi library
  section 204 226 ffi tutorial
  section 226 245 ffi.* api
  section 245 275 ffi semantics
  section 275 298 jit.* library
  section 298 317 lua/c api
  section 317 342 profiler
  section 342 365 status
  section 365 389 changes
  section 389 402 faq
  section 402 435 performance e<rchevron>
  section 435 461 wiki e<rchevron>
  section 461 753 mailing list e<rchevron>
  section 753 1395 luajit_setmode(l, idx, mode) e<mdash> control vm
  section 1395 1534 luajit_setmode(l, 0, luajit_mode_engine|flag)
  section 1534 2105 luajit_setmode(l, idx, luajit_mode_func|flag)
  section 2105 2349 luajit_setmode(l, trace,
  section 2349 4445 luajit_setmode(l, idx, luajit_mode_wrapcfunc|flag)

module ext_ffi
  section 14 7946 ffi library
  section 41 64 luajit
  section 64 94 download e<rchevron>
  section 94 116 installation
  section 116 140 running
  section 140 167 extensions
  section 167 195 ffi library
  section 195 217 ffi tutorial
  section 217 236 ffi.* api
  section 236 266 ffi semantics
  section 266 289 jit.* library
  section 289 308 lua/c api
  section 308 333 profiler
  section 333 356 status
  section 356 380 changes
  section 380 393 faq
  section 393 426 performance e<rchevron>
  section 426 452 wiki e<rchevron>
  section 452 1446 mailing list e<rchevron>
  section 1446 3287 motivating example: calling external c functions
  section 3287 7946 motivating example: using c data structures

module ext_ffi_api
  section 14 16456 ffi.* api functions
  section 52 75 luajit
  section 75 105 download e<rchevron>
  section 105 127 installation
  section 127 151 running
  section 151 178 extensions
  section 178 206 ffi library
  section 206 228 ffi tutorial
  section 228 247 ffi.* api
  section 247 277 ffi semantics
  section 277 300 jit.* library
  section 300 319 lua/c api
  section 319 344 profiler
  section 344 367 status
  section 367 391 changes
  section 391 404 faq
  section 404 437 performance e<rchevron>
  section 437 463 wiki e<rchevron>
  section 463 660 mailing list e<rchevron>
  section 660 1704 glossary
  section 684 758 cdecl e<mdash> an abstract c type declaration (a lua
  section 758 915 ctype e<mdash> a c type object. this is a special kind of
  section 915 1007 cdata e<mdash> a c data object. it holds a value of the
  section 1007 1175 ct e<mdash> a c type specification which can be used for
  section 1175 1345 cb e<mdash> a callback object. this is a c data object
  section 1345 1538 vla e<mdash> a variable-length array is declared with a ?
  section 1538 1704 vls e<mdash> a variable-length struct is a struct c type
  section 1704 1914 declaring and accessing external symbols
  section 1914 3024 ffi.cdef(def)
  section 3024 3911 ffi.c
  section 3911 4747 clib = ffi.load(name [,global])
  section 4747 4909 creating cdata objects
  section 4909 6154 cdata = ffi.new(ct [,nelem] [,init...])
  section 6154 6354 ctype = ffi.typeof(ct)
  section 6354 6675 cdata = ffi.cast(ct, init)
  section 6675 7717 ctype = ffi.metatype(ct, metatable)
  section 7717 8618 cdata = ffi.gc(cdata, finalizer)
  section 8618 8759 c type information
  section 8759 8981 size = ffi.sizeof(ct [,nelem])
  section 8981 9076 align = ffi.alignof(ct)
  section 9076 9312 ofs [,bpos,bsize] = ffi.offsetof(ct, field)
  section 9312 9860 status = ffi.istype(ct, obj)
  section 9860 9886 utility functions
  section 9886 10850 err = ffi.errno([newerr])
  section 10850 11866 str = ffi.string(ptr [,len])
  section 11866 12507 ffi.copy(dst, src, len)
  section 12507 12847 ffi.fill(dst, len [,c])
  section 12847 12883 target-specific information
  section 12883 13452 status = ffi.abi(param)
  section 13452 13528 ffi.os
  section 13528 13618 ffi.arch
  section 13618 13700 methods for callbacks
  section 13700 13976 cb:free()
  section 13976 14288 cb:set(func)
  section 14288 14421 extended standard library functions
  section 14421 14644 n = tonumber(cdata)
  section 14644 15076 s = tostring(cdata)
  section 15076 15226 iter, obj, start = pairs(cdata)
  section 15226 16456 extensions to the lua parser

module ext_ffi_semantics
  section 14 41248 ffi semantics
  section 43 66 luajit
  section 66 96 download e<rchevron>
  section 96 118 installation
  section 118 142 running
  section 142 169 extensions
  section 169 197 ffi library
  section 197 219 ffi tutorial
  section 219 238 ffi.* api
  section 238 268 ffi semantics
  section 268 291 jit.* library
  section 291 310 lua/c api
  section 310 335 profiler
  section 335 358 status
  section 358 382 changes
  section 382 395 faq
  section 395 428 performance e<rchevron>
  section 428 454 wiki e<rchevron>
  section 454 1241 mailing list e<rchevron>
  section 1241 5144 c language support
  section 1989 2051 the \e escape in character and string literals.
  section 2051 2134 the c99/c++ boolean type, declared with the keywords bool or
  section 2134 2214 complex numbers, declared with the keywords complex or
  section 2214 2306 two complex number types: complex (aka complex double)
  section 2306 2388 vector types, declared with the gcc mode or vector_size
  section 2388 2476 unnamed (transparent) struct/union fields inside a
  section 2476 2566 incomplete enum declarations, handled like incomplete
  section 2566 2741 unnamed enum fields inside a struct/union. this is
  section 2741 2826 scoped static const declarations inside a struct/union
  section 2826 2983 zero-length arrays ([0]), empty struct/union,
  section 2983 3025 c++ reference types (int &x).
  section 3025 3090 alternate gcc keywords with __, e.g. __const__.
  section 3090 3247 gcc __attribute__ with the following attributes: aligned,
  section 3247 3326 the gcc __extension__ keyword and the gcc __alignof__
  section 3326 3412 gcc __asm__(symname) symbol name redirection for function
  section 3412 3509 msvc keywords for fixed-length types: __int8, __int16,
  section 3509 3648 msvc __cdecl, __fastcall, __stdcall, __thiscall,
  section 3648 3839 all other gcc/msvc-specific attributes are ignored.
  section 3839 3918 vararg handling: va_list, __builtin_va_list,
  section 3918 3992 from <stddef.h>: ptrdiff_t, size_t,
  section 3992 4154 from <stdint.h>: int8_t, int16_t, int32_t,
  section 4154 4512 from <unistd.h> (posix): ssize_t.
  section 4512 4608 a declaration must always have a type specifier; it doesnt
  section 4608 4852 old-style empty function declarations (k&r) are not allowed.
  section 4852 4995 the long double c type is parsed correctly, but theres no
  section 4995 5069 wide character strings and character literals are not
  section 5069 5144 see below for features that are currently not implemented.
  section 5144 5176 c type conversion rules
  section 5176 6270 conversions from c types to lua objects
  section 6270 7745 conversions from lua objects to c types
  section 7745 9302 conversions between c types
  section 9302 10621 conversions for vararg c function arguments
  section 10621 12327 initializers
  section 10865 10942 if no initializers are given, the object is filled with zero
  section 10942 11066 scalar types (numbers and pointers) accept a single
  section 11066 11224 valarrays (complex numbers and vectors) are treated like
  section 11224 11408 aggregate types (arrays and structs) accept either a single
  section 11408 11696 the elements of an array are initialized, starting at index
  section 11696 11883 byte arrays may also be initialized with a lua string. this
  section 11883 12018 the fields of a struct are initialized in the order of their
  section 12018 12106 only the first field of a union can be initialized with a
  section 12106 12275 elements or fields which are aggregates themselves are
  section 12275 12327 excess initializers cause an error.
  section 12327 15572 table initializers
  section 12459 12593 if the table index [0] is non-nil, then the table is
  section 12593 12803 array elements, starting at index zero, are initialized
  section 12803 12979 if exactly one array element was initialized, its repeated for
  section 12979 13215 the above logic only applies to arrays with a known fixed size.
  section 13215 13467 a struct/union can be initialized in the order of the
  section 13467 13701 otherwise, if neither index [0] nor [1] is present, a
  section 13701 13812 uninitialized fields of a struct are filled with zero bytes,
  section 13812 13968 initialization of a union stops after one field has been
  section 13968 14146 elements or fields which are aggregates themselves are
  section 14146 15572 excess initializers for an array cause an error. excess
  section 15572 16172 operations on cdata objects
  section 16172 19054 indexing a cdata object
  section 16211 16717 indexing a pointer/array: a cdata pointer/array can be
  section 16717 17334 dereferencing a struct/union field: a cdata
  section 17334 17891 indexing a complex number: a complex number can be indexed
  section 17891 19054 indexing a vector: a vector is treated like an array for
  section 19054 20023 calling a cdata object
  section 19092 19472 constructor: a ctype object can be called and used as a
  section 19472 20023 c function call: a cdata function or cdata function pointer
  section 20023 22342 arithmetic on cdata objects
  section 20066 20426 pointer arithmetic: a cdata pointer/array and a cdata number
  section 20426 20667 pointer difference: two compatible cdata pointers/arrays can
  section 20667 21708 64 bit integer arithmetic: the standard arithmetic operators
  section 21708 22342 64 bit bitwise operations: the rules for 64 bit arithmetic
  section 22342 23381 comparisons of cdata objects
  section 22386 22632 pointer comparison: two compatible cdata pointers/arrays can
  section 22632 23139 64 bit integer comparison: two cdata numbers, or a cdata
  section 23139 23381 comparisons for equality/inequality never raise an error.
  section 23381 25164 cdata objects as table keys
  section 24309 24637 if you can get by with the precision of lua numbers (52 bits),
  section 24637 24877 otherwise use either tostring() on 64 bit integers or
  section 24877 25164 create your own specialized hash table implementation using the
  section 25164 26879 parameterized types
  section 26879 28796 garbage collection of cdata objects
  section 28796 30710 callbacks
  section 30710 32568 callback resource handling
  section 32568 34035 callback performance
  section 34035 36550 c library namespaces
  section 34997 35100 external functions: a cdata object with the type of the
  section 35100 35228 external variables: the symbol address is dereferenced and the
  section 35228 35407 constant values (static const or enum constants): the
  section 35407 35542 external variables: the value to be written is converted to the
  section 35542 36550 writing to constant variables or to any other symbol type
  section 36550 38419 no hand-holding!
  section 38419 41248 current status
  section 38633 38704 c declarations are not passed through a c pre-processor, yet.
  section 38704 38915 the c parser is able to evaluate most constant expressions
  section 38915 39074 static const declarations only work for integer types up to
  section 39074 39163 packed struct bitfields that cross container boundaries are
  section 39163 39345 native vector types may be defined with the gcc mode or
  section 39345 39424 the volatile type qualifier is currently ignored by compiled
  section 39424 39966 ffi.cdef silently ignores most re-declarations. note: avoid
  section 39966 39994 vector operations.
  section 39994 40023 table initializers.
  section 40023 40083 initialization of nested struct/union types.
  section 40083 40192 non-default initialization of vla/vls or large c types (>
  section 40192 40227 bitfield initializations.
  section 40227 40303 pointer differences for element sizes that are not a power of
  section 40303 40378 calls to c functions with aggregates passed or returned by
  section 40378 40445 calls to ctype metamethods which are not plain functions.
  section 40445 40532 ctype __newindex tables and non-string lookups in ctype
  section 40532 40572 tostring() for cdata types.
  section 40572 40681 calls to ffi.cdef(), ffi.load() and ffi.metatype().
  section 40681 40725 arithmetic for complex numbers.
  section 40725 40782 passing structs by value to vararg c functions.
  section 40782 41248 c++ exception interoperability does not extend to c functions

module ext_ffi_tutorial
  section 14 18772 ffi tutorial
  section 42 65 luajit
  section 65 95 download e<rchevron>
  section 95 117 installation
  section 117 141 running
  section 141 168 extensions
  section 168 196 ffi library
  section 196 218 ffi tutorial
  section 218 237 ffi.* api
  section 237 267 ffi semantics
  section 267 290 jit.* library
  section 290 309 lua/c api
  section 309 334 profiler
  section 334 357 status
  section 357 381 changes
  section 381 394 faq
  section 394 427 performance e<rchevron>
  section 427 453 wiki e<rchevron>
  section 453 793 mailing list e<rchevron>
  section 793 1452 loading the ffi library
  section 1452 4875 accessing standard system functions
  section 4875 10338 accessing the zlib compression library
  section 10338 13536 defining metamethods for a c type
  section 13536 14742 translating c idioms
  section 14742 18772 to cache or not to cache

module ext_jit
  section 14 4311 jit.* library
  section 46 69 luajit
  section 69 99 download e<rchevron>
  section 99 121 installation
  section 121 145 running
  section 145 172 extensions
  section 172 200 ffi library
  section 200 222 ffi tutorial
  section 222 241 ffi.* api
  section 241 271 ffi semantics
  section 271 294 jit.* library
  section 294 313 lua/c api
  section 313 338 profiler
  section 338 361 status
  section 361 385 changes
  section 385 398 faq
  section 398 431 performance e<rchevron>
  section 431 457 wiki e<rchevron>
  section 457 733 mailing list e<rchevron>
  section 733 901 jit.on()
  section 901 967 jit.flush()
  section 967 1979 jit.on(func|true [,true|false])
  section 1979 2193 jit.flush(tr)
  section 2193 2455 status, ... = jit.status()
  section 2455 2515 jit.version
  section 2515 2653 jit.version_num
  section 2653 2755 jit.os
  section 2755 2872 jit.arch
  section 2872 3357 jit.opt.* e<mdash> jit compiler optimization control
  section 3357 4311 jit.util.* e<mdash> jit compiler introspection

module ext_profiler
  section 14 10462 profiler
  section 38 61 luajit
  section 61 91 download e<rchevron>
  section 91 113 installation
  section 113 137 running
  section 137 164 extensions
  section 164 192 ffi library
  section 192 214 ffi tutorial
  section 214 233 ffi.* api
  section 233 263 ffi semantics
  section 263 286 jit.* library
  section 286 305 lua/c api
  section 305 330 profiler
  section 330 353 status
  section 353 377 changes
  section 377 390 faq
  section 390 423 performance e<rchevron>
  section 423 449 wiki e<rchevron>
  section 449 720 mailing list e<rchevron>
  section 720 805 the bundled high-level profiler, invoked by the -jp command
  section 805 859 a low-level lua api to control the profiler.
  section 859 918 a low-level c api to control the profiler.
  section 918 1882 high-level profiler
  section 1882 4845 -jp=[options[,output]]
  section 2208 2307 f e<mdash> stack dump: function name, otherwise module:line.
  section 2307 2371 f e<mdash> stack dump: ditto, but dump module:name.
  section 2371 2419 l e<mdash> stack dump: module:line.
  section 2419 2511 <number> e<mdash> stack dump depth (callee e<larr>
  section 2511 2600 -<number> e<mdash> inverse stack dump depth (caller
  section 2600 2706 s e<mdash> split stack dump after first stack level. implies
  section 2706 2762 p e<mdash> show full path for module names.
  section 2762 2801 v e<mdash> show vm states.
  section 2801 2836 z e<mdash> show zones.
  section 2836 2910 r e<mdash> show raw sample counts. default: show
  section 2910 2975 a e<mdash> annotate excerpts from source code files.
  section 2975 3035 a e<mdash> annotate complete source code files.
  section 3035 3107 g e<mdash> produce raw output suitable for graphical tools.
  section 3107 3198 m<number> e<mdash> minimum sample percentage to be
  section 3198 4845 i<number> e<mdash> sampling interval in
  section 4845 5598 jit.zone e<mdash> zones
  section 5203 5267 zone(name) pushes a named zone to the zone stack.
  section 5267 5350 zone() pops the current zone from the zone stack and returns
  section 5350 5414 zone:get() returns the current zone name or nil.
  section 5414 5598 zone:flush() flushes the zone stack.
  section 5598 6256 low-level lua api
  section 6256 7420 profile.start(mode, cb) e<mdash> start profiler
  section 6408 6482 f e<mdash> profile with precision down to the function
  section 6482 6552 l e<mdash> profile with precision down to the line level.
  section 6552 7420 i<number> e<mdash> sampling interval in milliseconds
  section 7420 7504 profile.stop() e<mdash> stop profiler
  section 7504 8686 dump = profile.dumpstack([thread,] fmt, depth) e<mdash> dump
  section 7767 7869 p e<mdash> preserve the full path for module names.
  section 7869 7964 f e<mdash> dump the function name if it can be derived.
  section 7964 8016 f e<mdash> ditto, but dump module:name.
  section 8016 8057 l e<mdash> dump module:line.
  section 8057 8136 z e<mdash> zap the following characters for the last dumped
  section 8136 8686 all other characters are added verbatim to the output string.
  section 8686 8852 low-level c api
  section 8852 9514 luajit_profile_start(l, mode, cb, data) e<mdash> start
  section 9514 9606 luajit_profile_stop(l) e<mdash> stop profiler
  section 9606 10462 p = luajit_profile_dumpstack(l, fmt, depth, len) e<mdash>

module extensions
  section 14 13028 extensions
  section 40 63 luajit
  section 63 93 download e<rchevron>
  section 93 115 installation
  section 115 139 running
  section 139 166 extensions
  section 166 194 ffi library
  section 194 216 ffi tutorial
  section 216 235 ffi.* api
  section 235 265 ffi semantics
  section 265 288 jit.* library
  section 288 307 lua/c api
  section 307 332 profiler
  section 332 355 status
  section 355 379 changes
  section 379 392 faq
  section 392 425 performance e<rchevron>
  section 425 451 wiki e<rchevron>
  section 451 1137 mailing list e<rchevron>
  section 1137 1219 extensions modules
  section 1219 1983 bit.* e<mdash> bitwise operations
  section 1983 2127 ffi.* e<mdash> ffi library
  section 2127 2253 jit.* e<mdash> jit compiler control
  section 2253 2330 c api extensions
  section 2330 2383 profiler
  section 2383 2427 enhanced standard library functions
  section 2427 2643 xpcall(f, err [,args...]) passes arguments
  section 2643 2898 loadfile() etc. handle utf-8 source code
  section 2898 3178 tostring() etc. canonicalize nan and e<plusmn>inf
  section 3178 3691 tonumber() etc. use builtin string to number conversion
  section 3691 4654 string.dump(f [,strip]) generates portable bytecode
  section 4654 5006 table.new(narray, nhash) allocates a pre-sized table
  section 5006 5666 table.clear(tab) clears a table
  section 5666 6305 enhanced prng for math.random()
  section 6305 6620 io.* functions handle 64 bit file offsets
  section 6620 6898 debug.* functions identify metamethods
  section 6898 7179 fully resumable vm
  section 7179 10144 extensions from lua 5.2
  section 7365 7401 goto and ::labels::.
  section 7401 7463 hex escapes \x3f and \* escape in strings.
  section 7463 7525 load(string|reader [, chunkname [,mode [,env]]]).
  section 7525 7577 loadstring() is an alias for load().
  section 7577 7624 loadfile(filename [,mode [,env]]).
  section 7624 7657 math.log(x [,base]).
  section 7657 7694 string.rep(s, n [,sep]).
  section 7694 7793 string.format(): %q reversible. %s checks
  section 7793 7839 string matching pattern %g added.
  section 7839 7866 io.read(*l).
  section 7866 7939 io.lines() and file:lines() process io.read() options.
  section 7939 7988 os.exit(status|true|false [,close]).
  section 7988 8048 package.searchpath(name, path [, sep [, rep]]).
  section 8048 8088 package.loadlib(name, *).
  section 8088 8170 debug.getinfo() returns nparams and isvararg for
  section 8170 8234 debug.getlocal() accepts function instead of level.
  section 8234 8324 debug.getlocal() and debug.setlocal() accept negative
  section 8324 8401 debug.getupvalue() and debug.setupvalue() handle c
  section 8401 8459 debug.upvalueid() and debug.upvaluejoin().
  section 8459 8841 lua/c api extensions: lua_version() lua_upvalueid()
  section 8841 8877 command line option -e.
  section 8877 9036 command line checks __tostring for errors.
  section 9036 9105 goto is a keyword and not a valid variable name anymore.
  section 9105 9185 break can be placed anywhere. empty statements (;;) are
  section 9185 9240 __lt, __le are invoked for mixed types.
  section 9240 9300 __len for tables. rawlen() library function.
  section 9300 9374 pairs() and ipairs() check for __pairs and
  section 9374 9427 coroutine.running() returns two results.
  section 9427 9497 table.pack() and table.unpack() (same as unpack()).
  section 9497 9579 io.write() and file:write() return file handle instead of
  section 9579 9653 os.execute() and pipe:close() return detailed exit
  section 9653 9702 debug.setmetatable() returns object.
  section 9702 9764 debug.getuservalue() and debug.setuservalue().
  section 9764 9814 remove math.mod(), string.gfind().
  section 9814 9845 package.searchers.
  section 9845 10144 module() returns the module table.
  section 10144 10637 extensions from lua 5.3
  section 10230 10315 unicode escape \u{xx...} embeds the utf-8 encoding in
  section 10315 10410 the argument table arg can be read (and modified) by
  section 10410 10498 io.read() and file:read() accept formats with or without
  section 10498 10541 table.move(a1, f, e, t [,a2]).
  section 10541 10578 coroutine.isyieldable().
  section 10578 10637 lua/c api extensions: lua_isyieldable()
  section 10637 13028 c++ exception interoperability
  section 11202 11293 c++ exceptions can be caught on the lua side with pcall(),
  section 11293 11423 c++ exceptions will be converted to the generic lua error
  section 11423 11580 its safe to throw c++ exceptions across non-protected lua
  section 11580 11723 lua errors can be caught on the c++ side with catch(...).
  section 11723 11861 throwing lua errors across c++ frames is safe. c++ destructors
  section 11861 11952 c++ exceptions can be caught on the lua side with pcall(),
  section 11952 12082 c++ exceptions will be converted to the generic lua error
  section 12082 12234 c++ exceptions will be caught by non-protected lua frames and
  section 12234 12291 lua errors cannot be caught on the c++ side.
  section 12291 12417 throwing lua errors across c++ frames will not call c++
  section 12417 12486 its not safe to throw c++ exceptions across lua frames.
  section 12486 12547 c++ exceptions cannot be caught on the lua side.
  section 12547 12604 lua errors cannot be caught on the c++ side.
  section 12604 13028 throwing lua errors across c++ frames will not call c++

module faq
  section 14 5165 frequently asked questions (faq)
  section 62 85 luajit
  section 85 115 download e<rchevron>
  section 115 137 installation
  section 137 161 running
  section 161 188 extensions
  section 188 216 ffi library
  section 216 238 ffi tutorial
  section 238 257 ffi.* api
  section 257 287 ffi semantics
  section 287 310 jit.* library
  section 310 329 lua/c api
  section 329 354 profiler
  section 354 377 status
  section 377 401 changes
  section 401 414 faq
  section 414 447 performance e<rchevron>
  section 447 473 wiki e<rchevron>
  section 473 521 mailing list e<rchevron>
  section 521 583 q: where can i learn more about luajit and lua?
  section 583 665 the e<rchevron> luajit mailing list focuses on topics related
  section 665 744 the e<rchevron> luajit wiki gathers community resources about
  section 744 907 news about lua itself can be found at the e<rchevron> lua
  section 907 1046 the e<rchevron> main lua.org site has complete e<rchevron>
  section 1046 1157 the community-managed e<rchevron> lua wiki has information
  section 1157 1788 q: where can i learn more about the compiler technology used by
  section 1788 2158 q: why do i get this error: attempt to index global arg (a nil
  section 2158 2214 q: why do i get this error: bad fpu precision?
  section 2214 2274 q: i get weird behavior after initializing direct3d.
  section 2274 2974 q: some fpu operations crash after i load a delphi dll.
  section 2974 3498 q: sometimes ctrl-c fails to stop my lua program. why?
  section 3498 4054 q: why doesnt my favorite power-patch for lua apply against
  section 4054 4526 q: lua runs everywhere. why doesnt luajit support my cpu?
  section 4526 5165 q: when will feature x be added? when will the next version be

module install
  section 14 19944 installation
  section 42 65 luajit
  section 65 95 download e<rchevron>
  section 95 117 installation
  section 117 141 running
  section 141 168 extensions
  section 168 196 ffi library
  section 196 218 ffi tutorial
  section 218 237 ffi.* api
  section 237 267 ffi semantics
  section 267 290 jit.* library
  section 290 309 lua/c api
  section 309 334 profiler
  section 334 357 status
  section 357 381 changes
  section 381 394 faq
  section 394 427 performance e<rchevron>
  section 427 453 wiki e<rchevron>
  section 453 1372 mailing list e<rchevron>
  section 1372 2247 configuring luajit
  section 1580 1641 src/luaconf.h sets some configuration variables.
  section 1641 1714 makefile has settings for installing luajit (posix only).
  section 1714 1806 src/makefile has settings for compiling luajit under
  section 1806 2247 src/msvcbuild.bat has settings for compiling luajit with
  section 2247 2293 posix systems (linux, osx, *bsd etc.)
  section 2293 2822 prerequisites
  section 2822 3516 building luajit
  section 3516 4032 installing luajit
  section 4032 4056 windows systems
  section 4056 4677 prerequisites
  section 4677 4900 building with msvc
  section 4900 5235 building with the windows sdk
  section 5235 5559 building with mingw or cygwin
  section 5559 6009 installing luajit
  section 6009 12588 cross-compiling luajit
  section 6088 6171 host: this is your development system, usually based on a x64
  section 6171 6259 target: this is the target system you want luajit to run on,
  section 6259 6352 toolchain: this comprises a c compiler, linker, assembler and a
  section 6352 6463 host (or system) toolchain: this is the toolchain used to build
  section 6463 6720 cross-compile toolchain: this is the toolchain used to build
  section 6720 6794 yes, you need a toolchain for both your host and your
  section 6794 6871 both host and target architectures must have the same pointer
  section 6871 7100 e.g. if you want to cross-compile to a 32 bit target on a 64
  section 7100 7307 64 bit targets always require compilation on a 64 bit host.
  section 7307 7456 e.g. if youre compiling on a windows or osx host for embedded
  section 7456 7585 for a minimal target os, you may need to disable the built-in
  section 7585 8408 dont forget to specify the same target_sys for the install
  section 8408 8529 the best way to get consistent results is to specify the
  section 8529 8654 for a pre-built, generic toolchain add -mcpu=... or
  section 8654 8812 for arm its important to have the correct -mfloat-abi=...
  section 8812 12588 for mips its important to select a supported abi (o32 on
  section 12588 14275 cross-compiling for consoles
  section 14275 16732 embedding luajit
  section 14499 14911 its strongly suggested to build luajit separately using the
  section 14911 15084 if you want to load c modules compiled for plain lua with
  section 15084 15377 on posix systems you can either link to the shared library or
  section 15377 15640 since windows symbols are bound to a specific dll name, you
  section 15640 15970 if youre building a 64 bit application on osx which links
  section 15970 16066 heres a e<rchevron> simple example for embedding lua or luajit
  section 16066 16241 make sure you use lual_newstate. avoid using
  section 16241 16357 make sure you use lual_openlibs and not the old lua 5.0
  section 16357 16574 to change or extend the list of standard libraries to load,
  section 16574 16732 the bit.* module for bitwise operations is already built-in.
  section 16732 19944 hints for distribution maintainers
  section 17631 17814 prefix overrides the installation path and should usually be
  section 17814 17945 destdir is an absolute path which allows you to install to a
  section 17945 18065 multilib sets the architecture-specific library path
  section 18065 19944 have a look at the top-level makefile and src/makefile

module luajit-2.1
  section 14 2769 luajit
  section 36 59 luajit
  section 59 89 download e<rchevron>
  section 89 111 installation
  section 111 135 running
  section 135 162 extensions
  section 162 190 ffi library
  section 190 212 ffi tutorial
  section 212 231 ffi.* api
  section 231 261 ffi semantics
  section 261 284 jit.* library
  section 284 303 lua/c api
  section 303 328 profiler
  section 328 351 status
  section 351 375 changes
  section 375 388 faq
  section 388 421 performance e<rchevron>
  section 421 447 wiki e<rchevron>
  section 447 821 mailing list e<rchevron>
  section 821 1065 compatibility
  section 1065 2344 overview
  section 2344 2769 more ...

module running
  section 14 8059 running luajit
  section 44 67 luajit
  section 67 97 download e<rchevron>
  section 97 119 installation
  section 119 143 running
  section 143 170 extensions
  section 170 198 ffi library
  section 198 220 ffi tutorial
  section 220 239 ffi.* api
  section 239 269 ffi semantics
  section 269 292 jit.* library
  section 292 311 lua/c api
  section 311 336 profiler
  section 336 359 status
  section 359 383 changes
  section 383 396 faq
  section 396 429 performance e<rchevron>
  section 429 455 wiki e<rchevron>
  section 455 735 mailing list e<rchevron>
  section 735 1083 command line options
  section 1083 3561 -b[options] input output
  section 1211 1255 -l e<mdash> only list bytecode.
  section 1255 1319 -s e<mdash> strip debug info (this is the default).
  section 1319 1360 -g e<mdash> keep debug info.
  section 1360 1444 -n name e<mdash> set module name (default: auto-detect from
  section 1444 1535 -t type e<mdash> set output file type (default: auto-detect
  section 1535 1622 -a arch e<mdash> override architecture for object files
  section 1622 1697 -o os e<mdash> override os for object files (default:
  section 1697 1754 -e chunk e<mdash> use chunk string as input.
  section 1754 1940 - (a single minus sign) e<mdash> use stdin as input and/or
  section 1940 2002 c e<mdash> c source file, exported bytecode data.
  section 2002 2062 h e<mdash> c header file, static bytecode data.
  section 2062 2164 obj or o e<mdash> object file, exported bytecode data
  section 2164 2264 raw or any other extension e<mdash> raw bytecode file
  section 2264 2355 see also string.dump() for information on bytecode portability
  section 2355 2531 a file in raw bytecode format is auto-detected and can be
  section 2531 2670 to statically embed the bytecode of a module in your
  section 2670 2819 on most elf-based systems (e.g. linux) you need to explicitly
  section 2819 3561 require() tries to load embedded bytecode data from exported
  section 3561 4916 -j cmd[=arg[,arg...]]
  section 4024 4087 -jon e<mdash> turns the jit compiler on (default).
  section 4087 4169 -joff e<mdash> turns the jit compiler off (only use the
  section 4169 4240 -jflush e<mdash> flushes the whole cache of compiled code.
  section 4240 4331 -jv e<mdash> shows verbose information about the progress of
  section 4331 4422 -jdump e<mdash> dumps the code and structures used in
  section 4422 4916 -jp e<mdash> start the integrated profiler.
  section 4916 8059 -o[level]

module status
  section 14 2490 status
  section 36 59 luajit
  section 59 89 download e<rchevron>
  section 89 111 installation
  section 111 135 running
  section 135 162 extensions
  section 162 190 ffi library
  section 190 212 ffi tutorial
  section 212 231 ffi.* api
  section 231 261 ffi semantics
  section 261 284 jit.* library
  section 284 303 lua/c api
  section 303 328 profiler
  section 328 351 status
  section 351 375 changes
  section 375 388 faq
  section 388 421 performance e<rchevron>
  section 421 447 wiki e<rchevron>
  section 447 619 mailing list e<rchevron>
  section 619 2490 current status
  section 875 1108 there are some differences in implementation-defined
  section 1108 1304 the lua debug api is missing a couple of features (return
  section 1304 1577 currently some out-of-memory errors from on-trace code
  section 1577 2490 luajit on 64 bit systems provides a limited range of 47 bits

dist array-var-nginx-module-0.05
  aliases ngx_array_var ngx_http_array_var_module
  modules array-var-nginx-module-0.05

module array-var-nginx-module-0.05
  aliases ngx_array_var
  section 18 211 name
  section 211 261 status
  section 261 782 synopsis
  section 782 1319 description
  section 1319 7697 directives
  section 1341 2226 array_split
  section 2226 2974 array_join
  section 2974 4304 array_map
  section 4304 7697 array_map_op
  section 7697 9477 installation
  section 8893 9477 building as a dynamic module
  section 9477 10232 compatibility
  section 10232 10379 source repository
  section 10379 10529 getting involved
  section 10529 10628 author
  section 10628 12080 copyright & license
  section 12080 12316 see also

dist drizzle-nginx-module-0.1.10
  aliases ngx_drizzle ngx_http_drizzle_module
  modules drizzle-nginx-module-0.1.10

module drizzle-nginx-module-0.1.10
  aliases ngx_drizzle
  section 18 210 name
  section 210 333 status
  section 333 478 version
  section 478 1717 synopsis
  section 1717 4364 description
  section 2579 3335 keepalive connection pool
  section 3335 4364 last insert id
  section 4364 12795 directives
  section 4386 6498 drizzle_server
  section 6498 7827 drizzle_keepalive
  section 7827 8520 drizzle_query
  section 8520 9208 drizzle_pass
  section 9208 9677 drizzle_connect_timeout
  section 9677 10168 drizzle_send_query_timeout
  section 10168 10685 drizzle_recv_cols_timeout
  section 10685 11204 drizzle_recv_rows_timeout
  section 11204 11531 drizzle_buffer_size
  section 11531 11864 drizzle_module_header
  section 11864 12795 drizzle_status
  section 12795 15150 variables
  section 12868 15150 $drizzle_thread_id
  section 15150 18611 output format
  section 16371 16939 rds header part
  section 16939 18176 rds body part
  section 17139 17564 columns
  section 17564 18176 rows
  section 17735 17829 row flag
  section 17829 18176 fields data
  section 18176 18611 rds buffer limitations
  section 18611 18830 status code
  section 18830 19366 caveats
  section 19366 20470 trouble shooting
  section 20470 20937 known issues
  section 20937 24072 installation
  section 24072 25046 compatibility
  section 25046 25333 community
  section 25067 25203 english mailing list
  section 25203 25333 chinese mailing list
  section 25333 25628 report bugs
  section 25628 25770 source repository
  section 25770 26433 test suite
  section 26433 27743 todo
  section 27743 27905 changes
  section 27905 28188 authors
  section 28188 29859 copyright & license
  section 29859 30608 see also

dist echo-nginx-module-0.61
  aliases ngx_echo ngx_http_echo_module
  modules echo-nginx-module-0.61

module echo-nginx-module-0.61
  aliases ngx_echo
  section 18 233 name
  section 233 283 status
  section 283 422 version
  section 422 4572 synopsis
  section 4572 6753 description
  section 6753 32899 content handler directives
  section 8261 10722 echo
  section 10722 12092 echo_duplicate
  section 12092 14052 echo_flush
  section 14052 14903 echo_sleep
  section 14903 15456 echo_blocking_sleep
  section 15456 16686 echo_reset_timer
  section 16686 18573 echo_read_request_body
  section 18573 21805 echo_location_async
  section 21805 24087 echo_location
  section 24087 26854 echo_subrequest_async
  section 26854 27550 echo_subrequest
  section 27550 29539 echo_foreach_split
  section 29539 29844 echo_end
  section 29844 30649 echo_request_body
  section 30649 32146 echo_exec
  section 32146 32899 echo_status
  section 32899 35603 filter directives
  section 33149 34543 echo_before_body
  section 34543 35603 echo_after_body
  section 35603 40179 variables
  section 35624 35741 $echo_it
  section 35741 36226 $echo_timer_elapsed
  section 36226 36482 $echo_request_body
  section 36482 37109 $echo_request_method
  section 37109 37447 $echo_client_request_method
  section 37447 38446 $echo_client_request_headers
  section 38446 38737 $echo_cacheable_request_uri
  section 38737 39297 $echo_request_uri
  section 39297 39918 $echo_incr
  section 39918 40179 $echo_response_status
  section 40179 41801 installation
  section 41801 43306 compatibility
  section 43306 44046 modules that use this module for testing
  section 44046 44333 community
  section 44067 44203 english mailing list
  section 44203 44333 chinese mailing list
  section 44333 44802 report bugs
  section 44802 44939 source repository
  section 44939 45101 changes
  section 45101 46178 test suite
  section 46178 48491 todo
  section 48491 48647 getting involved
  section 48647 48864 author
  section 48864 50327 copyright & license
  section 50327 50773 see also

dist encrypted-session-nginx-module-0.07
  aliases ngx_encrypted_session ngx_http_encrypted_session_module
  modules encrypted-session-nginx-module-0.07

module encrypted-session-nginx-module-0.07
  aliases ngx_encrypted_session
  section 18 201 name
  section 201 251 status
  section 251 1208 synopsis
  section 1208 2214 description
  section 2214 4909 directives
  section 2236 2533 encrypted_session_key
  section 2533 2870 encrypted_session_iv
  section 2870 3996 encrypted_session_expires
  section 3996 4637 set_encrypt_session
  section 4637 4909 set_decrypt_session
  section 4909 6801 installation
  section 6209 6801 building as a dynamic module
  section 6801 7682 compatibility
  section 7682 8152 report bugs
  section 8152 8314 source repository
  section 8314 8464 getting involved
  section 8464 8546 author
  section 8546 9997 copyright & license
  section 9997 10172 see also

dist form-input-nginx-module-0.12
  aliases ngx_form_input ngx_http_form_input_module
  modules form-input-nginx-module-0.12

module form-input-nginx-module-0.12
  aliases ngx_form_input
  section 18 208 name
  section 208 461 description
  section 461 1810 installation
  section 1225 1810 building as a dynamic module
  section 1810 2741 usage
  section 2741 3175 limitations
  section 3175 3602 compatibility
  section 3602 5128 copyright & license

dist headers-more-nginx-module-0.33
  aliases ngx_headers_more ngx_http_headers_more_filter_module
  modules headers-more-nginx-module-0.33

module headers-more-nginx-module-0.33
  aliases ngx_headers_more
  section 18 209 name
  section 209 375 version
  section 375 1401 synopsis
  section 1401 3015 description
  section 3015 8439 directives
  section 3037 5566 more_set_headers
  section 5566 6445 more_clear_headers
  section 6445 7479 more_set_input_headers
  section 7479 8439 more_clear_input_headers
  section 8439 9349 limitations
  section 9349 10591 installation
  section 10591 11831 compatibility
  section 11831 12118 community
  section 11852 11988 english mailing list
  section 11988 12118 chinese mailing list
  section 12118 12385 bugs and patches
  section 12385 12538 source repository
  section 12538 12700 changes
  section 12700 13981 test suite
  section 13981 14064 todo
  section 14064 14220 getting involved
  section 14220 14529 authors
  section 14529 16227 copyright & license
  section 16227 17015 see also

dist iconv-nginx-module-0.14
  aliases ngx_iconv ngx_http_iconv_module
  modules iconv-nginx-module-0.14

module iconv-nginx-module-0.14
  aliases ngx_iconv
  section 19 53 name
  section 53 261 description
  section 261 1160 usage
  section 276 474 set_iconv
  section 474 604 iconv_buffer_size
  section 604 1160 iconv_filter
  section 1160 1623 compatibility
  section 1623 2719 installation
  section 2139 2719 building as a dynamic module
  section 2719 4410 copyright & license
  section 4410 4561 changelog
  section 4561 4654 see also

dist lua-cjson-2.1.0.5
  aliases cjson
  modules lua-cjson-2.1.0.5

module lua-cjson-2.1.0.5
  aliases cjson
  section 18 72 name
  section 72 687 description
  section 687 2493 additions
  section 706 1122 encode_empty_table_as_object
  section 1122 1639 empty_array
  section 1639 2301 empty_array_mt
  section 2301 2493 encode_number_precision

dist luajit-2.1-20171103

dist lua-rds-parser-0.06
  aliases rds.parser

dist lua-redis-parser-0.13
  aliases redis.parser
  modules lua-redis-parser-0.13

module lua-redis-parser-0.13
  aliases redis.parser
  section 18 111 name
  section 111 254 version
  section 254 737 description
  section 737 4778 functions
  section 994 2135 parse_reply
  section 2135 3021 parse_replies
  section 3021 3637 typename
  section 3637 4778 build_query
  section 4778 5236 constants
  section 4799 4858 bad_reply
  section 4858 4925 integer_reply
  section 4925 4988 error_reply
  section 4988 5053 status_reply
  section 5053 5114 bulk_reply
  section 5114 5187 multi_bulk_reply
  section 5187 5236 null
  section 5236 5438 background
  section 5438 5885 report bugs
  section 5885 6015 source repository
  section 6015 6962 installation
  section 6039 6342 build requirements
  section 6342 6423 linux/bsd/solaris
  section 6423 6962 mac os x
  section 6962 7070 author
  section 7070 8562 copyright & license
  section 8562 8905 see also

dist lua-resty-core-0.1.13
  aliases resty.core
  modules .github.issue_template .github.pull_request_template lua-resty-core-0.1.13 ngx.balancer ngx.errlog ngx.ocsp ngx.process ngx.re ngx.semaphore ngx.ssl ngx.ssl.session

module .github.issue_template

module .github.pull_request_template

module lua-resty-core-0.1.13
  aliases resty.core
  section 18 125 name
  section 125 205 status
  section 205 653 synopsis
  section 653 1675 description
  section 1675 2353 prerequisites
  section 2353 8899 api implemented
  section 2380 2665 resty.core.hash
  section 2665 2900 resty.core.base64
  section 2900 3124 resty.core.uri
  section 3124 3579 resty.core.regex
  section 3579 3700 resty.core.exit
  section 3700 5179 resty.core.shdict
  section 5179 5314 resty.core.var
  section 5314 5432 resty.core.ctx
  section 5432 6211 resty.core.request
  section 6211 6353 resty.core.response
  section 6353 6664 resty.core.misc
  section 6664 6859 resty.core.time
  section 6859 7264 resty.core.worker
  section 7264 7549 ngx.semaphore
  section 7549 7736 ngx.balancer
  section 7736 7988 ngx.ssl
  section 7988 8221 ngx.ssl.session
  section 8221 8418 ngx.re
  section 8418 8649 ngx.process
  section 8649 8899 ngx.errlog
  section 8899 9126 caveat
  section 9126 9382 todo
  section 9382 9480 author
  section 9480 10934 copyright and license
  section 10934 11106 see also

module ngx.balancer
  section 18 103 name
  section 103 174 status
  section 174 2781 synopsis
  section 192 1534 http subsystem
  section 1534 2781 stream subsystem
  section 2781 3362 description
  section 3362 7933 methods
  section 3515 4250 set_current_peer
  section 4250 5286 set_more_tries
  section 5286 6556 get_last_failure
  section 6556 7933 set_timeouts
  section 7933 8220 community
  section 7954 8090 english mailing list
  section 8090 8220 chinese mailing list
  section 8220 8471 bugs and patches
  section 8471 8557 author
  section 8557 10011 copyright and license
  section 10011 10357 see also

module ngx.errlog
  section 18 107 name
  section 107 249 status
  section 249 2062 synopsis
  section 267 2062 capturing nginx error logs with specified log filtering level
  section 2062 6915 methods
  section 2079 3051 set_filter_level
  section 3051 6152 get_logs
  section 6152 6915 get_sys_filter_level
  section 6915 7202 community
  section 6936 7072 english mailing list
  section 7072 7202 chinese mailing list
  section 7202 7453 bugs and patches
  section 7453 7543 author
  section 7543 8992 copyright and license
  section 8992 9226 see also

module ngx.ocsp
  section 18 110 name
  section 110 181 status
  section 181 3764 synopsis
  section 3764 4261 description
  section 4261 7442 methods
  section 4278 5096 get_ocsp_responder_from_der_chain
  section 5096 6086 create_ocsp_request
  section 6086 6758 validate_ocsp_response
  section 6758 7442 set_ocsp_status_resp
  section 7442 7729 community
  section 7463 7599 english mailing list
  section 7599 7729 chinese mailing list
  section 7729 7980 bugs and patches
  section 7980 8066 author
  section 8066 9520 copyright and license
  section 9520 9921 see also

module ngx.process
  section 18 100 name
  section 100 241 status
  section 241 1459 synopsis
  section 259 1459 enables privileged agent process and get process type
  section 1459 3280 functions
  section 1478 1829 type
  section 1829 2510 enable_privileged_agent
  section 2510 3280 signal_graceful_exit
  section 3280 3567 community
  section 3301 3437 english mailing list
  section 3437 3567 chinese mailing list
  section 3567 3818 bugs and patches
  section 3818 3908 author
  section 3908 5357 copyright and license
  section 5357 5591 see also

module ngx.re
  section 18 91 name
  section 91 162 status
  section 162 464 synopsis
  section 464 585 description
  section 585 4532 methods
  section 738 3355 split
  section 3355 4532 opt
  section 4532 4819 community
  section 4553 4689 english mailing list
  section 4689 4819 chinese mailing list
  section 4819 5070 bugs and patches
  section 5070 5161 author
  section 5161 6615 copyright and license
  section 6615 6848 see also

module ngx.semaphore
  section 18 95 name
  section 95 166 status
  section 166 2851 synopsis
  section 184 1361 synchronizing threads in the same context
  section 1361 2851 synchronizing threads in different contexts
  section 2851 4107 description
  section 4107 8135 methods
  section 4126 4903 new
  section 4903 5728 post
  section 5728 6991 wait
  section 6991 8135 count
  section 8135 8422 community
  section 8156 8292 english mailing list
  section 8292 8422 chinese mailing list
  section 8422 8673 bugs and patches
  section 8673 8715 author
  section 8715 10169 copyright and license
  section 10169 10403 see also

module ngx.ssl
  section 18 99 name
  section 99 170 status
  section 170 2534 synopsis
  section 2534 3332 description
  section 3332 11337 methods
  section 3349 3644 clear_certs
  section 3644 4486 cert_pem_to_der
  section 4486 5051 set_der_cert
  section 5051 5607 priv_key_pem_to_der
  section 5607 6168 set_der_priv_key
  section 6168 6979 server_name
  section 6979 8536 raw_server_addr
  section 8536 8971 get_tls1_version
  section 8971 9541 parse_pem_cert
  section 9541 9975 parse_pem_priv_key
  section 9975 10650 set_cert
  section 10650 11337 set_priv_key
  section 11337 11624 community
  section 11358 11494 english mailing list
  section 11494 11624 chinese mailing list
  section 11624 11875 bugs and patches
  section 11875 11961 author
  section 11961 13415 copyright and license
  section 13415 13818 see also

module ngx.ssl.session
  section 18 139 name
  section 139 210 status
  section 210 3852 synopsis
  section 3852 4517 description
  section 4517 6941 methods
  section 4534 5155 get_session_id
  section 5155 6175 get_serialized_session
  section 6175 6941 set_serialized_session
  section 6941 7228 community
  section 6962 7098 english mailing list
  section 7098 7228 chinese mailing list
  section 7228 7479 bugs and patches
  section 7479 7565 author
  section 7565 9019 copyright and license
  section 9019 9517 see also

dist lua-resty-dns-0.20
  aliases resty.dns
  modules lua-resty-dns-0.20

module lua-resty-dns-0.20
  aliases resty.dns
  section 18 108 name
  section 108 170 status
  section 170 995 description
  section 995 2321 synopsis
  section 2321 9858 methods
  section 2340 3789 new
  section 3789 7284 query
  section 7284 8038 tcp_query
  section 8038 8205 set_timeout
  section 8205 8635 compress_ipv6_addr
  section 8635 9050 expand_ipv6_addr
  section 9050 9589 arpa_str
  section 9589 9858 reverse_query
  section 9858 11473 constants
  section 9879 9963 type_a
  section 9963 10049 type_ns
  section 10049 10141 type_cname
  section 10141 10229 type_soa
  section 10229 10318 type_ptr
  section 10318 10405 type_mx
  section 10405 10494 type_txt
  section 10494 10615 type_aaaa
  section 10615 10760 type_srv
  section 10760 10905 type_spf
  section 10905 11029 class_in
  section 11029 11172 section_an
  section 11172 11322 section_ns
  section 11322 11473 section_ar
  section 11473 12020 automatic error logging
  section 12020 12828 limitations
  section 12828 12978 todo
  section 12978 13076 author
  section 13076 14570 copyright and license
  section 14570 14953 see also

dist lua-resty-limit-traffic-0.05
  aliases resty.limit.traffic
  modules lua-resty-limit-traffic-0.05 resty.limit.conn resty.limit.count resty.limit.req resty.limit.traffic

module lua-resty-limit-traffic-0.05
  aliases resty.limit.traffic
  section 18 129 name
  section 129 291 status
  section 291 10228 synopsis
  section 10228 11476 description
  section 11476 12220 installation
  section 12220 12507 community
  section 12241 12377 english mailing list
  section 12377 12507 chinese mailing list
  section 12507 12767 bugs and patches
  section 12767 12865 author
  section 12865 14319 copyright and license
  section 14319 14662 see also

module resty.limit.conn
  section 18 147 name
  section 147 4325 synopsis
  section 4325 4965 description
  section 4965 11041 methods
  section 4984 6310 new
  section 6310 9093 incoming
  section 9093 9473 is_committed
  section 9473 10399 leaving
  section 10399 10528 set_conn
  section 10528 10661 set_burst
  section 10661 11041 uncommit
  section 11041 11773 caveats
  section 11060 11773 out-of-sync counter prevention
  section 11773 12464 instance sharing
  section 12464 13206 limiting granularity
  section 13206 13312 installation
  section 13312 13599 community
  section 13333 13469 english mailing list
  section 13469 13599 chinese mailing list
  section 13599 13859 bugs and patches
  section 13859 13958 author
  section 13958 15413 copyright and license
  section 15413 15780 see also

module resty.limit.count
  section 18 115 name
  section 115 1816 synopsis
  section 1816 2383 description
  section 2383 4936 methods
  section 2402 3066 new
  section 3066 4708 incoming
  section 4708 4936 uncommit
  section 4936 5198 limiting granularity
  section 5198 5304 installation
  section 5304 5511 bugs and patches
  section 5511 5642 authors
  section 5642 7096 copyright and license
  section 7096 7415 see also

module resty.limit.req
  section 18 111 name
  section 111 2724 synopsis
  section 2724 3372 description
  section 3372 7184 methods
  section 3391 4295 new
  section 4295 6611 incoming
  section 6611 6734 set_rate
  section 6734 6861 set_burst
  section 6861 7184 uncommit
  section 7184 7875 instance sharing
  section 7875 8626 limiting granularity
  section 8626 8732 installation
  section 8732 9019 community
  section 8753 8889 english mailing list
  section 8889 9019 chinese mailing list
  section 9019 9279 bugs and patches
  section 9279 9378 author
  section 9378 10833 copyright and license
  section 10833 11202 see also

module resty.limit.traffic
  section 18 120 name
  section 120 3216 synopsis
  section 3216 3963 description
  section 3963 6954 methods
  section 3982 6954 combine
  section 6954 7292 instance sharing
  section 7292 7688 limiting granularity
  section 7688 7794 installation
  section 7794 8081 community
  section 7815 7951 english mailing list
  section 7951 8081 chinese mailing list
  section 8081 8341 bugs and patches
  section 8341 8440 author
  section 8440 9895 copyright and license
  section 9895 10256 see also

dist lua-resty-lock-0.07
  aliases resty.lock
  modules lua-resty-lock-0.07

module lua-resty-lock-0.07
  aliases resty.lock
  section 18 88 name
  section 88 176 status
  section 176 1279 synopsis
  section 1279 1775 description
  section 1775 6780 methods
  section 2186 4120 new
  section 4120 5724 lock
  section 5724 6025 unlock
  section 6025 6780 expire
  section 6780 7136 for multiple lua light threads
  section 7136 11281 for cache locks
  section 11281 11441 prerequisites
  section 11441 12397 installation
  section 12397 12688 todo
  section 12688 12975 community
  section 12709 12845 english mailing list
  section 12845 12975 chinese mailing list
  section 12975 13226 bugs and patches
  section 13226 13324 author
  section 13324 14778 copyright and license
  section 14778 14931 see also

dist lua-resty-lrucache-0.07
  aliases resty.lrucache
  modules lua-resty-lrucache-0.07

module lua-resty-lrucache-0.07
  aliases resty.lrucache
  section 18 93 name
  section 93 193 status
  section 193 1318 synopsis
  section 1318 3390 description
  section 3390 5400 methods
  section 3877 4593 new
  section 4593 5012 set
  section 5012 5298 get
  section 5298 5400 delete
  section 5400 5560 prerequisites
  section 5560 6474 installation
  section 6474 6661 todo
  section 6661 6948 community
  section 6682 6818 english mailing list
  section 6818 6948 chinese mailing list
  section 6948 7203 bugs and patches
  section 7203 7315 author
  section 7315 8811 copyright and license
  section 8811 8967 see also

dist lua-resty-memcached-0.14
  aliases resty.memcached
  modules lua-resty-memcached-0.14

module lua-resty-memcached-0.14
  aliases resty.memcached
  section 18 125 name
  section 125 187 status
  section 187 587 description
  section 587 3026 synopsis
  section 3026 13817 methods
  section 3206 3785 new
  section 3785 4275 connect
  section 4275 4852 set
  section 4852 5098 set_timeout
  section 5098 5822 set_keepalive
  section 5822 6402 get_reused_times
  section 6402 6624 close
  section 6624 7287 add
  section 7287 7962 replace
  section 7962 8648 append
  section 8648 9339 prepend
  section 9339 10430 get
  section 10430 10750 gets
  section 10750 11063 cas
  section 11063 11316 touch
  section 11316 11658 flush_all
  section 11658 11921 delete
  section 11921 12211 incr
  section 12211 12501 decr
  section 12501 12970 stats
  section 12970 13160 version
  section 13160 13500 quit
  section 13500 13817 verbosity
  section 13817 14317 automatic error logging
  section 14317 15097 limitations
  section 15097 15246 todo
  section 15246 15345 author
  section 15345 16840 copyright and license
  section 16840 17235 see also

dist lua-resty-mysql-0.20
  aliases resty.mysql
  modules .github.issue_template lua-resty-mysql-0.20

module .github.issue_template

module lua-resty-mysql-0.20
  aliases resty.mysql
  section 18 113 name
  section 113 175 status
  section 175 738 description
  section 738 4934 synopsis
  section 4934 12719 methods
  section 4953 5109 new
  section 5109 7761 connect
  section 7761 7914 set_timeout
  section 7914 8637 set_keepalive
  section 8637 9215 get_reused_times
  section 9215 9431 close
  section 9431 9772 send_query
  section 9772 11751 read_result
  section 11751 12173 query
  section 12173 12407 server_ver
  section 12407 12719 set_compact_arrays
  section 12719 13177 sql literal quoting
  section 13177 15067 multi-resultset support
  section 15067 15480 debugging
  section 15480 15980 automatic error logging
  section 15980 16762 limitations
  section 16762 17518 installation
  section 17518 17805 community
  section 17539 17675 english mailing list
  section 17675 17805 chinese mailing list
  section 17805 18112 bugs and patches
  section 18112 18444 todo
  section 18444 18542 author
  section 18542 20036 copyright and license
  section 20036 20504 see also

dist lua-resty-redis-0.26
  aliases resty.redis
  modules lua-resty-redis-0.26

module lua-resty-redis-0.26
  aliases resty.redis
  section 18 117 name
  section 117 179 status
  section 179 590 description
  section 590 3738 synopsis
  section 3738 13047 methods
  section 5886 6032 new
  section 6032 6888 connect
  section 6888 7042 set_timeout
  section 7042 7758 set_keepalive
  section 7758 8337 get_reused_times
  section 8337 8554 close
  section 8554 9213 init_pipeline
  section 9213 9612 commit_pipeline
  section 9612 9918 cancel_pipeline
  section 9918 10275 hmset
  section 10275 10485 array_to_hash
  section 10485 12137 read_reply
  section 12137 13047 add_commands
  section 13047 14095 redis authentication
  section 14095 15436 redis transactions
  section 15436 16023 load balancing and failover
  section 16023 16415 debugging
  section 16415 16962 automatic error logging
  section 16962 19323 check list for issues
  section 19323 20210 limitations
  section 20210 20962 installation
  section 20962 20978 todo
  section 20978 21265 community
  section 20999 21135 english mailing list
  section 21135 21265 chinese mailing list
  section 21265 21514 bugs and patches
  section 21514 21613 author
  section 21613 23096 copyright and license
  section 23096 23474 see also

dist lua-resty-string-0.10
  aliases resty.string
  modules lua-resty-string-0.10

module lua-resty-string-0.10
  aliases resty.string
  section 18 118 name
  section 118 268 status
  section 268 449 description
  section 449 5573 synopsis
  section 5573 5655 author
  section 5655 7149 copyright and license
  section 7149 7251 see also

dist lua-resty-upload-0.10
  aliases resty.upload
  modules lua-resty-upload-0.10

module lua-resty-upload-0.10
  aliases resty.upload
  section 18 130 name
  section 130 192 status
  section 192 1383 description
  section 1383 5601 synopsis
  section 5601 5700 author
  section 5700 7195 copyright and license
  section 7195 7645 see also

dist lua-resty-upstream-healthcheck-0.05
  aliases resty.upstream.healthcheck
  modules lua-resty-upstream-healthcheck-0.05

module lua-resty-upstream-healthcheck-0.05
  aliases resty.upstream.healthcheck
  section 18 108 name
  section 108 204 status
  section 204 2575 synopsis
  section 2575 2706 description
  section 2706 4289 methods
  section 2723 3254 spawn_checker
  section 3254 4289 status_page
  section 4289 5566 multiple upstreams
  section 5566 6547 installation
  section 6547 6563 todo
  section 6563 6850 community
  section 6584 6720 english mailing list
  section 6720 6850 chinese mailing list
  section 6850 7116 bugs and patches
  section 7116 7214 author
  section 7214 8668 copyright and license
  section 8668 8916 see also

dist lua-resty-websocket-0.06
  aliases resty.websocket
  modules lua-resty-websocket-0.06

module lua-resty-websocket-0.06
  aliases resty.websocket
  section 18 107 name
  section 107 169 status
  section 169 610 description
  section 610 2723 synopsis
  section 2723 13669 modules
  section 2742 7232 resty.websocket.server
  section 2869 7232 methods
  section 2889 3931 new
  section 3931 4063 set_timeout
  section 4063 4356 send_text
  section 4356 4655 send_binary
  section 4655 5065 send_ping
  section 5065 5400 send_pong
  section 5400 5846 send_close
  section 5846 6473 send_frame
  section 6473 7232 recv_frame
  section 7232 13070 resty.websocket.client
  section 8268 13070 methods
  section 8288 9194 client:new
  section 9194 10624 client:connect
  section 10624 10809 client:close
  section 10809 11541 client:set_keepalive
  section 11541 11684 client:set_timeout
  section 11684 11836 client:send_text
  section 11836 11994 client:send_binary
  section 11994 12185 client:send_ping
  section 12185 12376 client:send_pong
  section 12376 12577 client:send_close
  section 12577 12915 client:send_frame
  section 12915 13070 client:recv_frame
  section 13070 13669 resty.websocket.protocol
  section 13203 13669 methods
  section 13223 13377 recv_frame
  section 13377 13516 build_frame
  section 13516 13669 send_frame
  section 13669 14169 automatic error logging
  section 14169 14963 limitations
  section 14963 16018 installation
  section 16018 16034 todo
  section 16034 16321 community
  section 16055 16191 english mailing list
  section 16191 16321 chinese mailing list
  section 16321 16620 bugs and patches
  section 16620 16719 author
  section 16719 18202 copyright and license
  section 18202 18823 see also

dist memc-nginx-module-0.18
  aliases ngx_memc ngx_http_memc_module
  modules memc-nginx-module-0.18

module memc-nginx-module-0.18
  aliases ngx_memc
  section 18 262 name
  section 262 399 version
  section 399 2556 synopsis
  section 2556 4879 description
  section 3791 4500 keep-alive connections to memcached servers
  section 4500 4879 how it works
  section 4879 10354 memcached commands supported
  section 5634 6323 get $memc_key
  section 6323 7309 set $memc_key $memc_flags $memc_exptime $memc_value
  section 7309 7404 add $memc_key $memc_flags $memc_exptime $memc_value
  section 7404 7503 replace $memc_key $memc_flags $memc_exptime $memc_value
  section 7503 7770 append $memc_key $memc_flags $memc_exptime $memc_value
  section 7770 7872 prepend $memc_key $memc_flags $memc_exptime $memc_value
  section 7872 8320 delete $memc_key
  section 8320 8575 delete $memc_key $memc_exptime
  section 8575 9162 incr $memc_key $memc_value
  section 9162 9243 decr $memc_key $memc_value
  section 9243 9427 flush_all
  section 9427 9566 flush_all $memc_exptime
  section 9566 9973 stats
  section 9973 10354 version
  section 10354 14296 directives
  section 10766 11224 memc_pass
  section 11224 11745 memc_cmds_allowed
  section 11745 12096 memc_flags_to_last_modified
  section 12096 12565 memc_connect_timeout
  section 12565 13039 memc_send_timeout
  section 13039 13515 memc_read_timeout
  section 13515 13970 memc_buffer_size
  section 13970 14296 memc_ignore_client_abort
  section 14296 16140 installation
  section 15723 16140 for developers
  section 16140 17546 compatibility
  section 17546 17833 community
  section 17567 17703 english mailing list
  section 17703 17833 chinese mailing list
  section 17833 18336 report bugs
  section 18336 18472 source repository
  section 18472 18634 changes
  section 18634 19991 test suite
  section 19991 20164 todo
  section 20164 20320 getting involved
  section 20320 20537 author
  section 20537 22217 copyright & license
  section 22217 23489 see also

dist ngx_coolkit-0.2rc3
  aliases ngx_coolkit_module

dist ngx_devel_kit-0.3.0
  aliases ngx_devel_kit
  modules ngx_devel_kit-0.3.0

module ngx_devel_kit-0.3.0
  section 18 61 name
  section 61 1006 synopsis
  section 1006 1124 status
  section 1124 1474 features
  section 1474 1976 design
  section 1490 1668 modular
  section 1668 1976 auto-generated & easily extensible
  section 1976 2983 usage for users
  section 2467 2983 building as a dynamic module
  section 2983 4246 usage for developers
  section 3804 4246 warning: using ndk_all
  section 4246 4918 modules using ndk
  section 4918 5186 todo
  section 5186 6733 license
  section 6733 6987 contributing / feedback
  section 6987 7044 author

dist ngx_lua-0.10.11
  aliases ngx_http_lua_module
  modules .github.issue_template .github.pull_request_template ngx_lua-0.10.11

module .github.issue_template

module .github.pull_request_template

module ngx_lua-0.10.11
  section 19 200 name
  section 200 235 status
  section 235 377 version
  section 377 4094 synopsis
  section 4094 7176 description
  section 7176 8753 typical uses
  section 8753 9157 nginx compatibility
  section 9157 14239 installation
  section 11629 12209 building as a dynamic module
  section 12209 13546 c macro configurations
  section 13546 14239 installation on ubuntu 11.10
  section 14239 14526 community
  section 14260 14396 english mailing list
  section 14396 14526 chinese mailing list
  section 14526 14695 code repository
  section 14695 14960 bugs and patches
  section 14960 16882 lua/luajit bytecode support
  section 16882 17289 system environment variable support
  section 17289 18381 http 1.0 support
  section 18381 21502 statically linking pure lua modules
  section 21502 24495 data sharing within an nginx worker
  section 24495 35641 known issues
  section 24519 24943 tcp socket connect operation issues
  section 24943 26182 lua coroutine yielding/resuming
  section 26182 28893 lua variable scope
  section 28893 30027 locations configured by subrequest directives of other modules
  section 30027 30826 cosockets not available everywhere
  section 30826 34501 special escaping sequences
  section 34501 34760 mixing with ssi not supported
  section 34760 34956 spdy mode not fully supported
  section 34956 35641 missing data on short circuited requests
  section 35641 37879 todo
  section 37879 38044 changes
  section 38044 41044 test suite
  section 41044 42627 copyright and license
  section 42627 44888 see also
  section 44888 122885 directives
  section 47548 49954 lua_capture_error_log
  section 49954 50553 lua_use_default_type
  section 50553 51886 lua_malloc_trim
  section 51886 53767 lua_code_cache
  section 53767 55055 lua_regex_cache_max_entries
  section 55055 55746 lua_regex_match_limit
  section 55746 56420 lua_package_path
  section 56420 57095 lua_package_cpath
  section 57095 61315 init_by_lua
  section 61315 61847 init_by_lua_block
  section 61847 62436 init_by_lua_file
  section 62436 63883 init_worker_by_lua
  section 63883 64444 init_worker_by_lua_block
  section 64444 64760 init_worker_by_lua_file
  section 64760 67832 set_by_lua
  section 67832 68594 set_by_lua_block
  section 68594 69816 set_by_lua_file
  section 69816 70593 content_by_lua
  section 70593 71149 content_by_lua_block
  section 71149 72706 content_by_lua_file
  section 72706 76941 rewrite_by_lua
  section 76941 77490 rewrite_by_lua_block
  section 77490 78861 rewrite_by_lua_file
  section 78861 81509 access_by_lua
  section 81509 82053 access_by_lua_block
  section 82053 83277 access_by_lua_file
  section 83277 84406 header_filter_by_lua
  section 84406 84984 header_filter_by_lua_block
  section 84984 85681 header_filter_by_lua_file
  section 85681 89260 body_filter_by_lua
  section 89260 89838 body_filter_by_lua_block
  section 89838 90528 body_filter_by_lua_file
  section 90528 92902 log_by_lua
  section 92902 93450 log_by_lua_block
  section 93450 94101 log_by_lua_file
  section 94101 96436 balancer_by_lua_block
  section 96436 97082 balancer_by_lua_file
  section 97082 99038 lua_need_request_body
  section 99038 102696 ssl_certificate_by_lua_block
  section 102696 103380 ssl_certificate_by_lua_file
  section 103380 106632 ssl_session_fetch_by_lua_block
  section 106632 107460 ssl_session_fetch_by_lua_file
  section 107460 109101 ssl_session_store_by_lua_block
  section 109101 109928 ssl_session_store_by_lua_file
  section 109928 110699 lua_shared_dict
  section 110699 111334 lua_socket_connect_timeout
  section 111334 111942 lua_socket_send_timeout
  section 111942 112177 lua_socket_send_lowat
  section 112177 112906 lua_socket_read_timeout
  section 112906 113448 lua_socket_buffer_size
  section 113448 114297 lua_socket_pool_size
  section 114297 115037 lua_socket_keepalive_timeout
  section 115037 115581 lua_socket_log_errors
  section 115581 116048 lua_ssl_ciphers
  section 116048 116395 lua_ssl_crl
  section 116395 116771 lua_ssl_protocols
  section 116771 117187 lua_ssl_trusted_certificate
  section 117187 117519 lua_ssl_verify_depth
  section 117519 118460 lua_http10_buffering
  section 118460 118935 rewrite_by_lua_no_postpone
  section 118935 119401 access_by_lua_no_postpone
  section 119401 119849 lua_transform_underscores_in_response_headers
  section 119849 121859 lua_check_client_abort
  section 121859 122323 lua_max_pending_timers
  section 122323 122885 lua_max_running_timers
  section 122885 325698 nginx api for lua
  section 127434 129091 introduction
  section 129091 130224 ngx.arg
  section 130224 132145 ngx.var.variable
  section 132145 133155 core constants
  section 133155 134263 http method constants
  section 134263 136773 http status constants
  section 136773 137358 nginx log level constants
  section 137358 138487 print
  section 138487 142158 ngx.ctx
  section 142158 153534 ngx.location.capture
  section 153534 155476 ngx.location.capture_multi
  section 155476 156043 ngx.status
  section 156043 158827 ngx.header.header
  section 158827 159469 ngx.resp.get_headers
  section 159469 160037 ngx.req.is_internal
  section 160037 160757 ngx.req.start_time
  section 160757 161182 ngx.req.http_version
  section 161182 162086 ngx.req.raw_header
  section 162086 162647 ngx.req.get_method
  section 162647 163216 ngx.req.set_method
  section 163216 165696 ngx.req.set_uri
  section 165696 166585 ngx.req.set_uri_args
  section 166585 168985 ngx.req.get_uri_args
  section 168985 171629 ngx.req.get_post_args
  section 171629 173857 ngx.req.get_headers
  section 173857 174894 ngx.req.set_header
  section 174894 175331 ngx.req.clear_header
  section 175331 177060 ngx.req.read_body
  section 177060 177618 ngx.req.discard_body
  section 177618 179094 ngx.req.get_body_data
  section 179094 180113 ngx.req.get_body_file
  section 180113 180770 ngx.req.set_body_data
  section 180770 181884 ngx.req.set_body_file
  section 181884 183882 ngx.req.init_body
  section 183882 185065 ngx.req.append_body
  section 185065 185911 ngx.req.finish_body
  section 185911 188019 ngx.req.socket
  section 188019 190347 ngx.exec
  section 190347 192476 ngx.redirect
  section 192476 193009 ngx.send_headers
  section 193009 193318 ngx.headers_sent
  section 193318 194888 ngx.print
  section 194888 195078 ngx.say
  section 195078 196286 ngx.log
  section 196286 197647 ngx.flush
  section 197647 199824 ngx.exit
  section 199824 201700 ngx.eof
  section 201700 202234 ngx.sleep
  section 202234 202675 ngx.escape_uri
  section 202675 203160 ngx.unescape_uri
  section 203160 204221 ngx.encode_args
  section 204221 205281 ngx.decode_args
  section 205281 205927 ngx.encode_base64
  section 205927 206406 ngx.decode_base64
  section 206406 207205 ngx.crc32_short
  section 207205 208005 ngx.crc32_long
  section 208005 209160 ngx.hmac_sha1
  section 209160 209816 ngx.md5
  section 209816 210311 ngx.md5_bin
  section 210311 210930 ngx.sha1_bin
  section 210930 211386 ngx.quote_sql_str
  section 211386 211911 ngx.today
  section 211911 212513 ngx.time
  section 212513 213242 ngx.now
  section 213242 213794 ngx.update_time
  section 213794 214405 ngx.localtime
  section 214405 215010 ngx.utctime
  section 215010 215651 ngx.cookie_time
  section 215651 216334 ngx.http_time
  section 216334 216992 ngx.parse_http_time
  section 216992 217312 ngx.is_subrequest
  section 217312 224079 ngx.re.match
  section 224079 226431 ngx.re.find
  section 226431 228839 ngx.re.gmatch
  section 228839 231639 ngx.re.sub
  section 231639 232804 ngx.re.gsub
  section 232804 235385 ngx.shared.dict
  section 235385 236662 ngx.shared.dict.get
  section 236662 237453 ngx.shared.dict.get_stale
  section 237453 240513 ngx.shared.dict.set
  section 240513 241269 ngx.shared.dict.safe_set
  section 241269 242109 ngx.shared.dict.add
  section 242109 242865 ngx.shared.dict.safe_add
  section 242865 243709 ngx.shared.dict.replace
  section 243709 244341 ngx.shared.dict.delete
  section 244341 246321 ngx.shared.dict.incr
  section 246321 247437 ngx.shared.dict.lpush
  section 247437 248064 ngx.shared.dict.rpush
  section 248064 248820 ngx.shared.dict.lpop
  section 248820 249575 ngx.shared.dict.rpop
  section 249575 250352 ngx.shared.dict.llen
  section 250352 251861 ngx.shared.dict.ttl
  section 251861 253293 ngx.shared.dict.expire
  section 253293 253989 ngx.shared.dict.flush_all
  section 253989 254908 ngx.shared.dict.flush_expired
  section 254908 255873 ngx.shared.dict.get_keys
  section 255873 256903 ngx.shared.dict.capacity
  section 256903 258677 ngx.shared.dict.free_space
  section 258677 259462 ngx.socket.udp
  section 259462 261956 udpsock:setpeername
  section 261956 262735 udpsock:send
  section 262735 264098 udpsock:receive
  section 264098 264758 udpsock:close
  section 264758 265242 udpsock:settimeout
  section 265242 265474 ngx.socket.stream
  section 265474 267863 ngx.socket.tcp
  section 267863 271109 tcpsock:connect
  section 271109 273388 tcpsock:sslhandshake
  section 273388 274835 tcpsock:send
  section 274835 277152 tcpsock:receive
  section 277152 281604 tcpsock:receiveuntil
  section 281604 282493 tcpsock:close
  section 282493 283278 tcpsock:settimeout
  section 283278 284259 tcpsock:settimeouts
  section 284259 284742 tcpsock:setoption
  section 284742 287155 tcpsock:setkeepalive
  section 287155 287963 tcpsock:getreusedtimes
  section 287963 288783 ngx.socket.connect
  section 288783 290243 ngx.get_phase
  section 290243 296436 ngx.thread.spawn
  section 296436 299386 ngx.thread.wait
  section 299386 300042 ngx.thread.kill
  section 300042 301834 ngx.on_abort
  section 301834 308642 ngx.timer.at
  section 308642 309585 ngx.timer.every
  section 309585 310100 ngx.timer.running_count
  section 310100 310605 ngx.timer.pending_count
  section 310605 311265 ngx.config.subsystem
  section 311265 311744 ngx.config.debug
  section 311744 312329 ngx.config.prefix
  section 312329 312869 ngx.config.nginx_version
  section 312869 313300 ngx.config.nginx_configure
  section 313300 313823 ngx.config.ngx_lua_version
  section 313823 314393 ngx.worker.exiting
  section 314393 314988 ngx.worker.pid
  section 314988 315541 ngx.worker.count
  section 315541 316229 ngx.worker.id
  section 316229 317156 ngx.semaphore
  section 317156 317795 ngx.balancer
  section 317795 318355 ngx.ssl
  section 318355 319103 ngx.ocsp
  section 319103 321721 ndk.set_var.directive
  section 321721 322450 coroutine.create
  section 322450 323198 coroutine.resume
  section 323198 323899 coroutine.yield
  section 323899 324536 coroutine.wrap
  section 324536 325116 coroutine.running
  section 325116 325698 coroutine.status
  section 325698 325979 obsolete sections
  section 325883 325979 special pcre sequences

dist ngx_lua_upstream-0.07
  aliases ngx_http_lua_upstream_module
  modules ngx_lua_upstream-0.07

module ngx_lua_upstream-0.07
  section 18 121 name
  section 121 171 status
  section 171 2529 synopsis
  section 2529 6761 functions
  section 2550 2802 get_upstreams
  section 2802 3396 get_servers
  section 3396 4404 get_primary_peers
  section 4404 4646 get_backup_peers
  section 4646 5924 set_peer_down
  section 5924 6761 current_upstream_name
  section 6761 6866 todo
  section 6866 7197 compatibility
  section 7197 8819 installation
  section 8819 8917 author
  section 8917 10371 copyright and license
  section 10371 10661 see also

dist ngx_postgres-1.0
  aliases ngx_postgres
  modules ngx_postgres-1.0 todo

module ngx_postgres-1.0
  section 18 255 about
  section 255 699 status
  section 699 5823 configuration directives
  section 733 967 postgres_server
  section 967 1596 postgres_keepalive
  section 1596 1869 postgres_pass
  section 1869 2273 postgres_query
  section 2273 3220 postgres_rewrite
  section 3220 4143 postgres_output
  section 4143 4811 postgres_set
  section 4811 5345 postgres_escape
  section 5345 5581 postgres_connect_timeout
  section 5581 5823 postgres_result_timeout
  section 5823 6191 configuration variables
  section 5856 5926 $postgres_columns
  section 5926 5990 $postgres_rows
  section 5990 6119 $postgres_affected
  section 6119 6191 $postgres_query
  section 6191 11113 sample configurations
  section 6222 6632 sample configuration #1
  section 6632 7156 sample configuration #2
  section 7156 7953 sample configuration #3
  section 7953 9011 sample configuration #4
  section 9011 10701 sample configuration #5
  section 10701 11113 sample configuration #6
  section 11113 11976 testing
  section 11976 13777 license
  section 13777 14124 see also

module todo

dist ngx_stream_lua-0.0.3
  aliases ngx_stream_lua_module
  modules dev_notes ngx_stream_lua-0.0.3

module dev_notes
  section 102 806 install
  section 806 1299 status

module ngx_stream_lua-0.0.3
  section 19 208 name
  section 208 296 status
  section 296 1829 synopsis
  section 1829 14183 description
  section 2123 5393 directives
  section 5393 6873 nginx api for lua
  section 6873 14183 tcpsock:shutdown
  section 14183 14949 todo
  section 14949 15245 nginx compatibility
  section 15245 16979 installation
  section 16979 17266 community
  section 17000 17136 english mailing list
  section 17136 17266 chinese mailing list
  section 17266 17449 code repository
  section 17449 17721 bugs and patches
  section 17721 18144 acknowledgments
  section 18144 19727 copyright and license
  section 19727 19978 see also

dist opm-0.0.4
  modules opm-0.0.4

module opm-0.0.4
  section 18 65 name
  section 65 96 status
  section 96 1895 synopsis
  section 1895 4589 description
  section 4589 8662 usage
  section 7334 7446 global installation
  section 7446 8662 local installation
  section 8662 8982 http proxy support
  section 8982 12210 author workflow
  section 12210 20830 file dist.ini
  section 12628 12845 name
  section 12845 13140 abstract
  section 13140 13555 version
  section 13555 14000 author
  section 14000 16315 license
  section 16315 18261 requires
  section 18261 18665 repo_link
  section 18665 18856 is_original
  section 18856 19082 lib_dir
  section 19082 19389 exclude_files
  section 19389 19999 main_module
  section 19999 20830 doc_dir
  section 20830 24156 file .opmrc
  section 21447 21930 github_account
  section 21930 23268 github_token
  section 23268 23711 upload_server
  section 23711 24156 download_server
  section 24156 25351 version number handling
  section 25351 26953 installation
  section 25373 26953 for opm
  section 26953 28405 security considerations
  section 28405 28674 credit
  section 28674 29669 todo
  section 29669 29755 author
  section 29755 31248 copyright and license

dist rds-csv-nginx-module-0.08
  aliases ngx_rds_csv ngx_http_rds_csv_filter_module
  modules rds-csv-nginx-module-0.08

module rds-csv-nginx-module-0.08
  aliases ngx_rds_csv
  section 18 141 name
  section 141 202 status
  section 202 371 synopsis
  section 371 906 description
  section 906 2811 directives
  section 928 1117 rds_csv
  section 1117 1493 rds_csv_row_terminator
  section 1493 1860 rds_csv_field_separator
  section 1860 2131 rds_csv_field_name_header
  section 2131 2561 rds_csv_content_type
  section 2561 2811 rds_csv_buffer_size
  section 2811 4017 installation
  section 4017 4546 compatibility
  section 4546 4632 author
  section 4632 6104 copyright & license
  section 6104 6359 see also

dist rds-json-nginx-module-0.15
  aliases ngx_rds_json ngx_http_rds_json_filter_module
  modules rds-json-nginx-module-0.15

module rds-json-nginx-module-0.15
  aliases ngx_rds_json
  section 18 140 name
  section 140 367 status
  section 367 873 synopsis
  section 873 1123 description
  section 1123 4999 directives
  section 1145 1332 rds_json
  section 1332 1744 rds_json_buffer_size
  section 1744 2207 rds_json_format
  section 2207 3093 rds_json_root
  section 3093 3372 rds_json_success_property
  section 3372 3863 rds_json_user_property
  section 3863 4099 rds_json_errcode_key
  section 4099 4330 rds_json_errstr_key
  section 4330 4707 rds_json_ret
  section 4707 4999 rds_json_content_type
  section 4999 6196 installation
  section 6196 7075 compatibility
  section 7075 7176 author
  section 7176 8636 copyright & license
  section 8636 8889 see also

dist redis2-nginx-module-0.14
  aliases ngx_redis2 ngx_http_redis2_module
  modules redis2-nginx-module-0.14

module redis2-nginx-module-0.14
  aliases ngx_redis2
  section 18 191 name
  section 191 249 status
  section 249 391 version
  section 391 2196 synopsis
  section 2196 3347 description
  section 3347 8450 directives
  section 3369 4093 redis2_query
  section 4093 4515 redis2_raw_query
  section 4515 5432 redis2_raw_queries
  section 5432 5811 redis2_literal_raw_query
  section 5811 6057 redis2_pass
  section 6057 6534 redis2_connect_timeout
  section 6534 6975 redis2_send_timeout
  section 6975 7419 redis2_read_timeout
  section 7419 7738 redis2_buffer_size
  section 7738 8450 redis2_next_upstream
  section 8450 9138 connection pool
  section 9138 9528 selecting redis databases
  section 9528 14875 lua interoperability
  section 12866 14875 pipelined redis requests by lua
  section 14875 16518 redis publish/subscribe support
  section 15561 16518 limitations for redis publish/subscribe
  section 16518 17325 performance tuning
  section 17325 18879 installation
  section 18879 19820 compatibility
  section 19820 20107 community
  section 19841 19977 english mailing list
  section 19977 20107 chinese mailing list
  section 20107 20374 bugs and patches
  section 20374 20514 source repository
  section 20514 20626 todo
  section 20626 20724 author
  section 20724 20874 getting involved
  section 20874 22366 copyright & license
  section 22366 22984 see also

dist redis-nginx-module-0.3.7
  aliases ngx_redis ngx_http_redis_module

dist resty-cli-0.20
  modules resty-cli-0.20

module resty-cli-0.20
  section 18 89 name
  section 89 1304 description
  section 1304 5971 synopsis
  section 5971 6864 installation
  section 6864 7631 test suite
  section 7631 7834 authors
  section 7834 9418 copyright and license

dist set-misc-nginx-module-0.31
  aliases ngx_set_misc ngx_http_set_misc_module
  modules set-misc-nginx-module-0.31

module set-misc-nginx-module-0.31
  aliases ngx_set_misc
  section 19 251 name
  section 251 399 version
  section 399 3508 synopsis
  section 3508 4174 description
  section 4174 30647 directives
  section 4196 4756 set_if_empty
  section 4756 6413 set_quote_sql_str
  section 6413 6749 set_quote_pgsql_str
  section 6749 8349 set_quote_json_str
  section 8349 10130 set_unescape_uri
  section 10130 10481 set_escape_uri
  section 10481 11874 set_hashed_upstream
  section 11874 13925 set_encode_base32
  section 13925 14396 set_base32_padding
  section 14396 14690 set_misc_base32_padding
  section 14690 15204 set_base32_alphabet
  section 15204 15590 set_decode_base32
  section 15590 17142 set_encode_base64
  section 17142 17523 set_decode_base64
  section 17523 19060 set_encode_hex
  section 19060 19434 set_decode_hex
  section 19434 21138 set_sha1
  section 21138 22865 set_md5
  section 22865 24195 set_hmac_sha1
  section 24195 25159 set_random
  section 25159 25952 set_secure_random_alphanum
  section 25952 26737 set_secure_random_lcalpha
  section 26737 28253 set_rotate
  section 28253 28886 set_local_today
  section 28886 29764 set_formatted_gmt_time
  section 29764 30647 set_formatted_local_time
  section 30647 31148 caveats
  section 31148 32950 installation
  section 32263 32950 building as a dynamic module
  section 32950 33936 compatibility
  section 33936 34447 report bugs
  section 34447 34591 source repository
  section 34591 34758 changes
  section 34758 35549 test suite
  section 35549 35705 getting involved
  section 35705 35911 author
  section 35911 37365 copyright & license
  section 37365 37524 see also

dist srcache-nginx-module-0.31
  aliases ngx_srcache ngx_http_srcache_filter_module
  modules srcache-nginx-module-0.31

module srcache-nginx-module-0.31
  aliases ngx_srcache
  section 18 220 name
  section 220 270 status
  section 270 422 version
  section 422 2283 synopsis
  section 2283 13116 description
  section 3397 4272 subrequest caching
  section 4272 8659 distributed memcached caching
  section 8659 10827 caching with redis
  section 10827 13116 cache key preprocessing
  section 13116 30983 directives
  section 13138 14420 srcache_fetch
  section 14420 16146 srcache_fetch_skip
  section 16146 17962 srcache_store
  section 17962 18622 srcache_store_max_size
  section 18622 19695 srcache_store_skip
  section 19695 20509 srcache_store_statuses
  section 20509 21188 srcache_store_ranges
  section 21188 21861 srcache_header_buffer_size
  section 21861 22775 srcache_store_hide_header
  section 22775 23736 srcache_store_pass_header
  section 23736 24556 srcache_methods
  section 24556 25600 srcache_ignore_content_encoding
  section 25600 26544 srcache_request_cache_control
  section 26544 27500 srcache_response_cache_control
  section 27500 27987 srcache_store_no_store
  section 27987 28474 srcache_store_no_cache
  section 28474 28957 srcache_store_private
  section 28957 30072 srcache_default_expire
  section 30072 30983 srcache_max_expire
  section 30983 33437 variables
  section 31004 32085 $srcache_expire
  section 32085 32677 $srcache_fetch_status
  section 32677 33437 $srcache_store_status
  section 33437 34136 known issues
  section 34136 35675 caveats
  section 35675 36679 trouble shooting
  section 36679 38530 installation
  section 38530 39241 compatibility
  section 39241 39528 community
  section 39262 39398 english mailing list
  section 39398 39528 chinese mailing list
  section 39528 39797 bugs and patches
  section 39797 39940 source repository
  section 39940 41136 test suite
  section 41136 41381 todo
  section 41381 41531 getting involved
  section 41531 41630 author
  section 41630 43094 copyright & license
  section 43094 43423 see also

dist xss-nginx-module-0.05
  aliases ngx_xss ngx_http_xss_filter_module
  modules xss-nginx-module-0.05

module xss-nginx-module-0.05
  aliases ngx_xss
  section 18 97 name
  section 97 595 synopsis
  section 595 903 description
  section 903 2271 directives
  section 925 1097 xss_get
  section 1097 1471 xss_callback_arg
  section 1471 1743 xss_override_status
  section 1743 1977 xss_check_status
  section 1977 2271 xss_input_types
  section 2271 3083 limitations
  section 3083 3200 trouble shooting
  section 3200 4399 installation
  section 4399 5034 compatibility
  section 5034 5106 todo
  section 5106 5188 author
  section 5188 6822 copyright & license
  section 6822 6995 see also

