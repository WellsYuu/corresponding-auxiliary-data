<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2021-2021 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<dt-api group="responsive">
	<name>responsive.rebuild()</name>
	<summary>Recalculate the column breakpoints based on the class information of the column header cells</summary>
	<since>1.0.4</since>

	<type type="function">
		<signature>responsive.rebuild()</signature>
		<description>Recalculate the column breakpoints based on the class information of the column header cells</description>
		<returns type="DataTables.Api">DataTables API instance</returns>
	</type>

	<description>
		It can be useful to be able to control the column breakpoint information that Responsive responds to after a DataTable has been initialised. For example you may wish to provide user control over which columns are visible. This can be done using code that will add or remove the class `never` ([the other classes](http://datatables.net/extensions/responsive/classes) can also be used) and then calling this method.

		You will also likely wish to immediately call `r-api responsive.recalc()` to have Responsive update the display for the change in classes. Having this as a separate call allows multiple changes to be drawn at the same time to help improve performance.
	</description>

	<example title="Hide a column completely by adding a class name and rebuilding"><![CDATA[

var table = $('#example').DataTable();

$( table.column( 2 ).header() ).addClass( 'never' );

table.responsive.rebuild();
table.responsive.recalc();

]]></example>

</dt-api>