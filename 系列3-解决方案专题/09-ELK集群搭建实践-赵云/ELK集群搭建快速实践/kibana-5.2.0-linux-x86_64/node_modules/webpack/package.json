{
  "_args": [
    [
      {
        "raw": "webpack@github:elastic/webpack#fix/query-params-for-aliased-loaders",
        "scope": null,
        "escapedName": "webpack",
        "name": "webpack",
        "rawSpec": "github:elastic/webpack#fix/query-params-for-aliased-loaders",
        "spec": "github:elastic/webpack#fix/query-params-for-aliased-loaders",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:elastic/webpack.git#fix/query-params-for-aliased-loaders",
          "sshUrl": "git+ssh://git@github.com/elastic/webpack.git#fix/query-params-for-aliased-loaders",
          "httpsUrl": "git+https://github.com/elastic/webpack.git#fix/query-params-for-aliased-loaders",
          "gitUrl": "git://github.com/elastic/webpack.git#fix/query-params-for-aliased-loaders",
          "shortcut": "github:elastic/webpack#fix/query-params-for-aliased-loaders",
          "directUrl": "https://raw.githubusercontent.com/elastic/webpack/fix%2Fquery-params-for-aliased-loaders/package.json"
        }
      },
      "/home/vagrant/kibana/build/kibana"
    ]
  ],
  "_from": "git://github.com/elastic/webpack.git#d305ebb3d6c0bcd94651810cf5c09e6ccfb4c26d",
  "_id": "webpack@1.12.15",
  "_inCache": true,
  "_location": "/webpack",
  "_phantomChildren": {
    "camelcase": "1.2.1",
    "cliui": "2.1.0",
    "decamelize": "1.2.0",
    "has-flag": "1.0.0",
    "source-map": "0.5.6",
    "uglify-to-browserify": "1.0.2",
    "wordwrap": "0.0.2"
  },
  "_requested": {
    "raw": "webpack@github:elastic/webpack#fix/query-params-for-aliased-loaders",
    "scope": null,
    "escapedName": "webpack",
    "name": "webpack",
    "rawSpec": "github:elastic/webpack#fix/query-params-for-aliased-loaders",
    "spec": "github:elastic/webpack#fix/query-params-for-aliased-loaders",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:elastic/webpack.git#fix/query-params-for-aliased-loaders",
      "sshUrl": "git+ssh://git@github.com/elastic/webpack.git#fix/query-params-for-aliased-loaders",
      "httpsUrl": "git+https://github.com/elastic/webpack.git#fix/query-params-for-aliased-loaders",
      "gitUrl": "git://github.com/elastic/webpack.git#fix/query-params-for-aliased-loaders",
      "shortcut": "github:elastic/webpack#fix/query-params-for-aliased-loaders",
      "directUrl": "https://raw.githubusercontent.com/elastic/webpack/fix%2Fquery-params-for-aliased-loaders/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/elastic/webpack.git#d305ebb3d6c0bcd94651810cf5c09e6ccfb4c26d",
  "_shasum": "bbd91dfa9ddb8b5b926b770d71f1203b46eed3b2",
  "_shrinkwrap": null,
  "_spec": "webpack@github:elastic/webpack#fix/query-params-for-aliased-loaders",
  "_where": "/home/vagrant/kibana/build/kibana",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bin": {
    "webpack": "./bin/webpack.js"
  },
  "bugs": {
    "url": "https://github.com/webpack/webpack/issues"
  },
  "dependencies": {
    "async": "^1.3.0",
    "clone": "^1.0.2",
    "enhanced-resolve": "github:elastic/enhanced-resolve#fix/query-params-for-aliased-loaders",
    "esprima": "^2.5.0",
    "interpret": "^0.6.4",
    "loader-utils": "^0.2.11",
    "memory-fs": "~0.3.0",
    "mkdirp": "~0.5.0",
    "node-libs-browser": ">= 0.4.0 <=0.6.0",
    "optimist": "~0.6.0",
    "supports-color": "^3.1.0",
    "tapable": "~0.1.8",
    "uglify-js": "~2.6.0",
    "watchpack": "^0.2.1",
    "webpack-core": "~0.6.0"
  },
  "description": "Packs CommonJs/AMD modules for the browser. Allows to split your codebase into multiple bundles, which can be loaded on demand. Support loaders to preprocess files, i.e. json, jade, coffee, css, less, ... and your custom stuff.",
  "devDependencies": {
    "benchmark": "^1.0.0",
    "bundle-loader": "~0.5.0",
    "codecov.io": "^0.1.2",
    "coffee-loader": "~0.7.1",
    "coffee-script": "^1.10.0",
    "component-webpack-plugin": "~0.2.0",
    "coveralls": "^2.11.2",
    "css-loader": "~0.15.0",
    "diff": "^2.0.2",
    "eslint": "^1.1.0",
    "eslint-plugin-nodeca": "^1.0.3",
    "express": "~4.13.1",
    "extract-text-webpack-plugin": "~0.8.0",
    "file-loader": "~0.8.0",
    "glob": "^5.0.14",
    "i18n-webpack-plugin": "~0.2.0",
    "istanbul": "^0.3.13",
    "jade": "^1.11.0",
    "jade-loader": "~0.7.0",
    "js-beautify": "^1.5.10",
    "json-loader": "~0.5.1",
    "less": "^2.5.1",
    "less-loader": "^2.0.0",
    "mocha": "~2.2.0",
    "mocha-lcov-reporter": "0.0.2",
    "raw-loader": "~0.5.0",
    "script-loader": "~0.6.0",
    "should": "^7.0.2",
    "style-loader": "~0.12.0",
    "url-loader": "~0.5.0",
    "val-loader": "~0.5.0",
    "vm-browserify": "~0.0.0",
    "webpack-dev-middleware": "^1.0.0",
    "worker-loader": "~0.6.0"
  },
  "engines": {
    "node": ">=0.6"
  },
  "files": [
    "lib/",
    "bin/",
    "buildin/",
    "hot/",
    "web_modules/"
  ],
  "gitHead": "d305ebb3d6c0bcd94651810cf5c09e6ccfb4c26d",
  "homepage": "https://github.com/webpack/webpack",
  "license": "MIT",
  "main": "lib/webpack.js",
  "name": "webpack",
  "optionalDependencies": {},
  "readme": "[![webpack](https://webpack.github.io/assets/logo.png)](https://webpack.github.io)\n\n\n[![NPM version][npm-image]][npm-url] [![Gitter chat][gitter-image]][gitter-url] [![Downloads][downloads-image]][downloads-url]\n[![NPM][nodei-image]][nodei-url]\n\nbuild\n[![Build Status][travis-image]][travis-url] [![Appveyor Status][appveyor-image]][appveyor-url]  [![Coverage Status][coveralls-image]][coveralls-url]\n\ndependencies\n[![Dependency Status][david-image]][david-url] [![devDependency Status][david-dev-image]][david-dev-url] [![peerDependency Status][david-peer-image]][david-peer-url]\n\ndonation\n[![gratipay donate button][gratipay-image]][gratipay-url] [![Donate to sokra][donate-image]][donate-url]\n\n\n[documentation](https://webpack.github.io/docs/?utm_source=github&utm_medium=readme&utm_campaign=top)\n\n# Introduction\n\nwebpack is a bundler for modules. The main purpose is to bundle JavaScript\nfiles for usage in a browser, yet it is also capable of transforming, bundling,\nor packaging just about any resource or asset.\n\n\n**TL; DR**\n\n* Bundles both [CommonJs](http://www.commonjs.org/specs/modules/1.0/) and [AMD](https://github.com/amdjs/amdjs-api/wiki/AMD) modules (even combined).\n* Can create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).\n* Dependencies are resolved during compilation reducing the runtime size.\n* Loaders can preprocess files while compiling, e.g. coffeescript to JavaScript, handlebars strings to compiled functions, images to Base64, etc.\n* Highly modular plugin system to do whatever else your application requires.\n\n# Getting Started\n\nCheck out webpack's [documentation](https://webpack.github.io/docs/?utm_source=github&utm_medium=readme&utm_campaign=trdr) for quick Getting Started guide, in-depth usage,\ntutorials and resources.\n\n# Installation\n\nproject:\n`npm install webpack --save-dev`\n\nglobal:\n`npm install webpack -g`\nUsage\nhttps://webpack.github.io/docs/tutorials/getting-started/\n\n# Examples\n\nTake a look at the [`examples`](https://github.com/webpack/webpack/tree/master/examples) folder.\n\n# Features\n\n## Plugins\n\nwebpack has a [rich plugin\ninterface](https://webpack.github.io/docs/plugins.html). Most of the features\nwithin webpack itself use this plugin interface. This makes webpack very\n**flexible**.\n\n\n## Performance\n\nwebpack uses async I/O and has multiple caching levels. This makes webpack fast\nand incredibly **fast** on incremental compilations.\n\n## Loaders\n\nwebpack enables use of loaders to preprocess files. This allows you to bundle\n**any static resource** way beyond JavaScript. You can easily [write your own\nloaders](https://webpack.github.io/docs/loaders.html) using node.js.\n\nLoaders are activated by using `loadername!` prefixes in `require()` statements,\nor are automatically applied via regex from your webpack configuration.\n\nPlease see [Using Loaders](https://webpack.github.io/docs/using-loaders.html) for more information.\n\n**basic**\n* [`json`](https://github.com/webpack/json-loader): Loads file as JSON\n* [`raw`](https://github.com/webpack/raw-loader): Loads raw content of a file (as utf-8)\n* [`val`](https://github.com/webpack/val-loader): Executes code as module and consider exports as JavaScript code\n* [`script`](https://github.com/webpack/script-loader): Executes a JavaScript file once in global context (like in script tag), requires are not parsed.\n\n**packaging**\n* [`file`](https://github.com/webpack/file-loader): Emits the file into the output folder and returns the (relative) url.\n* [`url`](https://github.com/webpack/url-loader): The url loader works like the file loader, but can return a Data Url if the file is smaller than a limit.\n* [`image`](https://github.com/tcoopman/image-webpack-loader): Compresses your images. Ideal to use together with `file` or `url`.\n* [`svgo-loader`](https://github.com/pozadi/svgo-loader): Compresses SVG images using [svgo](https://github.com/svg/svgo) library\n* [`baggage`](https://github.com/deepsweet/baggage-loader): Automatically require any resources related to the required one\n* [`polymer-loader`](https://github.com/JonDum/polymer-loader): Process HTML & CSS with preprocessor of choice and `require()` Web Components like first-class modules.\n\n**dialects**\n* [`coffee`](https://github.com/webpack/coffee-loader): Loads coffee-script like JavaScript\n* [`babel`](https://github.com/babel/babel-loader): Turn ES6 code into vanilla ES5 using [Babel](https://github.com/babel/babel).\n* [`livescript`](https://github.com/appedemic/livescript-loader): Loads LiveScript like JavaScript\n* [`sweetjs`](https://github.com/jlongster/sweetjs-loader): Use sweetjs macros.\n* [`traceur`](https://github.com/jupl/traceur-loader): Use future JavaScript features with [Traceur](https://github.com/google/traceur-compiler).\n* [`typescript`](https://github.com/andreypopp/typescript-loader): Loads TypeScript like JavaScript.\n\n**templating**\n* [`html`](https://github.com/webpack/html-loader): Exports HTML as string, require references to static resources.\n* [`jade`](https://github.com/webpack/jade-loader): Loads jade template and returns a function\n* [`handlebars`](https://github.com/altano/handlebars-loader): Loads handlebars template and returns a function\n* [`ractive`](https://github.com/rstacruz/ractive-loader): Pre-compiles Ractive templates for interactive DOM manipulation\n* [`markdown`](https://github.com/peerigon/markdown-loader): Compiles Markdown to HTML\n* [`ng-cache`](https://github.com/teux/ng-cache-loader): Puts HTML partials in the Angular's $templateCache\n\n**styling**\n* [`style`](https://github.com/webpack/style-loader): Add exports of a module as style to DOM\n* [`css`](https://github.com/webpack/css-loader): Loads css file with resolved imports and returns css code\n* [`cssnext`](https://github.com/cssnext/cssnext-loader): Loads and compiles a css file using [cssnext](http://cssnext.io/)\n* [`less`](https://github.com/webpack/less-loader): Loads and compiles a less file\n* [`sass`](https://github.com/jtangelder/sass-loader): Loads and compiles a scss file\n* [`stylus`](https://github.com/shama/stylus-loader): Loads and compiles a stylus file\n\n**misc**\n* [`po`](https://github.com/dschissler/po-loader): Loads a PO gettext file and returns JSON\n* [`mocha`](https://github.com/webpack/mocha-loader): Do tests with mocha in browser or node.js\n* [`eslint`](https://github.com/MoOx/eslint-loader): PreLoader for linting code using ESLint.\n* [`jshint`](https://github.com/webpack/jshint-loader): PreLoader for linting code.\n* [`jscs`](https://github.com/unindented/jscs-loader): PreLoader for style checking.\n* [`injectable`](https://github.com/jauco/webpack-injectable): Allow to inject dependencies into modules\n* [`transform`](https://github.com/webpack/transform-loader): Use browserify transforms as loader.\n\nFor the full list of loaders, see [list of loaders](https://webpack.github.io/docs/list-of-loaders.html).\n\n## Module Format (AMD/CommonJS)\n\nwebpack supports **both** AMD and CommonJS module styles. It performs clever static\nanalysis on the AST of your code. It even has an evaluation engine to evaluate\nsimple expressions. This allows you to **support most existing libraries** out of the box.\n\n## Code Splitting\n\nwebpack allows you to split your codebase into multiple chunks. Chunks are\nloaded asynchronously at runtime. This reduces the initial loading time.\n\n[Code Splitting documentation](https://webpack.github.io/docs/code-splitting.html)\n\n## Optimizations\n\nwebpack can do many optimizations to **reduce the output size of your\nJavaScript** by deduplicating frequently used modules, minifying, and giving\nyou full control of what is loaded initially and what is loaded at runtime\nthrough code splitting. It can also can make your code chunks **cache\nfriendly** by using hashes.\n\n[Optimization documentation](https://webpack.github.io/docs/optimization.html)\n\nwebpack optimizes in several ways. It also makes your chunks **cache-friendly** by using hashes.\n\n# A small example of what's possible\n\n``` javascript\n// webpack is a module bundler.\n// This means webpack takes modules with dependencies\n// and emits static assets representing those modules.\n\n// Dependencies can be written in CommonJs\nvar commonjs = require(\"./commonjs\");\n// or in AMD\ndefine([\"amd-module\", \"../file\"], function (amdModule, file) {\n\t// while previous constructs are sync,\n\t// this is async\n\trequire([\"big-module/big/file\"], function (big) {\n\t\t // For async dependencies, webpack splits\n\t\t // your application into multiple \"chunks\".\n\t\t // This part of your application is\n\t\t // loaded on demand (code-splitting).\n\t\tvar stuff = require(\"../my/stuff\");\n\t\t// \"../my/stuff\" is also loaded on-demand\n\t\t//  because it's in the callback function\n\t\t//  of the AMD require.\n\t});\n});\n\n\nrequire(\"coffee!./cup.coffee\");\n// \"Loaders\" are used to preprocess files.\n// They can be prefixed in the require call\n// or configured in the configuration.\nrequire(\"./cup\");\n// This does the same when you add \".coffee\" to the extensions\n// and configure the \"coffee\" loader for /\\.coffee$/\n\nfunction loadTemplate (name) {\n\treturn require(\"./templates/\" + name + \".jade\");\n\t// Many expressions are supported in require calls.\n\t// A clever parser extracts information and concludes\n\t// that everything in \"./templates\" that matches\n\t// /\\.jade$/ should be included in the bundle, as it\n\t// can be required.\n}\n\n\n// ...and you can combine everything.\nfunction loadTemplateAsync (name, callback) {\n\trequire([\"bundle?lazy!./templates/\" + name + \".jade\"],\n\t  function (templateBundle) {\n\t          templateBundle(callback);\n\t});\n}\n```\n\n## Documentation\n\n[documentation](https://webpack.github.io/docs/?utm_source=github&utm_medium=readme&utm_campaign=documentation)\n\n\n## Changelog\n\n[changelog](https://webpack.github.io/docs/changelog.html)\n\n\n## Tests\n\nYou can run the Node tests with `npm test`.\n\nYou can run the browser tests:\n\n```\ncd test/browsertests\nnode build\n```\n\nand open `tests.html` in the browser.\n\n## Contribution\n\nMost of the time, if webpack is not working correctly for you it is a simple configuration issue.\n\nIf you are still having difficulty after looking over your configuration carefully, please post\na question to [StackOverflow with the webpack tag](http://stackoverflow.com/tags/webpack). Questions\nthat include your webpack.config.js and relevant files are more likely to receive responses.\n\nIf you have discovered a bug or have a feature suggestion, feel free to create an issue on Github.\n\nIf you create a loader or plugin, please consider open sourcing it, putting it\non NPM and following the `x-loader`, `x-plugin` convention.\n\nYou are also welcome to correct any spelling mistakes or any language issues.\n\nIf you want to discuss something or just need help, [here is our gitter.im room](https://gitter.im/webpack/webpack).\n\n## License\n\nCopyright (c) 2012-2015 Tobias Koppers\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n\n## Thanks to\n\n(In chronological order)\n\n* @google for [Google Web Toolkit (GWT)](https://code.google.com/p/google-web-toolkit), which aims to compile Java to JavaScript. It features a similar [Code Splitting](https://code.google.com/p/google-web-toolkit/wiki/CodeSplitting) as webpack.\n* @medikoo for [modules-webmake](https://github.com/medikoo/modules-webmake), which is a similar project. webpack was born because I wanted Code Splitting for modules-webpack. Interestingly the [Code Splitting issue is still open](https://github.com/medikoo/modules-webmake/issues/7) (thanks also to @Phoscur for the discussion).\n* @substack for [browserify](http://browserify.org/), which is a similar project and source for many ideas.\n* @jrburke for [require.js](http://requirejs.org/), which is a similar project and source for many ideas.\n* @defunctzombie for the [browser-field spec](https://gist.github.com/defunctzombie/4339901), which makes modules available for node.js, browserify and webpack.\n* Every early webpack user, which contributed to webpack by writing issues or PRs. You influenced the direction...\n* @shama, @jhnns and @sokra for maintaining this project\n* Everyone who has written a loader for webpack. You are the ecosystem...\n* Everyone I forgot to mention here, but also influenced webpack.\n\n\n## Sponsor\n\nThis is a free-time project. The time I invest in it fluctuates. If you use webpack for a serious task, and you'd like me to invest more time on it, please donate. This project increases your income/productivity too. It makes development and applications faster and it reduces the required bandwidth.\n\nI'm very thankful for every dollar. If you leave your username or email, I may show my thanks by giving you extra support.\n\n\n## Dependencies\n\n* [esprima](http://esprima.org/)\n* [enhanced-resolve](https://github.com/webpack/enhanced-resolve)\n* [uglify-js](https://github.com/mishoo/UglifyJS)\n* [mocha](https://github.com/visionmedia/mocha)\n* [should](https://github.com/visionmedia/should.js)\n* [optimist](https://github.com/substack/node-optimist)\n* [async](https://github.com/caolan/async)\n* [mkdirp](https://github.com/substack/node-mkdirp)\n* [clone](https://github.com/pvorb/node-clone)\n\n\n[travis-url]: http://travis-ci.org/webpack/webpack\n[travis-image]: https://img.shields.io/travis/webpack/webpack.svg\n[appveyor-url]: https://ci.appveyor.com/project/sokra/webpack/branch/master\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/github/webpack/webpack?svg=true\n[coveralls-url]: https://coveralls.io/r/webpack/webpack/\n[coveralls-image]: https://img.shields.io/coveralls/webpack/webpack.svg\n[npm-url]: https://npmjs.org/package/webpack\n[npm-image]: https://img.shields.io/npm/v/webpack.svg\n[downloads-image]: http://img.shields.io/npm/dm/webpack.svg\n[downloads-url]: http://badge.fury.io/js/webpack\n[david-url]: https://david-dm.org/webpack/webpack\n[david-image]: https://img.shields.io/david/webpack/webpack.svg\n[david-dev-url]: https://david-dm.org/webpack/webpack#info=devDependencies\n[david-dev-image]: https://david-dm.org/webpack/webpack/dev-status.svg\n[david-peer-url]: https://david-dm.org/webpack/webpack#info=peerDependencies\n[david-peer-image]: https://david-dm.org/webpack/webpack/peer-status.svg\n[nodei-image]: https://nodei.co/npm/webpack.png?downloads=true&downloadRank=true&stars=true\n[nodei-url]: https://nodei.co/npm/webpack\n[donate-url]: http://sokra.github.io/\n[donate-image]: https://img.shields.io/badge/donate-sokra-brightgreen.svg\n[gratipay-url]: https://gratipay.com/webpack/\n[gratipay-image]: https://img.shields.io/gratipay/webpack.svg\n[gitter-url]: https://gitter.im/webpack/webpack\n[gitter-image]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack/webpack.git"
  },
  "scripts": {
    "beautify": "node ./scripts/beautify-rewrite",
    "beautify-lint": "node ./scripts/beautify-check",
    "cover": "istanbul cover -x *.runtime.js node_modules/mocha/bin/_mocha",
    "lint": "eslint lib bin hot scripts",
    "precover": "npm run lint && npm run beautify-lint",
    "pretest": "npm run lint && npm run beautify-lint",
    "publish-patch": "npm run lint && npm run beautify-lint && mocha && npm version patch && git push && git push --tags && npm publish",
    "test": "mocha",
    "travis": "npm run cover -- --report lcovonly"
  },
  "version": "1.12.15",
  "web": "lib/webpack.web.js"
}
